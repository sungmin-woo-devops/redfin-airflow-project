<?xml version="1.0" encoding="UTF-8" standalone="no"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" version="2.0">

<channel>
	<title>Artificial Intelligence</title>
	<atom:link href="https://aws.amazon.com/blogs/machine-learning/feed/" rel="self" type="application/rss+xml"/>
	<link>https://aws.amazon.com/blogs/machine-learning/</link>
	<description>Official Machine Learning Blog of Amazon Web Services</description>
	<lastBuildDate>Fri, 22 Aug 2025 20:49:12 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>Enhance Geospatial Analysis and GIS Workflows with Amazon Bedrock Capabilities</title>
		<link>https://aws.amazon.com/blogs/machine-learning/enhance-geospatial-analysis-and-gis-workflows-with-amazon-bedrock-capabilities/</link>
					
		
		<dc:creator><![CDATA[Dave Horne]]></dc:creator>
		<pubDate>Fri, 22 Aug 2025 17:54:38 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Intermediate (200)]]></category>
		<guid isPermaLink="false">95fdc04fd38d6606c5a3ffd169c2f1f3ce512211</guid>

					<description>Applying emerging technologies to the geospatial domain offers a unique opportunity to create transformative user experiences and intuitive workstreams for users and organizations to deliver on their missions and responsibilities. In this post, we explore how you can integrate existing systems with Amazon Bedrock to create new workflows to unlock efficiencies insights. This integration can benefit technical, nontechnical, and leadership roles alike.</description>
										<content:encoded>&lt;p&gt;As data becomes more abundant and information systems grow in complexity, stakeholders need solutions that reveal quality insights. Applying emerging technologies to the geospatial domain offers a unique opportunity to create transformative user experiences and intuitive workstreams for users and organizations to deliver on their missions and responsibilities.&lt;/p&gt; 
&lt;p&gt;In this post, we explore how you can integrate existing systems with &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt; to create new workflows to unlock efficiencies insights. This integration can benefit technical, nontechnical, and leadership roles alike.&lt;/p&gt; 
&lt;h2&gt;Introduction to geospatial data&lt;/h2&gt; 
&lt;p&gt;Geospatial data is associated with a position relative to Earth (latitude, longitude, altitude). Numerical and structured geospatial data formats can be categorized as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Vector data&lt;/strong&gt; – Geographical features, such as roads, buildings, or city boundaries, represented as points, lines, or polygons&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Raster data&lt;/strong&gt; – Geographical information, such as satellite imagery, temperature, or elevation maps, represented as a grid of cells&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tabular data&lt;/strong&gt; – Location-based data, such as descriptions and metrics (average rainfall, population, ownership), represented in a table of rows and columns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Geospatial data sources might also contain natural language text elements for unstructured attributes and metadata for categorizing and describing the record in question. Geospatial Information Systems (GIS) provide a way to store, analyze, and display geospatial information. In GIS applications, this information is frequently presented with a map to visualize streets, buildings, and vegetation.&lt;/p&gt; 
&lt;h2&gt;LLMs and Amazon Bedrock&lt;/h2&gt; 
&lt;p&gt;Large language models (LLMs) are a subset of foundation models (FMs) that can transform input (usually text or image, depending on model modality) into outputs (generally text) through a process called &lt;em&gt;generation&lt;/em&gt;. Amazon Bedrock is a comprehensive, secure, and flexible service for building &lt;a href="https://aws.amazon.com/generative-ai/" target="_blank" rel="noopener noreferrer"&gt;generative AI&lt;/a&gt; applications and agents.&lt;/p&gt; 
&lt;p&gt;LLMs work in many generalized tasks involving natural language. Some common LLM use cases include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Summarization&lt;/strong&gt; – Use a model to summarize text or a document.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Q&amp;amp;A&lt;/strong&gt; – Use a model to answer questions about data or facts from context provided during training or inference using Retrieval Augmented Generation (RAG).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reasoning&lt;/strong&gt; – Use a model to provide chain of thought reasoning to assist a human with decision-making and hypothesis evaluation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data generation&lt;/strong&gt; – Use a model to generate synthetic data for testing simulations or hypothetical scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Content generation&lt;/strong&gt; – Use a model to draft a report from insights derived from an Amazon Bedrock knowledge base or a user’s prompt.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI agent and tool orchestration&lt;/strong&gt; – Use a model to plan the invocation of other systems and processes. After other systems are invoked by an agent, the agent’s output can then be used as context for further LLM generation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;GIS can implement these capabilities to create value and improve user experiences. Benefits can include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Live decision-making&lt;/strong&gt; – Taking real-time insights to support immediate decision-making, such as emergency response coordination and traffic management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Research and analysis&lt;/strong&gt; – In-depth analysis that humans or systems can identify, such as trend analysis, patterns and relationships, and environmental monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Planning&lt;/strong&gt; – Using research and analysis for informed long-term decision-making, such as infrastructure development, resource allocation, and environmental regulation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Augmenting GIS and workflows with LLM capabilities leads to simpler analysis and exploration of data, discovery of new insights, and improved decision-making. Amazon Bedrock provides a way to host and invoke models as well as integrate the AI models with surrounding infrastructure, which we elaborate on in this post.&lt;/p&gt; 
&lt;h2&gt;Combining GIS and AI through RAG and agentic workflows&lt;/h2&gt; 
&lt;p&gt;LLMs are trained with large amounts of generalized information to discover patterns in how language is produced. To improve the performance of LLMs for specific use cases, approaches such as RAG and agentic workflows have been created. Retrieving policies and general knowledge for geospatial use cases can be accomplished with RAG, whereas calculating and analyzing GIS data would require an agentic workflow. In this section, we expand upon both RAG and agentic workflows in the context of geospatial use cases.&lt;/p&gt; 
&lt;h3&gt;Retrieval Augmented Generation&lt;/h3&gt; 
&lt;p&gt;With RAG, you can dynamically inject contextual information from a knowledge base during model invocation.&lt;/p&gt; 
&lt;p&gt;RAG supplements a user-provided prompt with data sourced from a knowledge base (collection of documents). Amazon Bedrock offers managed knowledge bases to data sources, such as &lt;a href="http://aws.amazon.com/s3" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Storage Service&lt;/a&gt; (Amazon S3) and SharePoint, so you can provide supplemental information, such as city development plans, intelligence reports, or policies and regulations, when your AI assistant is generating a response for a user.&lt;/p&gt; 
&lt;p&gt;Knowledge bases are ideal for unstructured documents with information stored in natural language. When your AI model responds to a user with information sourced from RAG, it can provide references and citations to its source material. The following diagram shows how the systems connect together.&lt;/p&gt; 
&lt;p&gt;&lt;img class="alignnone wp-image-113887 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-1-10.png" alt="" width="898" height="532"&gt;&lt;/p&gt; 
&lt;p&gt;Because geospatial data is often structured and in a GIS, you can connect the GIS to the LLM using tools and agents instead of knowledge bases.&lt;/p&gt; 
&lt;h3&gt;Tools and agents (to control a UI and a system)&lt;/h3&gt; 
&lt;p&gt;Many LLMs, such as &lt;a href="https://aws.amazon.com/bedrock/claude/" target="_blank" rel="noopener noreferrer"&gt;Anthropic’s Claude&lt;/a&gt; on Amazon Bedrock, make it possible to provide a description of tools available so your AI model can generate text to invoke external processes. These processes might retrieve live information, such as the current weather in a location or querying a structured data store, or might control external systems, such as starting a workflow or adding layers to a map. Some common geospatial functionality that you might want to integrate with your LLM using tools include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Performing mathematical calculations like the distance between coordinates, filtering datasets based on numeric values, or calculating derived fields&lt;/li&gt; 
 &lt;li&gt;Deriving information from predictive analysis models&lt;/li&gt; 
 &lt;li&gt;Looking up points of interest in structured data stores&lt;/li&gt; 
 &lt;li&gt;Searching content and metadata in unstructured data stores&lt;/li&gt; 
 &lt;li&gt;Retrieving real-time geospatial data, like traffic, directions, or estimated time to reach a destination&lt;/li&gt; 
 &lt;li&gt;Visualizing distances, points of interest, or paths&lt;/li&gt; 
 &lt;li&gt;Submitting work outputs such as analytic reports&lt;/li&gt; 
 &lt;li&gt;Starting workflows, like ordering supplies or adjusting supply chain&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Tools are often implemented in &lt;a href="https://aws.amazon.com/lambda/" target="_blank" rel="noopener noreferrer"&gt;AWS Lambda&lt;/a&gt; functions. Lambda runs code without the complexity and overhead of running servers. It handles the infrastructure management, enabling faster development, improved performance, enhanced security, and cost-efficiency.&lt;/p&gt; 
&lt;p&gt;Amazon Bedrock offers the feature &lt;a href="https://aws.amazon.com/bedrock/agents/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Agents&lt;/a&gt; to simplify the orchestration and integration with your geospatial tools. Amazon Bedrock agents follow instructions for LLM reasoning to break down a user prompt into smaller tasks and perform actions against identified tasks from action providers. The following diagram illustrates how Amazon Bedrock Agents works.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113876 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-2-5.png" alt="" width="1622" height="912"&gt;&lt;/p&gt; 
&lt;p&gt;The following diagram shows how Amazon Bedrock Agents can enhance GIS solutions.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113877 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-3-7.png" alt="" width="1420" height="751"&gt;&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;The following demonstration applies the concepts we’ve discussed to an earthquake analysis agent as an example. This example deploys an Amazon Bedrock agent with a knowledge base based on &lt;a href="http://aws.amazon.com/redshift" target="_blank" rel="noopener noreferrer"&gt;Amazon Redshift&lt;/a&gt;. The Redshift instance has two tables. One table is for earthquakes, which includes date, magnitude, latitude, and longitude. The second table holds the counites in California, described as polygon shapes. The geospatial capabilities of Amazon Redshift can relate these datasets to answer queries like which county had the most recent earthquake or which county has had the most earthquakes in the last 20 years. The Amazon Bedrock agent can generate these geospatially based queries based on natural language.&lt;/p&gt; 
&lt;p&gt;This script creates an end-to-end pipeline that performs the following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Processes geospatial data.&lt;/li&gt; 
 &lt;li&gt;Sets up cloud infrastructure.&lt;/li&gt; 
 &lt;li&gt;Loads and configures the spatial database.&lt;/li&gt; 
 &lt;li&gt;Creates an AI agent for spatial analysis.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;In the following sections, we create this agent and test it out.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;To implement this approach, you must have an AWS account with the appropriate &lt;a href="https://aws.amazon.com/iam/" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management&lt;/a&gt; (IAM) permissions for Amazon Bedrock, Amazon Redshift, and Amazon S3.&lt;/p&gt; 
&lt;p&gt;Additionally, complete the following steps to set up the &lt;a href="http://aws.amazon.com/cli" target="_blank" rel="noopener noreferrer"&gt;AWS Command Line Interface&lt;/a&gt; (AWS CLI):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Confirm you have access to the latest version of the AWS CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/signin/latest/userguide/command-line-sign-in.html" target="_blank" rel="noopener noreferrer"&gt;Sign in&lt;/a&gt; to the AWS CLI with your credentials.&lt;/li&gt; 
 &lt;li&gt;Make sure ./jq is installed. If not, use the following command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;yum -y install jq&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Set up error handling&lt;/h2&gt; 
&lt;p&gt;Use the following code for the initial setup and error handling:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-shell"&gt;#!/usr/bin/env bash
set -ex

LOG_FILE="deployment_$(date +%Y%m%d_%H%M%S).log"
touch "$LOG_FILE"

handle_error() {
&amp;nbsp;&amp;nbsp; &amp;nbsp;local exit_code=$?
&amp;nbsp;&amp;nbsp; &amp;nbsp;local line_number=$1
&amp;nbsp;&amp;nbsp; &amp;nbsp;if [ $exit_code -ne 0 ]; then
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;log_error "Failed at line $line_number with exit code $exit_code"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;exit $exit_code
&amp;nbsp;&amp;nbsp; &amp;nbsp;fi
}
trap 'handle_error $LINENO' ERR&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code performs the following functions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creates a timestamped log file&lt;/li&gt; 
 &lt;li&gt;Sets up error trapping that captures line numbers&lt;/li&gt; 
 &lt;li&gt;Enables automatic script termination on errors&lt;/li&gt; 
 &lt;li&gt;Implements detailed logging of failures&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Validate the AWS environment&lt;/h2&gt; 
&lt;p&gt;Use the following code to validate the AWS environment:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-powershell"&gt;AWS_VERSION=$(aws --version 2&amp;gt;&amp;amp;1)
log "INFO" "AWS CLI version: $AWS_VERSION"

if ! aws sts get-caller-identity &amp;amp;&amp;gt;/dev/null; then
&amp;nbsp;&amp;nbsp; &amp;nbsp;log_error "AWS CLI is not configured with valid credentials"
&amp;nbsp;&amp;nbsp; &amp;nbsp;exit 1
fi

AWS_REGION="us-east-1"
AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code performs the essential AWS setup verification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Checks AWS CLI installation&lt;/li&gt; 
 &lt;li&gt;Validates AWS credentials&lt;/li&gt; 
 &lt;li&gt;Retrieves account ID for resource naming&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Set up Amazon Redshift and Amazon Bedrock variables&lt;/h2&gt; 
&lt;p&gt;Use the following code to create Amazon Redshift and Amazon Bedrock variables:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;REDSHIFT_CLUSTER_IDENTIFIER="geo-analysis-cluster"
REDSHIFT_DATABASE="geo_db"
REDSHIFT_MASTER_USER= [Create username]
REDSHIFT_MASTER_PASSWORD= [Create Password]
REDSHIFT_NODE_TYPE="dc2.large"
REDSHIFT_CLUSTER_TYPE="single-node"
BEDROCK_ROLE_NAME="BedrockGeospatialRole"
# Bedrock Configuration
AGENT_NAME="GeoAgentRedshift"
KNOWLEDGE_BASE_NAME="GeospatialKB"&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Create IAM roles for Amazon Redshift and Amazon S3&lt;/h2&gt; 
&lt;p&gt;Use the following code to set up IAM roles for Amazon S3 and Amazon Redshift:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;if aws iam get-role --role-name "$REDSHIFT_ROLE_NAME" &amp;amp;&amp;gt;/dev/null; then
    REDSHIFT_ROLE_ARN=$(aws iam get-role --role-name "$REDSHIFT_ROLE_NAME" --query 'Role.Arn' --output text)
    log "INFO" "Using existing role ARN: $REDSHIFT_ROLE_ARN"
else
    # Create trust policy document
    cat &amp;gt; /tmp/trust-policy.json &amp;lt;&amp;lt; EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "redshift.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
    # Create role
    CREATE_ROLE_OUTPUT=$(aws iam create-role \
        --role-name "$REDSHIFT_ROLE_NAME" \
        --assume-role-policy-document "file:///tmp/trust-policy.json" \
        --description "Role for Redshift to access S3" 2&amp;gt;&amp;amp;1)
    
    REDSHIFT_ROLE_ARN=$(aws iam get-role --role-name "$REDSHIFT_ROLE_NAME" --query 'Role.Arn' --output text)
    if [ $? -ne 0 ]; then
        log_error "Failed to create role:"
        exit 1
    fi
    REDSHIFT_ROLE_ARN=$(echo "$CREATE_ROLE_OUTPUT" | jq -r '.Role.Arn')
    # Wait for role to be available
    sleep 10
fi
ATTACH_POLICY_OUTPUT=$(aws iam attach-role-policy \
    --role-name "$REDSHIFT_ROLE_NAME" \
    --policy-arn "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess" 2&amp;gt;&amp;amp;1)
if [ $? -ne 0 ]; then
    if echo "$ATTACH_POLICY_OUTPUT" | grep -q "EntityAlreadyExists"; then
    else
        exit 1
    fi
fi&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Prepare the data and Amazon S3&lt;/h2&gt; 
&lt;p&gt;Use the following code to prepare the data and Amazon S3 storage:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;DATA_BUCKET="geospatial-bedrock-demo-data-${AWS_ACCOUNT_ID}"
aws s3 mb s3://$DATA_BUCKET

# Download source data
curl -o earthquakes.csv https://raw.githubusercontent.com/Esri/gis-tools-for-hadoop/master/samples/data/earthquake-data/earthquakes.csv
curl -o california-counties.json https://raw.githubusercontent.com/Esri/gis-tools-for-hadoop/master/samples/data/counties-data/california-counties.json&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code sets up data storage and retrieval through the following steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creates a unique S3 bucket&lt;/li&gt; 
 &lt;li&gt;Downloads earthquake and county boundary data&lt;/li&gt; 
 &lt;li&gt;Prepares for data transformation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Transform geospatial data&lt;/h2&gt; 
&lt;p&gt;Use the following code to transform the geospatial data:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;INPUT_FILE="california-counties.json"
OUTPUT_FILE="california-counties.csv"

# Create CSV header
echo "OBJECTID,AREA,PERIMETER,CO06_D00_,CO06_D00_I,STATE,COUNTY,NAME,LSAD,LSAD_TRANS,Shape_Length,Shape_Area,WKT" &amp;gt; "$OUTPUT_FILE"

# Function to convert ESRI rings to WKT POLYGON format
esri_to_wkt() {
    local rings=$1
    
    # Extract the first ring (exterior ring)
    local exterior_ring=$(echo "$rings" | jq -c '.[0]')
    
    if [ "$exterior_ring" = "null" ] || [ -z "$exterior_ring" ]; then
        echo "POLYGON EMPTY"
        return
    fi
    
    # Start building the WKT string
    local wkt="POLYGON (("
    
    # Process each coordinate pair in the ring
    local coords=$(echo "$exterior_ring" | jq -r '.[] | "\(.[0]) \(.[1])"')
    local first_coord=""
    local result=""
    
    while IFS= read -r coord; do
        if [ -z "$result" ]; then
            result="$coord"
            first_coord="$coord"
        else
            result="$result, $coord"
        fi
    done &amp;lt;&amp;lt;&amp;lt; "$coords"
    
    # Close the ring by adding the first coordinate again if needed
    if [ "$first_coord" != "$(echo "$coords" | tail -1)" ]; then
        result="$result, $first_coord"
    fi
    
    wkt="${wkt}${result}))"
    echo "$wkt"
}

# Process each feature in the JSON file
jq -c '.features[]' "$INPUT_FILE" | while read -r feature; do
    # Extract attributes
    OBJECTID=$(echo "$feature" | jq -r '.attributes.OBJECTID // empty')
    AREA=$(echo "$feature" | jq -r '.attributes.AREA // empty')
    PERIMETER=$(echo "$feature" | jq -r '.attributes.PERIMETER // empty')
    CO06_D00_=$(echo "$feature" | jq -r '.attributes.CO06_D00_ // empty')
    CO06_D00_I=$(echo "$feature" | jq -r '.attributes.CO06_D00_I // empty')
    STATE=$(echo "$feature" | jq -r '.attributes.STATE // empty')
    COUNTY=$(echo "$feature" | jq -r '.attributes.COUNTY // empty')
    NAME=$(echo "$feature" | jq -r '.attributes.NAME // empty')
    LSAD=$(echo "$feature" | jq -r '.attributes.LSAD // empty')
    LSAD_TRANS=$(echo "$feature" | jq -r '.attributes.LSAD_TRANS // empty')
    Shape_Length=$(echo "$feature" | jq -r '.attributes.Shape_Length // empty')
    Shape_Area=$(echo "$feature" | jq -r '.attributes.Shape_Area // empty')
    
    # Extract geometry and convert to WKT
    if echo "$feature" | jq -e '.geometry.rings' &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
        rings=$(echo "$feature" | jq -c '.geometry.rings')
        WKT=$(esri_to_wkt "$rings")
    else
        WKT="POLYGON EMPTY"
    fi
    
    # Escape any commas in the fields
    NAME=$(echo "$NAME" | sed 's/,/\\,/g')
    LSAD=$(echo "$LSAD" | sed 's/,/\\,/g')
    LSAD_TRANS=$(echo "$LSAD_TRANS" | sed 's/,/\\,/g')
    
     # Write to CSV - wrap WKT field in quotes
    echo "$OBJECTID,$AREA,$PERIMETER,$CO06_D00_,$CO06_D00_I,$STATE,$COUNTY,$NAME,$LSAD,$LSAD_TRANS,$Shape_Length,$Shape_Area,\"$WKT\"" &amp;gt;&amp;gt; "$OUTPUT_FILE"
done

echo "Conversion complete. Output saved to $OUTPUT_FILE"

# Upload data files to S3
aws s3 cp earthquakes.csv s3://$DATA_BUCKET/earthquakes/
aws s3 cp california-counties.csv s3://$DATA_BUCKET/counties/&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code performs the following actions to convert the geospatial data formats:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Transforms ESRI JSON to WKT format&lt;/li&gt; 
 &lt;li&gt;Processes county boundaries into CSV format&lt;/li&gt; 
 &lt;li&gt;Preserves spatial information for Amazon Redshift&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Create a Redshift cluster&lt;/h2&gt; 
&lt;p&gt;Use the following code to set up the Redshift cluster:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-typescript"&gt;# Create Redshift cluster
aws redshift create-cluster \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--cluster-identifier "$REDSHIFT_CLUSTER_IDENTIFIER" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--node-type "$REDSHIFT_NODE_TYPE" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--cluster-type single-node \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--master-username "$REDSHIFT_MASTER_USER" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--master-user-password "$REDSHIFT_MASTER_PASSWORD" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--db-name "$REDSHIFT_DATABASE" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--cluster-subnet-group-name "$SUBNET_GROUP_NAME" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--vpc-security-group-ids "$SG_ID" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--iam-roles "$REDSHIFT_ROLE_ARN"

# Wait for cluster availability
while true; do
&amp;nbsp;&amp;nbsp; &amp;nbsp;CLUSTER_STATUS=$(aws redshift describe-clusters \
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--cluster-identifier "$REDSHIFT_CLUSTER_IDENTIFIER" \
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--query 'Clusters[0].ClusterStatus' \
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--output text)
&amp;nbsp;&amp;nbsp; &amp;nbsp;if [ "$CLUSTER_STATUS" = "available" ]; then
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;break
&amp;nbsp;&amp;nbsp; &amp;nbsp;fi
&amp;nbsp;&amp;nbsp; &amp;nbsp;sleep 30
done&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code performs the following functions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sets up a single-node cluster&lt;/li&gt; 
 &lt;li&gt;Configures networking and security&lt;/li&gt; 
 &lt;li&gt;Waits for cluster availability&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Create a database schema&lt;/h2&gt; 
&lt;p&gt;Use the following code to create the database schema:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-sql"&gt;aws redshift-data execute-statement \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--cluster-identifier "$REDSHIFT_CLUSTER_IDENTIFIER" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--database "$REDSHIFT_DATABASE" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--sql "
CREATE TABLE IF NOT EXISTS counties (
&amp;nbsp;&amp;nbsp; &amp;nbsp;OBJECTID INTEGER PRIMARY KEY,
&amp;nbsp;&amp;nbsp; &amp;nbsp;AREA DOUBLE PRECISION,
&amp;nbsp;&amp;nbsp; &amp;nbsp;NAME VARCHAR(100),
&amp;nbsp;&amp;nbsp; &amp;nbsp;geom GEOMETRY
);

CREATE TABLE IF NOT EXISTS earthquakes (
&amp;nbsp;&amp;nbsp; &amp;nbsp;earthquake_date VARCHAR(50),
&amp;nbsp;&amp;nbsp; &amp;nbsp;latitude double precision,
&amp;nbsp;&amp;nbsp; &amp;nbsp;longitude double precision,
&amp;nbsp;&amp;nbsp; &amp;nbsp;magnitude double precision
);"&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code performs the following functions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creates a counties table with spatial data&lt;/li&gt; 
 &lt;li&gt;Creates an earthquakes table&lt;/li&gt; 
 &lt;li&gt;Configures appropriate data types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Create an Amazon Bedrock knowledge base&lt;/h2&gt; 
&lt;p&gt;Use the following code to create a knowledge base:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;# Create knowledge base
aws bedrock-agent create-knowledge-base \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--name "$KNOWLEDGE_BASE_NAME" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--knowledge-base-configuration "{
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;\"type\": \"SQL\",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;\"sqlKnowledgeBaseConfiguration\": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;\"type\": \"REDSHIFT\"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp;}" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--region "$AWS_REGION"

# Create data source
aws bedrock-agent create-data-source \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--knowledge-base-id "$KB_ID" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--name "EarthquakeDataSource" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--data-source-configuration "{\"type\": \"REDSHIFT_METADATA\"}"&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code performs the following functions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creates an Amazon Bedrock knowledge base&lt;/li&gt; 
 &lt;li&gt;Sets up an Amazon Redshift data source&lt;/li&gt; 
 &lt;li&gt;Enables spatial queries&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Create an Amazon Bedrock agent&lt;/h2&gt; 
&lt;p&gt;Use the following code to create and configure an agent:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;# Create agent
aws bedrock-agent create-agent \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--agent-name "$AGENT_NAME" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--instruction "You are a geospatial analysis assistant..." \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--foundation-model "anthropic.claude-3-sonnet-20240229-v1:0"

# Associate knowledge base
aws bedrock-agent associate-agent-knowledge-base \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--agent-id "$AGENT_ID" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--knowledge-base-id "$KB_ID" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--description "Earthquake data knowledge base" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--agent-version "DRAFT"&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This code performs the following functions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creates an Amazon Bedrock agent&lt;/li&gt; 
 &lt;li&gt;Associates the agent with the knowledge base&lt;/li&gt; 
 &lt;li&gt;Configures the AI model and instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Test the solution&lt;/h2&gt; 
&lt;p&gt;Let’s observe the system behavior with the following natural language user inputs in the chat window.&lt;/p&gt; 
&lt;h3&gt;Example 1: Summarization and Q&amp;amp;A&lt;/h3&gt; 
&lt;p&gt;For this example, we use the prompt “Summarize which zones allow for building of an apartment.”&lt;/p&gt; 
&lt;p&gt;The LLM performs retrieval with a RAG approach, then uses the retrieved residential code documents as context to answer the user’s query in natural language.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113878 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-4-8.png" alt="" width="1430" height="754"&gt;&lt;/p&gt; 
&lt;p&gt;This example demonstrates the LLM capabilities for hallucination mitigation, RAG, and summarization.&lt;/p&gt; 
&lt;h3&gt;Example 2: Generate a draft report&lt;/h3&gt; 
&lt;p&gt;Next, we input the prompt “Write me a report on how various zones and related housing data can be utilized to plan new housing development to meet high demand.”&lt;/p&gt; 
&lt;p&gt;The LLM retrieves relevant urban planning code documents, then summarizes the information into a standard reporting format as described in its system prompt.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113879 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-5-3.png" alt="" width="1429" height="746"&gt;&lt;/p&gt; 
&lt;p&gt;This example demonstrates the LLM capabilities for prompt templates, RAG, and summarization.&lt;/p&gt; 
&lt;h3&gt;Example 3: Show places on the map&lt;/h3&gt; 
&lt;p&gt;For this example, we use the prompt “Show me the low density properties on Abbeville street in Macgregor on the map with their address.”&lt;/p&gt; 
&lt;p&gt;The LLM creates a chain of thought to look up which properties match the user’s query and then invokes the draw marker tool on the map. The LLM provides tool invocation parameters in its scratchpad, awaits the completion of these tool invocations, then responds in natural language with a bulleted list of markers placed on the map.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113880 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-6-5.png" alt="" width="1432" height="705"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113881 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-7-5.png" alt="" width="1430" height="712"&gt;&lt;/p&gt; 
&lt;p&gt;This example demonstrates the LLM capabilities for chain of thought reasoning, tool use, retrieval systems using agents, and UI control.&lt;/p&gt; 
&lt;h3&gt;Example 4: Use the UI as context&lt;/h3&gt; 
&lt;p&gt;For this example, we choose a marker on a map and input the prompt “Can I build an apartment here.”&lt;/p&gt; 
&lt;p&gt;The “here” is not contextualized from conversation history but rather from the state of the map view. Having a state engine that can relay information from a frontend view to the LLM input adds a richer context.&lt;/p&gt; 
&lt;p&gt;The LLM understands the context of “here” based on the selected marker, performs retrieval to see the land development policy, and responds to the user in simple natural language, “No, and here is why…”&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113880 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-6-5.png" alt="" width="1432" height="705"&gt;&lt;/p&gt; 
&lt;p&gt;This example demonstrates the LLM capabilities for UI context, chain of thought reasoning, RAG, and tool use.&lt;/p&gt; 
&lt;h3&gt;Example 5: UI context and UI control&lt;/h3&gt; 
&lt;p&gt;Next, we choose a marker on the map and input the prompt “draw a .25 mile circle around here so I can visualize walking distance.”&lt;/p&gt; 
&lt;p&gt;The LLM invokes the draw circle tool to create a layer on the map centered at the selected marker, contextualized by “here.”&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113883 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/08/image-9-4.png" alt="" width="1430" height="832"&gt;&lt;/p&gt; 
&lt;p&gt;This example demonstrates the LLM capabilities for UI context, chain of thought reasoning, tool use, and UI control.&lt;/p&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;To clean up your resources and prevent AWS charges from being incurred, complete the following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Delete the Amazon Bedrock knowledge base.&lt;/li&gt; 
 &lt;li&gt;Delete the Redshift cluster.&lt;/li&gt; 
 &lt;li&gt;Delete the S3 bucket.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;The integration of LLMs with GIS creates intuitive systems that help users of different technical levels perform complex spatial analysis through natural language interactions. By using RAG and agent-based workflows, organizations can maintain data accuracy while seamlessly connecting AI models to their existing knowledge bases and structured data systems. Amazon Bedrock facilitates this convergence of AI and GIS technology by providing a robust platform for model invocation, knowledge retrieval, and system control, ultimately transforming how users visualize, analyze, and interact with geographical data.&lt;/p&gt; 
&lt;p&gt;For further exploration, &lt;a href="https://aws.amazon.com/earth/" target="_blank" rel="noopener noreferrer"&gt;Earth on AWS&lt;/a&gt; has videos and articles you can explore to understand how AWS is helping build GIS applications on the cloud.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the Authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-114005 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/11/dave-horne.jpeg" alt="" width="100" height="133"&gt;&lt;strong&gt;Dave Horne&lt;/strong&gt;&amp;nbsp;is a Sr. Solutions Architect supporting Federal System Integrators at AWS. He is based in Washington, DC, and has 15 years of experience building, modernizing, and integrating systems for public sector customers. Outside of work, Dave enjoys playing with his kids, hiking, and watching Penn State football!&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-114006 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/11/Kai-Jai.jpeg" alt="" width="100" height="100"&gt;&lt;strong&gt;Kai-Jia Yue&lt;/strong&gt;&amp;nbsp;is a solutions architect on the Worldwide Public Sector Global Systems Integrator Architecture team at Amazon Web Services (AWS). She has a focus in data analytics and helping customer organizations make data-driven decisions. Outside of work, she loves spending time with friends and family and traveling.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-114161 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/IMG_5102.jpg" alt="" width="100" height="135"&gt;Brian Smitches&lt;/strong&gt; is the Head of Partner Deployed Engineering at Windsurf focusing on how partners can bring organizational value through the adoption of Agentic AI software development tools like Windsurf and Devin. Brian has a background in Cloud Solutions Architecture from his time at AWS, where he worked in the&amp;nbsp;AWS Federal Partner ecosystem. In his personal time, Brian enjoys skiing, water sports, and traveling with friends and family.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Beyond the basics: A comprehensive foundation model selection framework for generative AI</title>
		<link>https://aws.amazon.com/blogs/machine-learning/beyond-the-basics-a-comprehensive-foundation-model-selection-framework-for-generative-ai/</link>
					
		
		<dc:creator><![CDATA[Sandeep Singh]]></dc:creator>
		<pubDate>Fri, 22 Aug 2025 17:31:28 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Best Practices]]></category>
		<category><![CDATA[Foundation models]]></category>
		<category><![CDATA[Generative AI]]></category>
		<category><![CDATA[Thought Leadership]]></category>
		<guid isPermaLink="false">306dc26fa76dd6c83e1333f4371ade5e7b8a2a82</guid>

					<description>As the model landscape expands, organizations face complex scenarios when selecting the right foundation model for their applications. In this blog post we present a systematic evaluation methodology for Amazon Bedrock users, combining theoretical frameworks with practical implementation strategies that empower data scientists and machine learning (ML) engineers to make optimal model selections.</description>
										<content:encoded>&lt;p&gt;Most organizations evaluating foundation models limit their analysis to three primary dimensions: accuracy, latency, and cost. While these metrics provide a useful starting point, they represent an oversimplification of the complex interplay of factors that determine real-world model performance.&lt;/p&gt; 
&lt;p&gt;Foundation models have revolutionized how enterprises develop generative AI applications, offering unprecedented capabilities in understanding and generating human-like content. However, as the model landscape expands, organizations face complex scenarios when selecting the right foundation model for their applications. In this blog post we present a systematic evaluation methodology for &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt; users, combining theoretical frameworks with practical implementation strategies that empower data scientists and machine learning (ML) engineers to make optimal model selections.&lt;/p&gt; 
&lt;h2&gt;The challenge of foundation model selection&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt; is a fully managed service that offers a choice of high-performing foundation models from leading AI companies such as&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/ai21/" target="_blank" rel="noopener noreferrer"&gt;AI21 Labs&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/anthropic" target="_blank" rel="noopener noreferrer"&gt;Anthropic&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/cohere/" target="_blank" rel="noopener noreferrer"&gt;Cohere&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/deepseek" target="_blank" rel="noopener noreferrer"&gt;DeepSeek&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/luma-ai/" target="_blank" rel="noopener noreferrer"&gt;Luma&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/llama/" target="_blank" rel="noopener noreferrer"&gt;Meta&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/mistral/" target="_blank" rel="noopener noreferrer"&gt;Mistral AI&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/poolside/" target="_blank" rel="noopener noreferrer"&gt;poolside&amp;nbsp;&lt;/a&gt;(coming soon),&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/stability-ai/" target="_blank" rel="noopener noreferrer"&gt;Stability AI&lt;/a&gt;,&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/twelvelabs/" target="_blank" rel="noopener noreferrer"&gt;TwelveLabs&lt;/a&gt;&amp;nbsp;(coming soon),&amp;nbsp;&lt;a href="https://aws.amazon.com/bedrock/writer" target="_blank" rel="noopener noreferrer"&gt;Writer&lt;/a&gt;, and&amp;nbsp;&lt;a href="https://aws.amazon.com/ai/generative-ai/nova/" target="_blank" rel="noopener noreferrer"&gt;Amazon&amp;nbsp;&lt;/a&gt;through a single API, along with a broad set of capabilities you need to build generative AI applications with security, privacy, and responsible AI. The service’s API-driven approach allows seamless model interchangeability, but this flexibility introduces a critical challenge: which model will deliver optimal performance for a specific application while meeting operational constraints?&lt;/p&gt; 
&lt;p&gt;Our research with enterprise customers reveals that many early generative AI projects select models based on either limited manual testing or reputation, rather than systematic evaluation against business requirements. This approach frequently results in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Over-provisioning computational resources to accommodate larger models than required&lt;/li&gt; 
 &lt;li&gt;Sub-optimal performance because of misalignment between model strengths and use case requirements&lt;/li&gt; 
 &lt;li&gt;Unnecessarily high operational costs because of inefficient token utilization&lt;/li&gt; 
 &lt;li&gt;Production performance issues discovered too late in the development lifecycle&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In this post, we outline a comprehensive evaluation methodology optimized for Amazon Bedrock implementations using &lt;a href="https://aws.amazon.com/bedrock/evaluations/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Evaluations&lt;/a&gt; while providing forward-compatible patterns as the foundation model landscape evolves. To read more about on how to evaluate large language model (LLM) performance, see &lt;a href="https://aws.amazon.com/blogs/machine-learning/llm-as-a-judge-on-amazon-bedrock-model-evaluation/" target="_blank" rel="noopener noreferrer"&gt;LLM-as-a-judge on Amazon Bedrock Model Evaluation.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;A multidimensional evaluation framework—Foundation model capability matrix&lt;/h2&gt; 
&lt;p&gt;Foundation models vary significantly across multiple dimensions, with performance characteristics that interact in complex ways. Our capability matrix provides a structured view of critical dimensions to consider when &lt;a href="https://aws.amazon.com/blogs/aws/amazon-bedrock-model-evaluation-is-now-generally-available/" target="_blank" rel="noopener noreferrer"&gt;evaluating models&lt;/a&gt; in Amazon Bedrock. Below are four core dimensions (in no specific order) – Task performance, Architectural characteristics, Operational considerations, and Responsible AI attributes.&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Task performance&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Evaluating the models based on the task performance is crucial for achieving direct impact on business outcomes, ROI, user adoption and trust, and competitive advantage.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Task-specific accuracy&lt;/strong&gt;: Evaluate models using benchmarks relevant to your use case (MMLU, HELM, or domain-specific benchmarks).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Few-shot learning capabilities&lt;/strong&gt;: Strong few-shot performers require minimal examples to adapt to new tasks, leading to cost efficiency, faster time-to-market, resource optimization, and operational benefits.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Instruction following fidelity&lt;/strong&gt;: For the applications that require precise adherence to commands and constraints, it is critical to evaluate model’s instruction following fidelity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Output consistency&lt;/strong&gt;: Reliability and reproducibility across multiple runs with identical prompts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain-specific knowledge&lt;/strong&gt;: Model performance varies dramatically across specialized fields based on training data. Evaluate the models base on your domain-specific use-case scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reasoning capabilities: &lt;/strong&gt;Evaluate the model’s ability to perform logical inference, causal reasoning, and multi-step problem-solving. This can include reasoning such as deductive and inductive, mathematical, chain-of-thought, and so on.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Architectural characteristics&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Architectural characteristics for evaluating the models are important as they directly impact the model’s performance, efficiency, and suitability for specific tasks.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Parameter count (model size)&lt;/strong&gt;: Larger models typically offer more capabilities but require greater computational resources and may have higher inference costs and latency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Training data composition&lt;/strong&gt;: Models trained on diverse, high-quality datasets tend to have better generalization abilities across different domains.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model architecture&lt;/strong&gt;: Decoder-only models excel at text generation, encoder-decoder architectures handle translation and summarization more effectively, while mixture of experts (MoE) architectures can be a powerful tool for improving the performance of both decoder-only and encoder-decoder models. Some specialized architectures focus on enhancing reasoning capabilities through techniques like chain-of-thought prompting or recursive reasoning.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tokenization methodology&lt;/strong&gt;: The way models process text affects performance on domain-specific tasks, particularly with specialized vocabulary.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context window capabilities&lt;/strong&gt;: Larger context windows enable processing more information at once, critical for document analysis and extended conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modality&lt;/strong&gt;: Modality refers to type of data a model can process and generate, such as text, image, audio, or video. Consider the modality of the models depending on the use case, and choose the model optimized for that specific modality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Operational considerations&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Below listed operational considerations are critical for model selection as they directly impact the real-world feasibility, cost-effectiveness, and sustainability of AI deployments.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Throughput and latency profiles&lt;/strong&gt;: Response speed impacts user experience and throughput determines scalability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost structures&lt;/strong&gt;: Input/output token pricing significantly affects economics at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalability characteristics&lt;/strong&gt;: Ability to handle concurrent requests and maintain performance during traffic spikes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customization options&lt;/strong&gt;: Fine-tuning capabilities and adaptation methods for tailoring to specific use cases or domains.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ease of integration&lt;/strong&gt;: Ease of integration into existing systems and workflow is an important consideration.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: When dealing with sensitive data, model security—including data encryption, access control, and vulnerability management—is a crucial consideration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Responsible AI attributes&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;As AI becomes increasingly embedded in business operations and daily lives, evaluating models on responsible AI attributes isn’t just a technical consideration—it’s a business imperative.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hallucination propensity&lt;/strong&gt;: Models vary in their tendency to generate plausible but incorrect information.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bias measurements&lt;/strong&gt;: Performance across different demographic groups affects fairness and equity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Safety guardrail effectiveness&lt;/strong&gt;: Resistance to generating harmful or inappropriate content.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explainability and privacy&lt;/strong&gt;: Transparency features and handling of sensitive information.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Legal Implications&lt;/strong&gt;: Legal considerations should include data privacy, non-discrimination, intellectual property, and product liability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Agentic AI considerations for model selection&lt;/h2&gt; 
&lt;p&gt;The growing popularity of agentic AI applications introduces evaluation dimensions beyond traditional metrics. When assessing models for use in autonomous agents, consider these critical capabilities:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Agent-specific evaluation dimensions&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Planning and reasoning capabilities&lt;/strong&gt;: Evaluate chain-of-thought consistency across complex multi-step tasks and self-correction mechanisms that allow agents to identify and fix their own reasoning errors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tool and API integration&lt;/strong&gt;: Test function calling capabilities, parameter handling precision, and structured output consistency (JSON/XML) for seamless tool use.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent-to-agent communication&lt;/strong&gt;: Assess protocol adherence to frameworks like A2A and efficient contextual memory management across extended multi-agent interactions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Multi-agent collaboration testing&lt;/strong&gt; for applications using multiple specialized agents&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Role adherence&lt;/strong&gt;: Measure how well models maintain distinct agent personas and responsibilities without role confusion.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Information sharing efficiency&lt;/strong&gt;: Test how effectively information flows between agent instances without critical detail loss.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative intelligence&lt;/strong&gt;: Verify whether multiple agents working together produce better outcomes than single-model approaches.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Error propagation resistance&lt;/strong&gt;: Assess how robustly multi-agent systems contain and correct errors rather than amplifying them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A four-phase evaluation methodology&lt;/h2&gt; 
&lt;p&gt;Our recommended methodology progressively narrows model selection through increasingly sophisticated assessment techniques:&lt;/p&gt; 
&lt;h3&gt;Phase 1: Requirements engineering&lt;/h3&gt; 
&lt;p&gt;Begin with a precise specification of your application’s requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Functional requirements&lt;/strong&gt;: Define primary tasks, domain knowledge needs, language support, output formats, and reasoning complexity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Non-functional requirements&lt;/strong&gt;: Specify latency thresholds, throughput requirements, budget constraints, context window needs, and availability expectations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsible AI requirements&lt;/strong&gt;: Establish hallucination tolerance, bias mitigation needs, safety requirements, explainability level, and privacy constraints.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent-specific requirements&lt;/strong&gt;: For agentic applications, define tool-use capabilities, protocol adherence standards, and collaboration requirements.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Assign weights to each requirement based on business priorities to create your evaluation scorecard foundation.&lt;/p&gt; 
&lt;h3&gt;Phase 2: Candidate model selection&lt;/h3&gt; 
&lt;p&gt;Use the Amazon Bedrock model information &lt;a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_ListFoundationModels.html" target="_blank" rel="noopener noreferrer"&gt;API&lt;/a&gt; to filter models based on hard requirements. This typically reduces candidates from dozens to 3–7 models that are worth detailed evaluation.&lt;/p&gt; 
&lt;p&gt;Filter options include but aren’t limited to the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Filter by modality support, context length, and language capabilities&lt;/li&gt; 
 &lt;li&gt;Exclude models that don’t meet minimum performance thresholds&lt;/li&gt; 
 &lt;li&gt;Calculate theoretical costs at projected scale so that you can exclude options that exceed the available budget&lt;/li&gt; 
 &lt;li&gt;Filter for customization requirements such as fine-tuning capabilities&lt;/li&gt; 
 &lt;li&gt;For agentic applications, filter for function calling and multi-agent protocol support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Although the Amazon Bedrock model information API might not provide the filters you need for candidate selection, you can use the Amazon Bedrock model catalog (shown in the following figure) to obtain additional information about these models.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114282" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ML-19016-Bedrock-model-catalog.png" alt="Bedrock model catalog" width="3024" height="1344"&gt;&lt;/p&gt; 
&lt;h3&gt;Phase 3: Systematic performance evaluation&lt;/h3&gt; 
&lt;p&gt;Implement structured evaluation using &lt;a href="https://aws.amazon.com/bedrock/evaluations/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Evaluations&lt;/a&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Prepare evaluation datasets&lt;/strong&gt;: Create representative task examples, challenging edge cases, domain-specific content, and adversarial examples.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Design evaluation prompts&lt;/strong&gt;: Standardize instruction format, maintain consistent examples, and mirror production usage patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configure metrics&lt;/strong&gt;: Select appropriate metrics for subjective tasks (human evaluation and reference-free quality), objective tasks (precision, recall, and F1 score), and reasoning tasks (logical consistency and step validity).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For agentic applications&lt;/strong&gt;: Add protocol conformance testing, multi-step planning assessment, and tool-use evaluation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execute evaluation jobs&lt;/strong&gt;: Maintain consistent parameters across models and collect comprehensive performance data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Measure operational performance&lt;/strong&gt;: Capture throughput, latency distributions, error rates, and actual token consumption costs.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Phase 4: Decision analysis&lt;/h3&gt; 
&lt;p&gt;Transform evaluation data into actionable insights:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Normalize metrics&lt;/strong&gt;: Scale all metrics to comparable units using min-max normalization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apply weighted scoring&lt;/strong&gt;: Calculate composite scores based on your prioritized requirements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Perform sensitivity analysis&lt;/strong&gt;: Test how robust your conclusions are against weight variations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Visualize performance&lt;/strong&gt;: Create radar charts, efficiency frontiers, and tradeoff curves for clear comparison.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Document findings&lt;/strong&gt;: Detail each model’s strengths, limitations, and optimal use cases.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Advanced evaluation techniques&lt;/h2&gt; 
&lt;p&gt;Beyond standard procedures, consider the following approaches for evaluating models.&lt;/p&gt; 
&lt;h3&gt;A/B testing with production traffic&lt;/h3&gt; 
&lt;p&gt;Implement comparative testing using &lt;a href="https://aws.amazon.com/bedrock/intelligent-prompt-routing/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock’s routing&lt;/a&gt; capabilities to gather real-world performance data from actual users.&lt;/p&gt; 
&lt;h3&gt;Adversarial testing&lt;/h3&gt; 
&lt;p&gt;Test model vulnerabilities through prompt injection attempts, challenging syntax, edge case handling, and domain-specific factual challenges.&lt;/p&gt; 
&lt;h3&gt;Multi-model ensemble evaluation&lt;/h3&gt; 
&lt;p&gt;Assess combinations such as sequential pipelines, voting ensembles, and cost-efficient routing based on task complexity.&lt;/p&gt; 
&lt;h3&gt;Continuous evaluation architecture&lt;/h3&gt; 
&lt;p&gt;Design systems to monitor production performance with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stratified sampling of production traffic across task types and domains&lt;/li&gt; 
 &lt;li&gt;Regular evaluations and trigger-based reassessments when new models emerge&lt;/li&gt; 
 &lt;li&gt;Performance thresholds and alerts for quality degradation&lt;/li&gt; 
 &lt;li&gt;User feedback collection and failure case repositories for continuous improvement&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Industry-specific considerations&lt;/h3&gt; 
&lt;p&gt;Different sectors have unique requirements that influence model selection:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Financial services&lt;/strong&gt;: Regulatory compliance, numerical precision, and personally identifiable information (PII) handling capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Healthcare&lt;/strong&gt;: Medical terminology understanding, HIPAA adherence, and clinical reasoning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Manufacturing&lt;/strong&gt;: Technical specification comprehension, procedural knowledge, and spatial reasoning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agentic systems&lt;/strong&gt;: Autonomous reasoning, tool integration, and protocol conformance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Best practices for model selection&lt;/h2&gt; 
&lt;p&gt;Through this comprehensive approach to model evaluation and selection, organizations can make informed decisions that balance performance, cost, and operational requirements while maintaining alignment with business objectives. The methodology makes sure that model selection isn’t a one-time exercise but an evolving process that adapts to changing needs and technological capabilities.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Assess your situation thoroughly&lt;/strong&gt;: Understand your specific use case requirements and available resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Select meaningful metrics&lt;/strong&gt;: Focus on metrics that directly relate to your business objectives&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build for continuous evaluation&lt;/strong&gt;: Design your evaluation process to be repeatable as new models are released&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Looking forward: The future of model selection&lt;/h2&gt; 
&lt;p&gt;As foundation models evolve, evaluation methodologies must keep pace. Below are further considerations (By no means this list of considerations is exhaustive and is subject to ongoing updates as technology evolves and best practices emerge), you should take into account while selecting the best model(s) for your use-case(s).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-model architectures&lt;/strong&gt;: Enterprises will increasingly deploy specialized models in concert rather than relying on single models for all tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agentic landscapes&lt;/strong&gt;: Evaluation frameworks must assess how models perform as autonomous agents with tool-use capabilities and inter-agent collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain specialization&lt;/strong&gt;: The growing landscape of domain-specific models will require more nuanced evaluation of specialized capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alignment and control&lt;/strong&gt;: As models become more capable, evaluation of controllability and alignment with human intent becomes increasingly important.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;By implementing a comprehensive evaluation framework that extends beyond basic metrics, organizations can informed decisions about which foundation models will best serve their requirements. For agentic AI applications in particular, thorough evaluation of reasoning, planning, and collaboration capabilities is essential for success. By approaching model selection systematically, organizations can avoid the common pitfalls of over-provisioning, misalignment with use case needs, excessive operational costs, and late discovery of performance issues. The investment in thorough evaluation pays dividends through optimized costs, improved performance, and superior user experiences.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the author&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-81283 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/07/23/snghigf-e1721342253292-258x300-1.jpg" alt="" width="100" height="116"&gt;Sandeep Singh&lt;/strong&gt; is a Senior Generative AI Data Scientist at Amazon Web Services, helping businesses innovate with generative AI. He specializes in generative AI, machine learning, and system design. He has successfully delivered state-of-the-art AI/ML-powered solutions to solve complex business problems for diverse industries, optimizing efficiency and scalability.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Accelerate intelligent document processing with generative AI on AWS</title>
		<link>https://aws.amazon.com/blogs/machine-learning/accelerate-intelligent-document-processing-with-generative-ai-on-aws/</link>
					
		
		<dc:creator><![CDATA[Bob Strahan]]></dc:creator>
		<pubDate>Fri, 22 Aug 2025 17:26:31 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock Data Automation]]></category>
		<category><![CDATA[Generative AI]]></category>
		<guid isPermaLink="false">4974e83fa545d7ff5050e513c06b99a9a08ab9c3</guid>

					<description>In this post, we introduce our open source GenAI IDP Accelerator—a tested solution that we use to help customers across industries address their document processing challenges. Automated document processing workflows accurately extract structured information from documents, reducing manual effort. We will show you how this ready-to-deploy solution can help you build those workflows with generative AI on AWS in days instead of months.</description>
										<content:encoded>&lt;p&gt;Every day, organizations process millions of documents, including invoices, contracts, insurance claims, medical records, and financial statements. Despite the critical role these documents play, an &lt;a href="https://mitsloan.mit.edu/ideas-made-to-matter/tapping-power-unstructured-data" target="_blank" rel="noopener noreferrer"&gt;estimated 80–90%&lt;/a&gt; of the data they contain is unstructured and largely untapped, hiding valuable insights that could transform business outcomes. Despite advances in technology, many organizations still rely on manual data entry, spending countless hours extracting information from PDFs, scanned images, and forms. This manual approach is time-consuming, error-prone, and prevents organizations from scaling their operations and responding quickly to business demands.&lt;/p&gt; 
&lt;p&gt;Although generative AI has made it easier to build proof-of-concept document processing solutions, the journey from proof of concept to production remains fraught with challenges. Organizations often find themselves rebuilding from scratch when they discover their prototype can’t handle production volumes, lacks proper error handling, doesn’t scale cost-effectively, or fails to meet enterprise security and compliance requirements. What works in a demo with a handful of documents often breaks down when processing thousands of documents daily in a production environment.&lt;/p&gt; 
&lt;p&gt;In this post, we introduce our open source &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/README.md" target="_blank" rel="noopener noreferrer"&gt;GenAI IDP Accelerator&lt;/a&gt;—a tested solution that we use to help customers across industries address their document processing challenges. Automated document processing workflows accurately extract structured information from documents, reducing manual effort. We will show you how this ready-to-deploy solution can help you build those workflows with generative AI on AWS in days instead of months.&lt;/p&gt; 
&lt;h2&gt;Understanding intelligent document processing&lt;/h2&gt; 
&lt;p&gt;Intelligent document processing (IDP) encompasses the technologies and techniques used to extract and process data from various document types. Common IDP tasks include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OCR (Optical Character Recognition)&lt;/strong&gt; – Converting scanned documents and images into machine-readable text&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Document classification&lt;/strong&gt; – Automatically identifying document types (such as invoices, contracts, or forms)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data extraction&lt;/strong&gt; – Pulling structured information from unstructured documents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Assessment&lt;/strong&gt; – Evaluating the quality and confidence of extracted data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Summarization&lt;/strong&gt; – Creating concise summaries of document content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evaluation&lt;/strong&gt; – Measuring accuracy and performance against expected outcomes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These capabilities are critical across industries. In financial services, organizations use IDP to process loan applications, extract data from bank statements, and validate insurance claims. Healthcare providers rely on IDP to extract patient information from medical records, process insurance forms, and handle lab results efficiently. Manufacturing and logistics companies use IDP to process invoices and purchase orders, extract shipping information, and handle quality certificates. Government agencies use IDP to process citizen applications, extract data from tax forms, manage permits and licenses, and enforce regulatory compliance.&lt;/p&gt; 
&lt;h2&gt;The generative AI revolution in IDP&lt;/h2&gt; 
&lt;p&gt;Traditional IDP solutions relied on template-based extraction, regular expressions, and classical machine learning (ML) models. Though functional, these approaches required extensive setup, struggled with document variations, and achieved limited accuracy on complex documents.&lt;/p&gt; 
&lt;p&gt;The emergence of large language models (LLMs) and generative AI has fundamentally transformed IDP capabilities. Modern AI models can understand document context, handle variations without templates, achieve near-human accuracy on complex extractions, and adapt to new document types with minimal examples. This shift from rule-based to intelligence-based processing means organizations can now process different document types with high accuracy, dramatically reducing the time and cost of implementation.&lt;/p&gt; 
&lt;h2&gt;GenAI IDP Accelerator&lt;/h2&gt; 
&lt;p&gt;We’re excited to share the &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/README.md" target="_blank" rel="noopener noreferrer"&gt;GenAI IDP Accelerator&lt;/a&gt;—an open source solution that transforms how organizations handle document processing by dramatically reducing manual effort and improving accuracy. This serverless foundation offers processing patterns which use &lt;a href="https://aws.amazon.com/bedrock/bda/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Data Automation&lt;/a&gt; for rich out-of-the-box document processing features, high accuracy, ease of use, and straightforward per-page pricing, &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt; state-of-the-art foundation models (FMs) for complex documents requiring custom logic, and other AWS AI services to provide a flexible, scalable starting point for enterprises to build document automation tailored to their specific needs.&lt;/p&gt; 
&lt;p&gt;The following is a short demo of the solution in action, in this case showcasing the default Amazon Bedrock Data Automation processing pattern.&lt;/p&gt; 
&lt;div style="width: 640px;" class="wp-video"&gt;
 &lt;video class="wp-video-shortcode" id="video-114439-1" width="640" height="360" preload="metadata" controls="controls"&gt;
  &lt;source type="video/mp4" src="https://d2908q01vomqb2.cloudfront.net/artifacts/DBSBlogs/ML-18800/video_1755214496026.mp4?_=1"&gt;
 &lt;/video&gt;
&lt;/div&gt; 
&lt;h2&gt;Real-world impact&lt;/h2&gt; 
&lt;p&gt;The GenAI IDP Accelerator is already transforming document processing for organizations across industries.&lt;/p&gt; 
&lt;h3&gt;Competiscan: Transforming marketing intelligence at scale&lt;/h3&gt; 
&lt;p&gt;Competiscan, a leader in competitive marketing intelligence, faced a massive challenge: processing 35,000–45,000 marketing campaigns daily while maintaining a searchable archive of 45 million campaigns spanning 15 years.&lt;/p&gt; 
&lt;p&gt;Using the GenAI IDP Accelerator, Competiscan achieved the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;85% classification and extraction accuracy across diverse marketing materials&lt;/li&gt; 
 &lt;li&gt;Increased scalability to handle 35,000–45,000 daily campaigns&lt;/li&gt; 
 &lt;li&gt;Removal of critical bottlenecks, facilitating business growth&lt;/li&gt; 
 &lt;li&gt;Production deployment in just 8 weeks from initial concept&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ricoh: Scaling document processing&lt;/h3&gt; 
&lt;p&gt;Ricoh, a global leader in document management, implemented the GenAI IDP Accelerator to transform healthcare document processing for their clients. Processing over 10,000 healthcare documents monthly with potential to scale to 70,000, they needed a solution that could handle complex medical documentation with high accuracy.&lt;/p&gt; 
&lt;p&gt;The results speak for themselves:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Savings potential of over 1,900 person-hours annually through automation&lt;/li&gt; 
 &lt;li&gt;Achieved extraction accuracy to help minimize financial penalties from processing errors&lt;/li&gt; 
 &lt;li&gt;Automated classification of grievances vs. appeals&lt;/li&gt; 
 &lt;li&gt;Created a reusable framework deployable across multiple healthcare customers&lt;/li&gt; 
 &lt;li&gt;Integrated with human-in-the-loop review for cases requiring expert validation&lt;/li&gt; 
 &lt;li&gt;Leveraged modular architecture to integrate with existing systems, enabling custom document splitting and large-scale document processing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;The GenAI IDP Accelerator is a modular, serverless solution that automatically converts unstructured documents into structured, actionable data. Built entirely on AWS services, it provides enterprise-grade scalability, security, and cost-effectiveness while requiring minimal setup and maintenance. Its configuration-driven design helps teams quickly adapt prompts, extraction templates, and validation rules for their specific document types without touching the underlying infrastructure.&lt;/p&gt; 
&lt;p&gt;The solution follows a modular pipeline that enriches documents at each stage, from OCR to classification, to extraction, to assessment, to summarization, and ending with evaluation.&lt;/p&gt; 
&lt;p&gt;You can deploy and customize each step independently, so you can optimize for your specific use cases while maintaining the benefits of the integrated workflow.&lt;/p&gt; 
&lt;p&gt;The following diagram illustrates the solution architecture, showing the default Bedrock Data Automation workflow (Pattern-1).&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114443" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-188002.png" alt="" width="1163" height="629"&gt;&lt;/p&gt; 
&lt;p&gt;Refer to the &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/architecture.md" target="_blank" rel="noopener noreferrer"&gt;GitHub repo&lt;/a&gt; for additional details and processing patterns.&lt;/p&gt; 
&lt;p&gt;Some of the key features of the solution include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Serverless architecture&lt;/strong&gt; – Built on &lt;a href="https://aws.amazon.com/lambda/" target="_blank" rel="noopener noreferrer"&gt;AWS Lambda&lt;/a&gt;, &lt;a href="https://aws.amazon.com/step-functions/" target="_blank" rel="noopener noreferrer"&gt;AWS Step Functions&lt;/a&gt;, and other serverless technologies for queueing, concurrency management, and retries to provide automatic scaling and pay-per-use pricing for production workloads of many sizes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generative AI-powered document packet splitting and classification&lt;/strong&gt; – Intelligent document &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/classification.md" target="_blank" rel="noopener noreferrer"&gt;classification&lt;/a&gt; using Amazon Bedrock Data Automation or Amazon Bedrock multimodal FMs, including support for multi-document packets and packet splitting&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced AI key information extraction&lt;/strong&gt; – Key information &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/extraction.md" target="_blank" rel="noopener noreferrer"&gt;extraction&lt;/a&gt; using Amazon Bedrock Data Automation or Amazon Bedrock multimodal FMs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple processing patterns&lt;/strong&gt; – Choose from pre-built patterns optimized for different workloads with different configurability, cost, and accuracy requirements, or extend the solution with additional patterns: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/pattern-1.md" target="_blank" rel="noopener noreferrer"&gt;Pattern 1&lt;/a&gt; – Uses Amazon Bedrock Data Automation, a fully managed service that offers rich out-of-the-box features, ease of use, and straightforward per-page pricing. This pattern is recommended for most use cases.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/pattern-2.md" target="_blank" rel="noopener noreferrer"&gt;Pattern 2&lt;/a&gt; – Uses Amazon Textract and Amazon Bedrock with Amazon Nova, Anthropic’s Claude, or custom fine-tuned Amazon Nova models. This pattern is ideal for complex documents requiring custom logic.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/pattern-3.md" target="_blank" rel="noopener noreferrer"&gt;Pattern 3&lt;/a&gt; – Uses Amazon Textract, &lt;a href="https://aws.amazon.com/sagemaker/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker&lt;/a&gt; with a fine-tuned model for classification, and Amazon Bedrock for extraction. This pattern is ideal for documents requiring specialized classification.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We expect to add more pattern options to handle additional real-world document processing needs, and to take advantage of ever-improving state-of-the-art capabilities:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Few-shot learning&lt;/strong&gt; – Improve accuracy for classification and extraction by providing &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/few-shot-examples.md" target="_blank" rel="noopener noreferrer"&gt;few-shot examples&lt;/a&gt; to guide the AI models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Confidence assessment&lt;/strong&gt; – AI-powered quality assurance that &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/assessment.md" target="_blank" rel="noopener noreferrer"&gt;evaluates extraction field confidence&lt;/a&gt;, used to indicate documents for human review&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Human-in-the-loop (HITL) review&lt;/strong&gt; – Integrated workflow for &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/pattern-1.md#human-in-the-loop-hitl" target="_blank" rel="noopener noreferrer"&gt;human review&lt;/a&gt; of low-confidence extractions using &lt;a href="https://aws.amazon.com/augmented-ai/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Augmented AI&lt;/a&gt; (Amazon A2I), currently available for Pattern 1, with support for Patterns 2 and 3 coming soon&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web user interface&lt;/strong&gt; – &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/web-ui.md" target="_blank" rel="noopener noreferrer"&gt;Responsive web UI&lt;/a&gt; for monitoring document processing, viewing results, and managing configurations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Knowledge base integration&lt;/strong&gt; – &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/knowledge-base.md" target="_blank" rel="noopener noreferrer"&gt;Query processed documents&lt;/a&gt; using natural language through &lt;a href="https://aws.amazon.com/bedrock/knowledge-bases/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Knowledge Bases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in evaluation&lt;/strong&gt; – Framework to &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/evaluation.md" target="_blank" rel="noopener noreferrer"&gt;evaluate&lt;/a&gt; and improve accuracy against baseline data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Analytics and reporting database&lt;/strong&gt; – Centralized &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/reporting-database.md" target="_blank" rel="noopener noreferrer"&gt;analytics database&lt;/a&gt; for tracking processing metrics, accuracy trends, and cost optimization across document workflows, and for analyzing extracted document content using &lt;a href="http://aws.amazon.com/athena" target="_blank" rel="noopener noreferrer"&gt;Amazon Athena&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No-code configuration&lt;/strong&gt; – Customize document types, extraction fields, and processing logic through &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/configuration.md" target="_blank" rel="noopener noreferrer"&gt;configuration&lt;/a&gt;, editable in the web UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer-friendly python package&lt;/strong&gt; – For data science and engineering teams who want to experiment, optimize, or integrate the IDP capabilities directly into their workflows, the solution’s core logic is available through the &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/lib/idp_common_pkg/README.md" target="_blank" rel="noopener noreferrer"&gt;idp_common Python package&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before you deploy the solution, make sure you have an AWS account with administrator permissions and access to Amazon and Anthropic models on Amazon Bedrock. For more details, see &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/model-access.html" target="_blank" rel="noopener noreferrer"&gt;Access Amazon Bedrock foundation models&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deploy the GenAI IDP Accelerator&lt;/h2&gt; 
&lt;p&gt;To deploy the GenAI IDP Accelerator, you can use the provided &lt;a href="http://aws.amazon.com/cloudformation" target="_blank" rel="noopener noreferrer"&gt;AWS CloudFormation&lt;/a&gt; template. For more details, see the &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/README.md#quick-start" target="_blank" rel="noopener noreferrer"&gt;quick start option&lt;/a&gt; on the GitHub repo. The high-level steps are as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Log in to your AWS account.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Launch Stack&lt;/strong&gt; for your preferred AWS Region:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;table class="styled-table" border="1px" cellpadding="10px"&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th style="padding: 10px"&gt;&lt;strong&gt;Region&lt;/strong&gt;&lt;/th&gt; 
   &lt;th style="padding: 10px"&gt;&lt;strong&gt;Launch Stack&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;US East (N. Virginia)&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;a href="https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/create/review?templateURL=https://s3.us-east-1.amazonaws.com/aws-ml-blog-us-east-1/artifacts/genai-idp/idp-main.yaml&amp;amp;stackName=IDP" target="_blank" rel="noopener"&gt;&lt;img loading="lazy" class="alignnone wp-image-114448 size-thumbnail" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-188003-100x19.png" alt="" width="100" height="19"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;US West (Oregon)&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;a href="https://us-west-2.console.aws.amazon.com/cloudformation/home?region=us-west-2#/stacks/create/review?templateURL=https://s3.us-west-2.amazonaws.com/aws-ml-blog-us-west-2/artifacts/genai-idp/idp-main.yaml&amp;amp;stackName=IDP" target="_blank" rel="noopener"&gt;&lt;img loading="lazy" class="alignnone wp-image-114448 size-thumbnail" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-188003-100x19.png" alt="" width="100" height="19"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enter your email address and choose your processing pattern (default is Pattern 1, using Amazon Bedrock Data Automation).&lt;/li&gt; 
 &lt;li&gt;Use defaults for all other configuration parameters.&lt;/li&gt; 
 &lt;li&gt;Deploy the stack.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The stack takes approximately 15–20 minutes to deploy the resources. After deployment, you will receive an email with login credentials for the web interface.&lt;/p&gt; 
&lt;h2&gt;Process documents&lt;/h2&gt; 
&lt;p&gt;After you deploy the solution, you can start processing documents:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use the web interface to upload a sample document (you can use the provided sample: &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/samples/lending_package.pdf" target="_blank" rel="noopener noreferrer"&gt;lending_package.pdf&lt;/a&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;In production, you typically automate loading your documents directly to the &lt;a href="http://aws.amazon.com/s3" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Storage Service&lt;/a&gt; (Amazon S3) input bucket, automatically triggering processing. To learn more, see &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/deployment.md#testing-without-the-ui" target="_blank" rel="noopener noreferrer"&gt;Testing without the UI&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114447" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-188005.jpeg" alt="" width="903" height="632"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Select your document from the document list and choose &lt;strong&gt;View Processing Flow&lt;/strong&gt; to watch as your document flows through the pipeline.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114446" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-188006.png" alt="" width="1432" height="878"&gt;&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Examine the extracted data with confidence scores.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114445" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-188007.png" alt="" width="1196" height="718"&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Use the knowledge base feature to ask questions about processed content.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114444" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-188008.png" alt="" width="1430" height="730"&gt;&lt;/p&gt; 
&lt;h2&gt;Alternative deployment methods&lt;/h2&gt; 
&lt;p&gt;You can &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/deployment.md#option-2-build-deployment-assets-from-source-code" target="_blank" rel="noopener noreferrer"&gt;build the solution from source code&lt;/a&gt; if you need to deploy the solution to additional Regions or build and deploy code changes&lt;strong&gt;. &lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We hope to add support for &lt;a href="https://aws.amazon.com/cdk/" target="_blank" rel="noopener noreferrer"&gt;AWS Cloud Development Kit&lt;/a&gt; (AWS CDK) and Terraform deployments. Follow the &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws" target="_blank" rel="noopener noreferrer"&gt;GitHub repository&lt;/a&gt; for updates, or contact &lt;a href="https://aws.amazon.com/professional-services/" target="_blank" rel="noopener noreferrer"&gt;AWS Professional Services&lt;/a&gt; for implementation assistance.&lt;/p&gt; 
&lt;h2&gt;Update an existing GenAI IDP Accelerator stack&lt;/h2&gt; 
&lt;p&gt;You can update your existing GenAI IDP Accelerator stack to the latest release. For more details, see &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws/blob/main/docs/deployment.md#updating-an-existing-stack" target="_blank" rel="noopener noreferrer"&gt;Updating an Existing Stack&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;When you’re finished experimenting, clean up your resources by using the AWS CloudFormation console to delete the IDP stack that you deployed.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this post, we discussed the GenAI IDP Accelerator, a new approach to document processing that combines the power of generative AI with the reliability and scale of AWS. You can process hundreds or even millions of documents to achieve better results faster and more cost-effectively than traditional approaches.&lt;/p&gt; 
&lt;p&gt;Visit the &lt;a href="https://github.com/aws-solutions-library-samples/accelerated-intelligent-document-processing-on-aws" target="_blank" rel="noopener noreferrer"&gt;GitHub repository&lt;/a&gt; for detailed guides and examples and choose &lt;strong&gt;watch&lt;/strong&gt; to stay informed on new releases and features. &lt;a href="https://aws.amazon.com/professional-services/" target="_blank" rel="noopener noreferrer"&gt;AWS Professional Services&lt;/a&gt; and &lt;a href="https://aws.amazon.com/partners/" target="_blank" rel="noopener noreferrer"&gt;AWS Partners&lt;/a&gt; are available to help with implementation. You can also join the GitHub community to contribute improvements and share your experiences.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the Authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-21654 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/02/10/Bob-Strahan-p.png" alt="Bob Strahan" width="100" height="133"&gt;Bob Strahan&lt;/strong&gt; is a Principal Solutions Architect in the AWS Generative AI Innovation Center.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-89414 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/10/15/ml-15690-kijosp.jpg" alt="" width="100" height="133"&gt;Joe King&lt;/strong&gt; is a Senior Data Scientist in the AWS Generative AI Innovation Center.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-92662 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/11/13/mofijul_islam.jpg" alt="" width="100" height="100"&gt;Mofijul Islam&lt;/strong&gt; is an Applied Scientist in the AWS Generative AI Innovation Center.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-113451 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/vincil.png" alt="" width="100" height="100"&gt;Vincil Bishop &lt;/strong&gt;is a Senior Deep Learning Architect in the AWS Generative AI Innovation Center.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-114452 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/kaleko.jpg" alt="" width="100" height="113"&gt;David Kaleko &lt;/strong&gt;is a Senior Applied Scientist in the AWS Generative AI Innovation Center.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-114453 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/rafal.png" alt="" width="100" height="100"&gt;Rafal Pawlaszek &lt;/strong&gt;is a Senior Cloud Application Architect in the AWS Generative AI Innovation Center.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-114440 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-18379_sromo_llama-100x133.jpg" alt="" width="100" height="133"&gt;Spencer Romo &lt;/strong&gt;is a Senior Data Scientist in the AWS Generative AI Innovation Center.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-114454 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/gudivt.jpg" alt="" width="100" height="134"&gt;Vamsi Thilak Gudi &lt;/strong&gt;is a Solutions Architect in the AWS World Wide Public Sector team.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;We would like to thank&amp;nbsp;Abhi Sharma, Akhil Nooney, Aleksei Iancheruk, Ava Kong, Boyi Xie, Diego Socolinsky, Guillermo Tantachuco, Ilya Marmur, Jared Kramer, Jason Zhang, Jordan Ratner, Mariano Bellagamba, Mark Aiyer, Niharika Jain, Nimish Radia, Shean Sager, Sirajus Salekin, Yingwei Yu, and many others in our expanding community, for their unwavering vision, passion, contributions, and guidance throughout.&lt;/p&gt;</content:encoded>
					
					
			
		
		<enclosure length="27253390" type="video/mp4" url="https://d2908q01vomqb2.cloudfront.net/artifacts/DBSBlogs/ML-18800/video_1755214496026.mp4"/>

			</item>
		<item>
		<title>Amazon SageMaker HyperPod enhances ML infrastructure with scalability and customizability</title>
		<link>https://aws.amazon.com/blogs/machine-learning/amazon-sagemaker-hyperpod-enhances-ml-infrastructure-with-scalability-and-customizability/</link>
					
		
		<dc:creator><![CDATA[Mark Vinciguerra]]></dc:creator>
		<pubDate>Fri, 22 Aug 2025 17:14:39 +0000</pubDate>
				<category><![CDATA[Advanced (300)]]></category>
		<category><![CDATA[Amazon SageMaker]]></category>
		<category><![CDATA[Amazon SageMaker AI]]></category>
		<category><![CDATA[Amazon SageMaker HyperPod]]></category>
		<category><![CDATA[Compute]]></category>
		<category><![CDATA[Launch]]></category>
		<category><![CDATA[Technical How-to]]></category>
		<guid isPermaLink="false">4d40fb4928f1c5f2844cf8229eb7f6b998e00a92</guid>

					<description>In this post, we introduced three features in SageMaker HyperPod that enhance scalability and customizability for ML infrastructure. Continuous provisioning offers flexible resource provisioning to help you start training and deploying your models faster and manage your cluster more efficiently. With custom AMIs, you can align your ML environments with organizational security standards and software requirements.</description>
										<content:encoded>&lt;p&gt;&lt;a href="https://aws.amazon.com/sagemaker-ai/hyperpod/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker HyperPod&lt;/a&gt; is a purpose-built infrastructure for optimizing foundation model (FM) training and inference at scale. SageMaker HyperPod removes the undifferentiated heavy lifting involved in building and optimizing machine learning (ML) infrastructure for training FMs, reducing training time by up to 40%.&lt;/p&gt; 
&lt;p&gt;SageMaker HyperPod offers persistent clusters with built-in resiliency, while also offering deep infrastructure control by allowing users to SSH into the underlying &lt;a href="http://aws.amazon.com/ec2" target="_blank" rel="noopener noreferrer"&gt;Amazon Elastic Compute Cloud&lt;/a&gt; (Amazon EC2) instances. It helps efficiently scale model development and deployment tasks such as training, fine-tuning, or inference across a cluster of hundreds or thousands of AI accelerators, while reducing the operational heavy lifting involved in managing such clusters. As AI moves towards deployment adopting to a multitude of domains and use cases, the need for flexibility and control is becoming more pertinent. Large enterprises want to make sure the GPU clusters follow the organization-wide policies and security rules. Mission-critical AI/ML workloads often require specialized environments that align with the organization’s software stack and operational standards.&lt;/p&gt; 
&lt;p&gt;SageMaker HyperPod supports &lt;a href="https://aws.amazon.com/eks/" target="_blank" rel="noopener noreferrer"&gt;Amazon Elastic Kubernetes Service&lt;/a&gt; (Amazon EKS) and offers two new features that enhance this control and flexibility to enable production deployment of large-scale ML workloads:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Continuous provisioning&lt;/strong&gt; – SageMaker HyperPod now supports continuous provisioning, which enhances cluster scalability through features like partial provisioning, rolling updates, concurrent scaling operations, and continuous retries when launching and configuring your HyperPod cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom AMIs &lt;/strong&gt;– You can now use custom &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Machine Images&lt;/a&gt; (AMIs), which enables the preconfiguration of software stacks, security agents, and proprietary dependencies that would otherwise require complex post-launch bootstrapping. Customers can create custom AMIs using the HyperPod public AMI as a base and install additional software required to meet their organization’s specific security and compliance requirements.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In this post, we dive deeper into each of these features.&lt;/p&gt; 
&lt;h2&gt;Continuous provisioning&lt;/h2&gt; 
&lt;p&gt;The new continuous provisioning feature in SageMaker HyperPod represents a transformative advancement for organizations running intensive ML workloads, delivering unprecedented flexibility and operational efficiency that accelerates AI innovation. This feature provides the following benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Partial provisioning&lt;/strong&gt; – SageMaker HyperPod prioritizes delivering the maximum possible number of instances without failure. You can start running your workload while your cluster will attempt to provision the remaining instances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Concurrent operations&lt;/strong&gt; – SageMaker HyperPod supports simultaneous scaling and maintenance activities (such as scale up, scale down, and patching) on a single instance group waiting for previous operations to complete.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Continuous retries&lt;/strong&gt; – SageMaker HyperPod persistently attempts to fulfill the user’s request until it encounters a &lt;code&gt;NonRecoverable&lt;/code&gt; error from where recovery is not possible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Increased customer visibility&lt;/strong&gt; – SageMaker HyperPod maps customer-initiated and service-initiated operations to structured activity streams, providing real-time status updates and detailed progress tracking.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For ML teams facing tight deadlines and resource constraints, this means dramatically reduced wait times and the ability to begin model training and deployment with whatever computing power is immediately available, while the system works diligently in the background to provision remaining requested resources.&lt;/p&gt; 
&lt;h3&gt;Implement continuous provisioning in a SageMaker HyperPod cluster&lt;/h3&gt; 
&lt;p&gt;The architecture introduces an intuitive yet powerful parameter that puts scaling strategy control directly in your hands: &lt;code&gt;--node-provisioning-mode&lt;/code&gt;. Continuous provisioning maximizes resource utilization and operational agility.&lt;/p&gt; 
&lt;p&gt;The following code creates a cluster with one instance group and continuous provisioning mode enabled using &lt;code&gt;--node-provisioning-mode&lt;/code&gt;:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;create-cluster \ 
--cluster-name $HP_CLUSTER_NAME \
--orchestrator 'Eks={ClusterArn='$EKS_CLUSTER_ARN'}' \
--vpc-config '{
&amp;nbsp;&amp;nbsp; "SecurityGroupIds": ["'$SECURITY_GROUP'"],
&amp;nbsp;&amp;nbsp; "Subnets": ["'$SUBNET'"]
}' \
--instance-groups '{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "ig-1",
&amp;nbsp;&amp;nbsp; "InstanceType": "ml.p6-b200.48xlarge",
&amp;nbsp;&amp;nbsp; "InstanceCount": 2,
&amp;nbsp;&amp;nbsp; "LifeCycleConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"SourceS3Uri": "s3://'$BUCKET_NAME'",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"OnCreate": "on_create.sh"
&amp;nbsp;&amp;nbsp; },
&amp;nbsp;&amp;nbsp; "ExecutionRole": "'$EXECUTION_ROLE'",
&amp;nbsp;&amp;nbsp; "ThreadsPerCore": 1
}' \
--node-provisioning-mode Continuous
{
&amp;nbsp;&amp;nbsp; &amp;nbsp;"ClusterArn": "arn:aws:sagemaker:us-west-2:530295135845:cluster/pv09azbjo6hs"
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Additional features are released with continuous provisioning:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cron job scheduling for instance group software updates:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;update-cluster --cluster-name $HP_CLUSTER_NAME \
--instance-groups '[{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "group2",
&amp;nbsp;&amp;nbsp; "InstanceType": "ml.p6-b200.48xlarge",
&amp;nbsp;&amp;nbsp; "InstanceCount": 2,
&amp;nbsp;&amp;nbsp; "LifeCycleConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"SourceS3Uri": "s3://'$BUCKET_NAME'",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"OnCreate": "on_create.sh"
&amp;nbsp;&amp;nbsp; },
&amp;nbsp;&amp;nbsp; "ExecutionRole": "'$EXECUTION_ROLE'",
&amp;nbsp;&amp;nbsp; "ThreadsPerCore": 1,
&amp;nbsp;&amp;nbsp; "ScheduledUpdateConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"ScheduleExpression": "cron(30 19 27 * ? *)" # Cron job parameters:&amp;nbsp;cron(Minutes Hours Day-of-month Month Day-of-week Year)
&amp;nbsp;&amp;nbsp; }
}]' \&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/deployment-guardrails-rolling.html"&gt;Rolling updates&lt;/a&gt; with safety measures. With rolling deployment, HyperPod gradually shifts traffic from your old fleet to a new fleet. If there is an issue during deployment, it should not affect the whole cluster.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;update-cluster --cluster-name $HP_CLUSTER_NAME \
--instance-groups '[{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "group4",
&amp;nbsp;&amp;nbsp; "ScheduledUpdateConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"ScheduleExpression": "cron(45 14 25 * ? *)",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"DeploymentConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "AutoRollbackConfiguration": [{
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"AlarmName": "RollbackPatchingAlarm"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }],
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "RollingUpdatePolicy": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"MaximumBatchSize": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Type": "INSTANCE_COUNT",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Value": 1
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "WaitIntervalInSeconds": 15
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; }
}]'&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;List cluster nodes API:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker list-cluster-nodes --cluster-name $HP_CLUSTER_NAME&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Batch add nodes (add nodes to specific instance groups):&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;batch-add-cluster-nodes --cluster-name $HP_CLUSTER_NAME \
--nodes-to-add '[{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "group1",
&amp;nbsp;&amp;nbsp; "IncrementTargetCountBy": 5
}]'&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Batch delete nodes (remove specific nodes by ID):&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;batch-delete-cluster-nodes --cluster-name $HP_CLUSTER_NAME \
--node-ids i-0b949a3867b2a963a&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable Training Plan capacity for instance provisioning by adding the &lt;code&gt;TrainingPlanArn&lt;/code&gt; parameter during instance group creation:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;update-cluster --cluster-name $HP_CLUSTER_NAME \
--instance-groups '[{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "training-group",
&amp;nbsp;&amp;nbsp; "InstanceType": "ml.p6-b200.48xlarge",
&amp;nbsp;&amp;nbsp; "InstanceCount": 3,
&amp;nbsp;&amp;nbsp; "TrainingPlanArn": "YOUR_TRAINING_PLAN_ARN"
}]'&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cluster event observability:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemake list-cluster-events —cluster-name $HP_CLUSTER_NAME&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Custom AMIs&lt;/h2&gt; 
&lt;p&gt;To reduce operational overhead, nodes in a SageMaker HyperPod cluster are launched with the &lt;a href="https://docs.aws.amazon.com/dlami/latest/devguide/what-is-dlami.html" target="_blank" rel="noopener noreferrer"&gt;AWS Deep Learning AMIs&lt;/a&gt; (DLAMIs). AWS DLAMIs are pre-built AMIs that are optimized for running deep learning workloads on EC2 instances. They come pre-installed with popular deep learning frameworks, libraries, and tools to make it straightforward to get started with training and deploying deep learning models.&lt;/p&gt; 
&lt;p&gt;The new custom AMI feature of SageMaker HyperPod unlocks even greater value for enterprise customers by delivering the granular control and operational excellence you need to accelerate AI initiatives while maintaining security standards. It seamlessly bridges high-performance computing requirements with enterprise-grade security and operational excellence.&lt;/p&gt; 
&lt;p&gt;Organizations can now build customized AMIs using SageMaker HyperPod performance-tuned public AMIs as a foundation; teams can pre-install security agents, compliance tools, proprietary software, and specialized libraries directly into optimized images.&lt;/p&gt; 
&lt;p&gt;This feature offers the following benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It accelerates time-to-value by minimizing runtime installation delays and reducing cluster initialization time through pre-built configurations.&lt;/li&gt; 
 &lt;li&gt;From a security standpoint, it enables enterprise-grade centralized control, so security teams can maintain complete oversight while meeting their compliance requirements.&lt;/li&gt; 
 &lt;li&gt;Operationally, the feature promotes excellence through standardized, reproducible environments using version-controlled AMIs, while providing seamless integration with existing workflows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections outline a step-by-step approach to build your own AMI and use it on your SageMaker HyperPod cluster.&lt;/p&gt; 
&lt;h3&gt;Select and obtain your SageMaker HyperPod base AMI&lt;/h3&gt; 
&lt;p&gt;You can choose from two options to retrieve the SageMaker HyperPod base AMI. To use the Amazon EC2 console, complete the following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;On the Amazon EC2 console, choose &lt;strong&gt;AMIs&lt;/strong&gt; under &lt;strong&gt;Images&lt;/strong&gt; in the navigation pane.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Public images&lt;/strong&gt; as the image type and set the &lt;strong&gt;Owner alias&lt;/strong&gt; filter to &lt;strong&gt;Amazon&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Search for AMIs prefixed with &lt;code&gt;HyperPod EKS&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Choose the appropriate AMI (preferably the latest).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/ML-19412-ami.jpeg"&gt;&lt;img loading="lazy" class="alignnone wp-image-114505 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/ML-19412-ami.jpeg" alt="AMI-list" width="1289" height="387"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Alternatively, you can use the &lt;a href="https://aws.amazon.com/cli/" target="_blank" rel="noopener noreferrer"&gt;Amazon Command Line Interface&lt;/a&gt; (AWS CLI) with &lt;a href="https://aws.amazon.com/systems-manager/" target="_blank" rel="noopener noreferrer"&gt;AWS Systems Manager&lt;/a&gt; to fetch the latest SageMaker HyperPod base AMI:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-php"&gt;aws ssm get-parameter \
&amp;nbsp;&amp;nbsp;--name "/aws/service/sagemaker-hyperpod/ami/x86_64/eks-1.31-amazon-linux-2/latest/ami-id" \
&amp;nbsp;&amp;nbsp;--region us-west-2 \
&amp;nbsp;&amp;nbsp;--query "Parameter.Value" \
&amp;nbsp;&amp;nbsp;--output text

// Replace the parameter name with corresponding kubernetes version as required.
// For example, If you want to use kubernetes 1.30, use the following parameter&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Build your custom AMI&lt;/h3&gt; 
&lt;p&gt;After you select a SageMaker HyperPod public AMI, use that as the base AMI to &lt;a href="https://docs.aws.amazon.com/toolkit-for-visual-studio/latest/user-guide/tkv-create-ami-from-instance.html" target="_blank" rel="noopener noreferrer"&gt;build your own custom AMI&lt;/a&gt; using one of the following methods. This is not an exhaustive list for building AMIs; you can use your preferred method. SageMaker HyperPod does not have any strong recommendations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Amazon EC2 console &lt;/strong&gt;– Choose your customized EC2 instance, then choose &lt;strong&gt;Action&lt;/strong&gt;, &lt;strong&gt;Image and Templates&lt;/strong&gt;, &lt;strong&gt;Create Image&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AWS CLI&lt;/strong&gt; – Use the &lt;code&gt;aws ec2&lt;/code&gt; &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-image.html" target="_blank" rel="noopener noreferrer"&gt;create-image&lt;/a&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HashiCorp Packer&lt;/strong&gt; – &lt;a href="https://developer.hashicorp.com/packer" target="_blank" rel="noopener noreferrer"&gt;Packer&lt;/a&gt; is an open source tool from HashiCorp that you can use to create identical machine images for multiple platforms from a single source configuration. It supports creating AMIs for AWS, as well as images for other cloud providers and virtualization platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EC2 Image Builder &lt;/strong&gt;– &lt;a href="https://aws.amazon.com/image-builder/" target="_blank" rel="noopener noreferrer"&gt;EC2 Image Builder&lt;/a&gt; is a fully managed AWS service that makes it straightforward to automate the creation, maintenance, validation, sharing, and deployment of Linux or Windows Server images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Set up the required permissions&lt;/h3&gt; 
&lt;p&gt;Before you start using custom AMIs, confirm you have the required &lt;a href="https://aws.amazon.com/iam/" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management&lt;/a&gt; (IAM) policies configured. Make sure you add the following policies to your &lt;code&gt;ClusterAdmin&lt;/code&gt; user permissions (IAM policy):&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;# Minimum set of permissions for admin to run the HyperPod core APIs
"sagemaker:CreateCluster",
"sagemaker:DeleteCluster",
"sagemaker:DescribeCluster",
"sagemaker:DescribeCluterNode",
"sagemaker:ListClusterNodes",
"sagemaker:ListClusters",
"sagemaker:UpdateCluster",
"sagemaker:UpdateClusterSoftware",
"sagemaker:BatchDeleteClusterNodes",
"eks:DescribeCluster",
"eks:CreateAccessEntry",
"eks:DescribeAccessEntry",
"eks:DeleteAccessEntry",
"eks:AssociateAccessPolicy",
"iam:CreateServiceLinkedRole",

# Permissions required to manage HyperPod clusters with custom AMI
"ec2:DescribeImages",
"ec2:ModifyImageAttribute",
"ec2:modifySnapshotAttribute",
"ec2:DescribeSnapshots"&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Run cluster management operations&lt;/h3&gt; 
&lt;p&gt;To create a cluster with a custom AMI, use the &lt;code&gt;aws sagemaker create-cluster&lt;/code&gt; command. Specify your custom AMI in the &lt;code&gt;ImageId&lt;/code&gt; parameter, and include other required cluster configurations:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;create-cluster \
&amp;nbsp;&amp;nbsp; --cluster-name clusterNameHere \
&amp;nbsp;&amp;nbsp; --orchestrator 'Eks={ClusterArn='$EKS_CLUSTER_ARN'}' \
&amp;nbsp;&amp;nbsp; --node-provisioning-mode Continuous&amp;nbsp;\
&amp;nbsp;&amp;nbsp; --instance-groups '{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "groupNameHere",
&amp;nbsp;&amp;nbsp; "InstanceType": "ml.p6-b200.48xlarge",
&amp;nbsp;&amp;nbsp; "InstanceCount": 2,
&amp;nbsp;&amp;nbsp; "LifeCycleConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"SourceS3Uri": "s3://'$BUCKET_NAME'",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"OnCreate": "on_create.sh"
&amp;nbsp;&amp;nbsp; },
&amp;nbsp;&amp;nbsp; "ImageId: "&amp;lt;YOUR_CUSTOM_AMI&amp;gt;,
&amp;nbsp;&amp;nbsp; "ExecutionRole": "'$EXECUTION_ROLE'",
&amp;nbsp;&amp;nbsp; "ThreadsPerCore": 1,
&amp;nbsp;&amp;nbsp;&amp;nbsp;"InstanceStorageConfigs": [
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;{
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"EbsVolumeConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"VolumeSizeInGB": 500,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; ]
}' --vpc-config '{
&amp;nbsp;&amp;nbsp; "SecurityGroupIds": ["'$SECURITY_GROUP'"],
&amp;nbsp;&amp;nbsp; "Subnets": ["'$SUBNET'"]
}'&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Scale up an instance group with the following code:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;update-cluster \
&amp;nbsp;&amp;nbsp; &amp;nbsp;--cluster-name $HP_CLUSTER_NAME --instance-groups '[{ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;
&amp;nbsp;&amp;nbsp; &amp;nbsp;"InstanceGroupName": "groupNameHere",
&amp;nbsp;&amp;nbsp; "InstanceType": "ml.p6-b200.48xlarge",
&amp;nbsp;&amp;nbsp; "InstanceCount": 10,
&amp;nbsp;&amp;nbsp; "LifeCycleConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"SourceS3Uri": "s3://'$BUCKET_NAME'",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"OnCreate": "on_create.sh"
&amp;nbsp;&amp;nbsp; },
&amp;nbsp;&amp;nbsp; "ExecutionRole": "'$EXECUTION_ROLE'",
&amp;nbsp;&amp;nbsp; "ThreadsPerCore": 1,
&amp;nbsp;&amp;nbsp; "ImageId: "&amp;lt;YOUR_CUSTOM_AMI&amp;gt;,
}]'&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Add an instance group with the following code:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;aws sagemaker&amp;nbsp;update-cluster \
&amp;nbsp;&amp;nbsp; --cluster-name "clusterNameHere" \
&amp;nbsp;&amp;nbsp; --instance-groups '{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "groupNameHere",
&amp;nbsp;&amp;nbsp; "InstanceType": "ml.p6-b200.48xlarge",
&amp;nbsp;&amp;nbsp; "InstanceCount": 10,
&amp;nbsp;&amp;nbsp; "LifeCycleConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"SourceS3Uri": "s3://'$BUCKET_NAME'",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"OnCreate": "on_create.sh"
&amp;nbsp;&amp;nbsp; },
&amp;nbsp;&amp;nbsp; "ExecutionRole": "'$EXECUTION_ROLE'",
&amp;nbsp;&amp;nbsp; "ThreadsPerCore": 1,
&amp;nbsp;&amp;nbsp; "ImageId: "&amp;lt;YOUR_CUSTOM_AMI&amp;gt;,
}' '{
&amp;nbsp;&amp;nbsp; "InstanceGroupName": "groupNameHere2",
&amp;nbsp;&amp;nbsp; "InstanceType": "ml.c5.2xlarge",
&amp;nbsp;&amp;nbsp; "InstanceCount": 1,
&amp;nbsp;&amp;nbsp; "LifeCycleConfig": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"SourceS3Uri": "s3://'$BUCKET_NAME'",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"OnCreate": "on_create.sh"
&amp;nbsp;&amp;nbsp; },
&amp;nbsp;&amp;nbsp; "ExecutionRole": "'$EXECUTION_ROLE'",
&amp;nbsp;&amp;nbsp; "ThreadsPerCore": 1,
&amp;nbsp;&amp;nbsp; "ImageId: "&amp;lt;YOUR_CUSTOM_AMI_2&amp;gt;,
}'&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Considerations&lt;/h3&gt; 
&lt;p&gt;When using custom AMIs with your cluster, be aware of the following requirements and limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Snapshot support&lt;/strong&gt; – Custom AMIs must contain only the root snapshot. Additional snapshots are not supported and will cause cluster creation or update operations to fail with a validation exception if the AMI contains additional snapshots beyond the root volume.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Patching&lt;/strong&gt; – &lt;code&gt;ImageId&lt;/code&gt; in &lt;code&gt;update-cluster&lt;/code&gt; is immutable. For patching existing instance groups, you must use &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/sagemaker/update-cluster-software.html" target="_blank" rel="noopener noreferrer"&gt;UpdateClusterSoftware&lt;/a&gt; with &lt;code&gt;ImageId&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AMI versions and deprecation&amp;nbsp;&lt;/strong&gt;– The &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-release-public-ami.html"&gt;public AMI releases page&lt;/a&gt; talks about the public AMI versions and deprecation status. Customers are expected to monitor this page for AMI vulnerabilities and deprecation status and patch cluster with updated custom AMI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;To clean up your resources to avoid incurring more charges, complete the following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-eks-operate-cli-command-delete-cluster.html" target="_blank" rel="noopener noreferrer"&gt;Delete your SageMaker HyperPod cluster&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you created the networking stack from the &lt;a href="https://catalog.workshops.aws/sagemaker-hyperpod-eks/en-US" target="_blank" rel="noopener noreferrer"&gt;SageMaker HyperPod workshop&lt;/a&gt;, delete the stack as well to clean up the virtual private cloud (VPC) resources and the FSx for Lustre volume.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this post, we introduced three features in SageMaker HyperPod that enhance scalability and customizability for ML infrastructure. Continuous provisioning offers flexible resource provisioning to help you start training and deploying your models faster and manage your cluster more efficiently. With custom AMIs, you can align your ML environments with organizational security standards and software requirements. To learn more about these features, see:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-scaling-eks.html"&gt;Continuous provisioning for enhanced cluster operations on Amazon EKS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/hyperpod-custom-ami-how-to.html"&gt;Build a custom AMI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="clear: both"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/mvincig.jpg"&gt;&lt;img loading="lazy" class="alignleft wp-image-114514 size-thumbnail" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/mvincig-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;&lt;strong&gt;Mark Vinciguerra&lt;/strong&gt; is an Associate Specialist Solutions Architect at Amazon Web Services (AWS) based in New York. He focuses on Generative AI training and inference, with the goal of helping customers architect, optimize, and scale their workloads across various AWS services. Prior to AWS, he went to Boston University and graduated with a degree in Computer Engineering. You can connect with him on &lt;a href="https://www.linkedin.com/in/mark-vinciguerra/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/anoopx.jpg"&gt;&lt;img loading="lazy" class="alignleft wp-image-114517 size-thumbnail" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/anoopx-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;Anoop Saha&lt;/strong&gt; is a Sr GTM Specialist at Amazon Web Services (AWS) focusing on generative AI model training and inference. He partners with top frontier model builders, strategic customers, and AWS service teams to enable distributed training and inference at scale on AWS and lead joint GTM motions. Before AWS, Anoop held several leadership roles at startups and large corporations, primarily focusing on silicon and system architecture of AI infrastructure.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/monidipa.jpg"&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114519" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/monidipa-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;Monidipa Chakraborty&lt;/strong&gt; currently serves as a Senior Software Development Engineer at Amazon Web Services (AWS), specifically within the SageMaker HyperPod team. She is committed to assisting customers by designing and implementing robust and scalable systems that demonstrate operational excellence. Bringing nearly a decade of software development experience, Monidipa has contributed to various sectors within Amazon, including Video, Retail, Amazon Go, and AWS SageMaker.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/nagpalar.jpg"&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114521" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/nagpalar-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;Arun Nagpal&lt;/strong&gt; is a Sr Technical Account Manager &amp;amp; Enterprise Support Lead at Amazon Web Services (AWS), specializing in driving generative AI and supporting startups through enterprise-wide cloud transformations. He focuses on adopting AI services within AWS and aligning technology strategies with business objectives to achieve impactful results.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/ydaiming.jpg"&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114523" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/ydaiming-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;Daiming Yang&lt;/strong&gt; is a technical leader at AWS, working on machine learning infrastructure that enables large-scale training and inference workloads. He has contributed to multiple AWS services and is proficient in various AWS technologies, with expertise in distributed systems, Kubernetes, and cloud-native architecture. Passionate about building reliable, customer-focused solutions, he specializes in transforming complex technical challenges into simple, robust systems that scale globally.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/jhakunal.jpg"&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114518" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/jhakunal-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;Kunal Jha&lt;/strong&gt; is a Principal Product Manager at AWS, where he focuses on building Amazon SageMaker HyperPod to enable scalable distributed training and fine-tuning of foundation models. In his spare time, Kunal enjoys skiing and exploring the Pacific Northwest. You can connect with him on &lt;a href="https://www.linkedin.com/in/kunal-j/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/saakla.jpg"&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114522" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/saakla-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;Sai Kiran Akula&lt;/strong&gt; is an engineering leader at AWS, working on the HyperPod team focused on improving infrastructure for machine learning training/inference&amp;nbsp;jobs. He has contributed to core AWS services like EC2, ECS, Fargate, and SageMaker partner AI apps. With a background in distributed systems, he focuses on building reliable and scalable solutions across teams.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Fine-tune OpenAI GPT-OSS models using Amazon SageMaker HyperPod recipes</title>
		<link>https://aws.amazon.com/blogs/machine-learning/fine-tune-openai-gpt-oss-models-using-amazon-sagemaker-hyperpod-recipes/</link>
					
		
		<dc:creator><![CDATA[Durga Sury]]></dc:creator>
		<pubDate>Thu, 21 Aug 2025 21:35:59 +0000</pubDate>
				<category><![CDATA[Amazon SageMaker]]></category>
		<category><![CDATA[Amazon SageMaker AI]]></category>
		<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Foundation models]]></category>
		<guid isPermaLink="false">952309d6f2e51c14cfd4de4f1b721630f95ca3fc</guid>

					<description>This post is the second part of the GPT-OSS series focusing on model customization with Amazon SageMaker AI. In Part 1, we demonstrated fine-tuning GPT-OSS models using open source Hugging Face libraries with SageMaker training jobs, which supports distributed multi-GPU and multi-node configurations, so you can spin up high-performance clusters on demand. In this post, […]</description>
										<content:encoded>&lt;p&gt;This post is the second part of the GPT-OSS series focusing on model customization with &lt;a href="https://aws.amazon.com/sagemaker/ai/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker AI&lt;/a&gt;. In &lt;a href="https://aws.amazon.com/blogs/machine-learning/fine-tune-openai-gpt-oss-models-on-amazon-sagemaker-ai-using-hugging-face-libraries/" target="_blank" rel="noopener noreferrer"&gt;Part 1&lt;/a&gt;, we demonstrated fine-tuning GPT-OSS models using open source Hugging Face libraries with SageMaker training jobs, which supports distributed multi-GPU and multi-node configurations, so you can spin up high-performance clusters on demand.&lt;/p&gt; 
&lt;p&gt;In this post, we show how you can fine-tune GPT OSS models on using recipes on &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-recipes.html" target="_blank" rel="noopener noreferrer"&gt;SageMaker HyperPod and Training Jobs&lt;/a&gt;. SageMaker HyperPod recipes help you get started with training and fine-tuning popular publicly available foundation models (FMs) such as Meta’s Llama, Mistral, and DeepSeek in just minutes, using either SageMaker HyperPod or training jobs. The recipes provide pre-built, validated configurations that alleviate the complexity of setting up distributed training environments while maintaining enterprise-grade performance and scalability for models. We outline steps to fine-tune the GPT-OSS model on a multilingual reasoning dataset, &lt;a href="https://huggingface.co/datasets/HuggingFaceH4/Multilingual-Thinking" target="_blank" rel="noopener noreferrer"&gt;HuggingFaceH4/Multilingual-Thinking&lt;/a&gt;, so GPT-OSS can handle structured, chain-of-thought (CoT) reasoning across multiple languages.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;This solution uses SageMaker HyperPod recipes to run a fine-tuning job on HyperPod using &lt;a href="https://aws.amazon.com/eks/" target="_blank" rel="noopener noreferrer"&gt;Amazon Elastic Kubernetes Service&lt;/a&gt; (Amazon EKS) orchestration or training jobs. Recipes are processed through the SageMaker HyperPod recipe launcher, which serves as the orchestration layer responsible for launching a job on the corresponding architecture such as SageMaker HyperPod (Slurm or Amazon EKS) or training jobs. To learn more, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-recipes.html" target="_blank" rel="noopener noreferrer"&gt;SageMaker HyperPod recipes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For details on fine-tuning the GPT-OSS model, see &lt;a href="https://aws.amazon.com/blogs/machine-learning/fine-tune-openai-gpt-oss-models-on-amazon-sagemaker-ai-using-hugging-face-libraries/" target="_blank" rel="noopener noreferrer"&gt;Fine-tune OpenAI GPT-OSS models on Amazon SageMaker AI using Hugging Face libraries&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In the following sections, we discuss the prerequisites for both options, and then move on to the data preparation. The prepared data is saved to &lt;a href="https://aws.amazon.com/fsx/lustre/" target="_blank" rel="noopener noreferrer"&gt;Amazon FSx for Lustre&lt;/a&gt;, which is used as the persistent file system for SageMaker HyperPod, or &lt;a href="https://aws.amazon.com/s3/" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Storage Service&lt;/a&gt; (Amazon S3) for training jobs. We then use recipes to submit the fine-tuning job, and finally deploy the trained model to a SageMaker endpoint for testing and evaluating the model. The following diagram illustrates this architecture.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-115023" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/21/ML-1609-1.jpg" alt="" width="1155" height="441"&gt;&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;To follow along, you must have the following prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A local development environment with AWS credentials configured for creating and accessing SageMaker resources, or a remote environment such as &lt;a href="https://aws.amazon.com/sagemaker/ai/studio/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Studio&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For SageMaker HyperPod fine-tuning, complete the following: 
  &lt;ul&gt; 
   &lt;li&gt;Make sure you have one ml.p5.48xlarge instance (with 8 x NVIDIA H100 GPUs) for cluster usage. If you don’t have sufficient limits, request the following SageMaker quotas on the &lt;a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html" target="_blank" rel="noopener noreferrer"&gt;Service Quotas&lt;/a&gt; console: P5 instance (ml.p5.48xlarge) for HyperPod clusters (ml.p5.48xlarge for cluster usage): 1.&lt;/li&gt; 
   &lt;li&gt;Set up a SageMaker HyperPod cluster on Amazon EKS. For instructions, refer to &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-eks.html" target="_blank" rel="noopener noreferrer"&gt;Orchestrating SageMaker HyperPod clusters with Amazon EKS&lt;/a&gt;. Alternatively, you can use the &lt;a href="https://aws.amazon.com/cloudformation/" target="_blank" rel="noopener noreferrer"&gt;AWS CloudFormation&lt;/a&gt; template provided in the &lt;a href="https://catalog.workshops.aws/sagemaker-hyperpod-eks/en-US/00-setup/00-workshop-infra-cfn" target="_blank" rel="noopener noreferrer"&gt;Amazon EKS Support in Amazon SageMaker HyperPod workshop&lt;/a&gt; and follow the instructions to &lt;a href="https://catalog.workshops.aws/sagemaker-hyperpod-eks/en-US/01-cluster" target="_blank" rel="noopener noreferrer"&gt;set up a cluster&lt;/a&gt; and a development environment to access and submit jobs to the cluster.&lt;/li&gt; 
   &lt;li&gt;Set up an FSx for Lustre file system for saving and loading data and checkpoints. Refer to &lt;a href="https://catalog.workshops.aws/sagemaker-hyperpod-eks/en-US/01-cluster/06-fsx-for-lustre" target="_blank" rel="noopener noreferrer"&gt;Set Up an FSx for Lustre File System&lt;/a&gt; to set up an FSx for Lustre volume and associate it with the cluster.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;For fine-tuning the model using SageMaker training jobs, you must have one ml.p5.48xlarge instance (with 8 x NVIDIA H100 GPUs) for training jobs usage. If you don’t have sufficient limits, request the following SageMaker quotas on the &lt;a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html" target="_blank" rel="noopener noreferrer"&gt;Service Quotas&lt;/a&gt; console: P5 instance (ml.p5.48xlarge) for training jobs (ml.p5.48xlarge for cluster usage): 1.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It might take up to 24 hours for these limits to be approved. You can also use SageMaker training plans to reserve these instances for a specific timeframe and use case (cluster or training jobs usage). For more details, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/reserve-capacity-with-training-plans.html" target="_blank" rel="noopener noreferrer"&gt;Reserve training plans for your training jobs or HyperPod clusters&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Next, use your preferred development environment to prepare the dataset for fine-tuning. You can find the full code in the &lt;a href="https://github.com/aws-samples/amazon-sagemaker-generativeai/tree/main/3_distributed_training/models/openai--gpt-oss" target="_blank" rel="noopener noreferrer"&gt;Generative AI using Amazon SageMaker repository&lt;/a&gt; on GitHub.&lt;/p&gt; 
&lt;h2&gt;Data tokenization&lt;/h2&gt; 
&lt;p&gt;We use the &lt;a href="https://huggingface.co/datasets/HuggingFaceH4/Multilingual-Thinking" target="_blank" rel="noopener noreferrer"&gt;Hugging FaceH4/Multilingual-Thinking&lt;/a&gt; dataset, which is a multilingual reasoning dataset containing CoT examples translated into languages such as French, Spanish, and German. The recipe supports a sequence length of 4,000 tokens for the GPT-OSS 120B model. The following example code demonstrates how to tokenize the multilingual-thinking dataset. The recipe accepts data in Hugging Face format (arrow). After it’s tokenized, you can save the processed dataset to disk.&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;from datasets import load_dataset
 
from transformers import AutoTokenizer
import numpy as np
 
dataset = load_dataset("HuggingFaceH4/Multilingual-Thinking", split="train")
 
tokenizer = AutoTokenizer.from_pretrained("openai/gpt-oss-120b")
messages = dataset[0]["messages"]
conversation = tokenizer.apply_chat_template(messages, tokenize=False)
print(conversation)
 
def preprocess_function(example):
&amp;nbsp;&amp;nbsp;  return tokenizer.apply_chat_template(example['messages'], 
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return_dict=True, 
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;padding="max_length", 
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;max_length=4096, 
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;truncation=True)
 
def label(x):
&amp;nbsp;&amp;nbsp;  x["labels"]=np.array(x["input_ids"])
&amp;nbsp;&amp;nbsp;  x["labels"][x["labels"]==tokenizer.pad_token_id]=-100
&amp;nbsp;&amp;nbsp;  x["labels"]=x["labels"].tolist()
&amp;nbsp;&amp;nbsp;  return x
&amp;nbsp;
dataset = dataset.map(preprocess_function, 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; remove_columns=['reasoning_language', 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'developer', 
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'user', 
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'analysis', 
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'final',
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'messages'])
dataset = dataset.map(label)

# for HyperPod, save to mounted FSx volume
dataset.save_to_disk("/fsx/multilingual_4096")

# for training jobs, save to S3
dataset.save_to_disk("multilingual_4096")

def upload_directory(local_dir, bucket_name, s3_prefix=''):
&amp;nbsp;&amp;nbsp; &amp;nbsp;s3_client = boto3.client('s3')
&amp;nbsp;&amp;nbsp; &amp;nbsp;
&amp;nbsp;&amp;nbsp; &amp;nbsp;for root, dirs, files in os.walk(local_dir):
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for file in files:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;local_path = os.path.join(root, file)
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;# Calculate relative path for S3
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;relative_path = os.path.relpath(local_path, local_dir)
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s3_path = os.path.join(s3_prefix, relative_path).replace("\\", "/")
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;print(f"Uploading {local_path} to {s3_path}")
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s3_client.upload_file(local_path, bucket_name, s3_path)

upload_directory('./multilingual_4096/', &amp;lt;your-bucket&amp;gt;, 'multilingual_4096')&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Now that you have prepared and tokenized the dataset, you can fine-tune the GPT-OSS model on your dataset, using either SageMaker HyperPod or training jobs. SageMaker training jobs are ideal for one-off or periodic training workloads that need temporary compute resources, making it a fully managed, on-demand experience for your training needs. SageMaker HyperPod is optimal for continuous development and experimentation, providing a persistent, preconfigured, and failure-resilient cluster. Depending on your choice, skip to the appropriate section for next steps.&lt;/p&gt; 
&lt;h2&gt;Fine-tune the model using SageMaker HyperPod&lt;/h2&gt; 
&lt;p&gt;To fine-tune the model using HyperPod, start by setting up the virtual environment and installing the necessary dependencies to execute the training job on the EKS cluster. Make sure the cluster is &lt;code&gt;InService&lt;/code&gt; before proceeding, and you’re using Python 3.9 or greater in your development environment.&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;python3 -m venv ${PWD}/venv
source&amp;nbsp;venv/bin/activate&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Next, download and set up the SageMaker HyperPod recipes repository:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;git&amp;nbsp;clone --recursive https://github.com/aws/sagemaker-hyperpod-recipes.git
cd&amp;nbsp;sagemaker-hyperpod-recipes
pip3 install&amp;nbsp;-r requirements.txt&amp;nbsp;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;You can now use the SageMaker HyperPod recipe launch scripts to submit your training job. Using the recipe involves updating the &lt;code&gt;k8s.yaml&lt;/code&gt; configuration file and executing the launch script.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;recipes_collection/cluster/k8s.yaml&lt;/code&gt;, update the &lt;code&gt;persistent_volume_claims&lt;/code&gt; section. It mounts the FSx claim to the &lt;code&gt;/fsx&lt;/code&gt; directory of each computing pod:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;- claimName: fsx-claim&amp;nbsp;&amp;nbsp; &amp;nbsp;
&amp;nbsp; mountPath:&amp;nbsp;fsx&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;SageMaker HyperPod recipes provide a launch script for each recipe within the &lt;code&gt;launcher_scripts&lt;/code&gt; directory. To fine-tune the GPT-OSS-120B model, update the launch scripts located at &lt;code&gt;launcher_scripts/gpt_oss/run_hf_gpt_oss_120b_seq4k_gpu_lora.sh&lt;/code&gt; and update the &lt;code&gt;cluster_type&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;p&gt;The updated launch script should look similar to the following code when running SageMaker HyperPod with Amazon EKS. Make sure that &lt;code&gt;cluster=k8s&lt;/code&gt; and &lt;code&gt;cluster_type=k8s&lt;/code&gt; are updated in the launch script:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-shell"&gt;#!/bin/bash

# Original Copyright (c), NVIDIA CORPORATION. Modifications © Amazon.com

#Users should setup their cluster type in /recipes_collection/config.yaml

SAGEMAKER_TRAINING_LAUNCHER_DIR=${SAGEMAKER_TRAINING_LAUNCHER_DIR:-"$(pwd)"}

HF_MODEL_NAME_OR_PATH="openai/gpt-oss-120b" # HuggingFace pretrained model name or path

TRAIN_DIR="/fsx/multilingual_4096" # Location of training dataset
VAL_DIR="/fsx/multilingual_4096" # Location of validation dataset

EXP_DIR="/fsx/experiment" # Location to save experiment info including logging, checkpoints, ect
HF_ACCESS_TOKEN="hf_xxxxxxxx" # Optional HuggingFace access token

HYDRA_FULL_ERROR=1 python3 "${SAGEMAKER_TRAINING_LAUNCHER_DIR}/main.py" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes=fine-tuning/gpt_oss/hf_gpt_oss_120b_seq4k_gpu_lora \
&amp;nbsp;&amp;nbsp; &amp;nbsp;container="658645717510.dkr.ecr.us-west-2.amazonaws.com/smdistributed-modelparallel:sm-pytorch_gpt_oss_patch_pt-2.7_cuda12.8" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;base_results_dir="${SAGEMAKER_TRAINING_LAUNCHER_DIR}/results" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes.run.name="hf-gpt-oss-120b-lora" \
	&lt;strong&gt;cluster=k8s \&amp;nbsp;# Imp: add cluster line when running on HP EKS&lt;/strong&gt;
	&lt;strong&gt;cluster_type=k8s \&amp;nbsp;# Imp: add cluster_type line when running on HP EKS&lt;/strong&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes.exp_manager.exp_dir="$EXP_DIR" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes.trainer.num_nodes=1 \
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes.model.data.train_dir="$TRAIN_DIR" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes.model.data.val_dir="$VAL_DIR" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes.model.hf_model_name_or_path="$HF_MODEL_NAME_OR_PATH" \
&amp;nbsp;&amp;nbsp; &amp;nbsp;recipes.model.hf_access_token="$HF_ACCESS_TOKEN" \&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;When the script is ready, you can launch fine-tuning of the GPT OSS 120B model using the following code:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-shell"&gt;chmod +x launcher_scripts/gpt_oss/run_hf_gpt_oss_120b_seq4k_gpu_lora.sh 
bash launcher_scripts/gpt_oss/run_hf_gpt_oss_120b_seq4k_gpu_lora.sh&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;After submitting a job for fine-tuning, you can use the following command to verify successful submission. You should be able to see the pods running in your cluster:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;kubectl get pods
NAME&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; READY&amp;nbsp; STATUS&amp;nbsp; &amp;nbsp;RESTARTS&amp;nbsp; &amp;nbsp;AGE
hf-gpt-oss-120b-lora-h2cwd-worker-0 1/1&amp;nbsp; &amp;nbsp;&amp;nbsp;Running&amp;nbsp; 0&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;14m&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;To check logs for the job, you can use the &lt;code&gt;kubectl logs&lt;/code&gt; command:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;kubectl logs -f hf-gpt-oss-120b-lora-h2cwd-worker-0&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You should be able to see the following logs when the training begins and completes. You will find the checkpoints written to the &lt;code&gt;/fsx/experiment/checkpoints&lt;/code&gt; folder.&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;warnings.warn(
&amp;nbsp;&amp;nbsp; &amp;nbsp;
Epoch 0: &amp;nbsp;40%|████ &amp;nbsp; &amp;nbsp; &amp;nbsp;| 50/125 [08:47&amp;lt;13:10, &amp;nbsp;0.09it/s, Loss/train=0.254, Norms/grad_norm=0.128, LR/learning_rate=2.2e-6] [NeMo I 2025-08-18 17:49:48 nemo_logging:381] save SageMakerCheckpointType.PEFT_FULL checkpoint: /fsx/experiment/checkpoints/peft_full/steps_50
[NeMo I 2025-08-18 17:49:48 nemo_logging:381] Saving PEFT checkpoint to /fsx/experiment/checkpoints/peft_full/steps_50
[NeMo I 2025-08-18 17:49:49 nemo_logging:381] Loading Base model from : openai/gpt-oss-120b
You are attempting to use Flash Attention 2 without specifying a torch dtype. This might lead to unexpected behaviour
Loading checkpoint shards: 100%|██████████| 15/15 [01:49&amp;lt;00:00, &amp;nbsp;7.33s/it]
[NeMo I 2025-08-18 17:51:39 nemo_logging:381] Merging the adapter, this might take a while......
Unloading and merging model: 100%|██████████| 547/547 [00:07&amp;lt;00:00, 71.27it/s]
[NeMo I 2025-08-18 17:51:47 nemo_logging:381] Checkpointing to /fsx/experiment/checkpoints/peft_full/steps_50/final-model......
[NeMo I 2025-08-18 18:00:14 nemo_logging:381] Successfully save the merged model checkpoint.
`Trainer.fit` stopped: `max_steps=50` reached.
Epoch 0: &amp;nbsp;40%|████ &amp;nbsp; &amp;nbsp; &amp;nbsp;| 50/125 [23:09&amp;lt;34:43, &amp;nbsp;0.04it/s, Loss/train=0.264, Norms/grad_norm=0.137, LR/learning_rate=2e-6] &amp;nbsp;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;When the training is complete, the final merged model can be found in the &lt;code&gt;experiment&lt;/code&gt; directory path you defined in the launcher script under &lt;code&gt;/fsx/experiment/checkpoints/peft_full/steps_50/final-model&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Fine-tune using SageMaker training jobs&lt;/h2&gt; 
&lt;p&gt;You can also use recipes directly with SageMaker training jobs using the SageMaker Python SDK. The training jobs automatically spin up the compute, load the input data, run the training script, save the model to your output location, and tear down the instances, for a smooth training experience.&lt;/p&gt; 
&lt;p&gt;The following code snippet shows how to use recipes with the PyTorch estimator. You can use the &lt;code&gt;training_recipe&lt;/code&gt; parameter to specify the training or fine-tuning recipe to be used, and &lt;code&gt;recipe_overrides&lt;/code&gt; for any parameters that need replacement. For training jobs, update the &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;output&lt;/code&gt;, and &lt;code&gt;results&lt;/code&gt; directories to locations in &lt;code&gt;/opt/ml&lt;/code&gt; as required by SageMaker training jobs.&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;import&amp;nbsp;os
import&amp;nbsp;sagemaker,boto3
from&amp;nbsp;sagemaker.pytorch import&amp;nbsp;PyTorch
from sagemaker.inputs import FileSystemInput

sagemaker_session =&amp;nbsp;sagemaker.Session()
role =&amp;nbsp;sagemaker.get_execution_role()
bucket =&amp;nbsp;sagemaker_session.default_bucket()
output =&amp;nbsp;os.path.join(f"s3://{bucket}", "output")

recipe_overrides = {
&amp;nbsp;&amp;nbsp; &amp;nbsp;"run": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"results_dir": "/opt/ml/model",
&amp;nbsp;&amp;nbsp; &amp;nbsp;},
&amp;nbsp;&amp;nbsp; &amp;nbsp;"exp_manager": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"exp_dir": "",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"explicit_log_dir": "/opt/ml/output/tensorboard",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"checkpoint_dir": "/opt/ml/checkpoints",
&amp;nbsp;&amp;nbsp; &amp;nbsp;},
&amp;nbsp;&amp;nbsp; &amp;nbsp;"model": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"data": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"train_dir": "/opt/ml/input/data/train",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"val_dir": "/opt/ml/input/data/val",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;},
&amp;nbsp;&amp;nbsp; &amp;nbsp;},
&amp;nbsp;&amp;nbsp; &amp;nbsp;"use_smp_model": "False",
}


# create the estimator object
estimator = PyTorch(
&amp;nbsp;&amp;nbsp;output_path=output,
&amp;nbsp;&amp;nbsp;base_job_name=f"gpt-oss-recipe",
&amp;nbsp;&amp;nbsp;role=role,
&amp;nbsp;&amp;nbsp;instance_type="ml.p5.48xlarge",
&amp;nbsp; &lt;strong&gt;training_recipe="fine-tuning/gpt_oss/hf_gpt_oss_120b_seq4k_gpu_lora"&lt;/strong&gt;,
&amp;nbsp;&amp;nbsp;recipe_overrides=recipe_overrides,
&amp;nbsp;&amp;nbsp;sagemaker_session=sagemaker_session,
&amp;nbsp;&amp;nbsp;image_uri="658645717510.dkr.ecr.us-west-2.amazonaws.com/smdistributed-modelparallel:sm-pytorch_gpt_oss_patch_pt-2.7_cuda12.8",
)

# submit the training job
estimator.fit(
inputs={
"train": f"s3://{bucket}/datasets/multilingual_4096/", 
"val": f"s3://{bucket}/datasets/multilingual_4096/"}, wait=True)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;After the job is submitted, you can monitor the status of your training job on the SageMaker console, by choosing &lt;strong&gt;Training jobs &lt;/strong&gt;under &lt;strong&gt;Training &lt;/strong&gt;in the navigation pane. Choose the training job that starts with &lt;code&gt;gpt-oss-recipe&lt;/code&gt; to view its details and logs. When the training job is complete, the outputs will be saved to an S3 location. You can get the location of the output artifacts from the &lt;strong&gt;S3 model artifact &lt;/strong&gt;section on the job details page.&lt;/p&gt; 
&lt;h2&gt;Run inference&lt;/h2&gt; 
&lt;p&gt;After you fine-tune your GPT-OSS model with SageMaker recipes on either SageMaker training jobs or SageMaker HyperPod, the output is a customized model artifact that merges the base model with the customized PEFT adapters. This final model is stored in Amazon S3 and can be deployed directly from Amazon S3 to SageMaker endpoints for real-time inference.&lt;/p&gt; 
&lt;p&gt;To serve GPT-OSS models, you must have the latest vLLM containers (v0.10.1 or later). A full list of &lt;code&gt;vllm-openai&lt;/code&gt; Docker image versions is available on &lt;a href="https://hub.docker.com/r/vllm/vllm-openai/tags" target="_blank" rel="noopener noreferrer"&gt;Docker hub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The steps to deploy your fine-tuned GPT-OSS model are outlined in this section.&lt;/p&gt; 
&lt;h3&gt;Build the latest GPT-OSS container for your SageMaker endpoint&lt;/h3&gt; 
&lt;p&gt;If you’re deploying the model from SageMaker Studio using JupyterLab or the Code Editor, both environments come with Docker preinstalled. Make sure that you’re using the SageMaker Distribution image v3.0 or later for compatibility.You can build your deployment container by running the following commands:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;%%bash # &amp;lt;- use this if you're running this inside JupterLab cell

# navigate to deploy dir from the current workdir, to build container
cd ./deploy 

# build a push container
chmod +X build.sh
bash build.sh

cd ..&amp;nbsp;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;If you’re running these commands from a local terminal or other environment, simply omit the &lt;code&gt;%%bash&lt;/code&gt; line and run the commands as standard shell commands.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;build.sh&lt;/code&gt; script is responsible for automatically building and pushing a &lt;code&gt;vllm-openai&lt;/code&gt; container that is optimized for SageMaker endpoints. After it’s built, the custom SageMaker endpoint compatible &lt;code&gt;vllm&lt;/code&gt; image is pushed to &lt;a href="https://aws.amazon.com/ecr/" target="_blank" rel="noopener noreferrer"&gt;Amazon Elastic Container Registry&lt;/a&gt; (Amazon ECR). SageMaker endpoints can then pull this image from Amazon ECR at runtime to spin up the container for inference.&lt;/p&gt; 
&lt;p&gt;The following is an example of the &lt;code&gt;build.sh&lt;/code&gt; script:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-shell"&gt;export REGION={region}
export ACCOUNT_ID={account_id}
export REPOSITORY_NAME=vllm
export TAG=v0.10.1

full_name="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPOSITORY_NAME}:${TAG}"

echo "building $full_name"

DOCKER_BUILDKIT=0 docker build . --network sagemaker --tag $full_name --file Dockerfile

aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

# If the repository doesn't exist in ECR, create it.
aws ecr describe-repositories --region ${REGION} --repository-names "${REPOSITIRY_NAME}" &amp;gt; /dev/null 2&amp;gt;&amp;amp;1

if [ $? -ne 0 ]
then
&amp;nbsp;&amp;nbsp; &amp;nbsp;aws ecr create-repository --region ${REGION} --repository-name "${REPOSITORY_NAME}" &amp;gt; /dev/null
fi

docker tag $REPOSITORY_NAME:$TAG ${full_name}
docker push ${full_name}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;The Dockerfile defines how we convert an open source vLLM Docker image into a SageMaker hosting-compatible image. This involves extending the base &lt;code&gt;vllm-openai&lt;/code&gt; image, adding the &lt;code&gt;serve&lt;/code&gt; entrypoint script, and making it executable. See the following example Dockerfile:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;FROM vllm/vllm-openai:v0.10.1

COPY serve /usr/bin/serve
RUN chmod 777 /usr/bin/serve

ENTRYPOINT [ "/usr/bin/serve" ]&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;The &lt;code&gt;serve&lt;/code&gt; script acts as a translation layer between SageMaker hosting conventions and the vLLM runtime. You can maintain the same deployment workflow you’re familiar with when hosting models on SageMaker endpoints, while automatically converting SageMaker-specific configurations into the format expected by vLLM.&lt;/p&gt; 
&lt;p&gt;Key points to note about this script:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It enforces the use of port 8080, which SageMaker requires for inference containers&lt;/li&gt; 
 &lt;li&gt;It dynamically translates environment variables prefixed with &lt;code&gt;OPTION_&lt;/code&gt; into CLI arguments for vLLM (for example, &lt;code&gt;OPTION_MAX_MODEL_LEN=4096&lt;/code&gt; changes to &lt;code&gt;--max-model-len 4096&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;It prints the final set of arguments for visibility&lt;/li&gt; 
 &lt;li&gt;It finally launches the vLLM API server with the translated arguments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following is an example &lt;code&gt;serve&lt;/code&gt; script:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-shell"&gt;#!/bin/bash

# Define the prefix for environment variables to look for
PREFIX="OPTION_"
ARG_PREFIX="--"

# Initialize an array for storing the arguments
# port 8080 required by sagemaker, https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-code-container-response
ARGS=(--port 8080)

# Loop through all environment variables
while IFS='=' read -r key value; do
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Remove the prefix from the key, convert to lowercase, and replace underscores with dashes
&amp;nbsp;&amp;nbsp; &amp;nbsp;arg_name=$(echo "${key#"${PREFIX}"}" | tr '[:upper:]' '[:lower:]' | tr '_' '-')

&amp;nbsp;&amp;nbsp; &amp;nbsp;# Add the argument name and value to the ARGS array
&amp;nbsp;&amp;nbsp; &amp;nbsp;ARGS+=("${ARG_PREFIX}${arg_name}")
&amp;nbsp;&amp;nbsp; &amp;nbsp;if [ -n "$value" ]; then
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ARGS+=("$value")
&amp;nbsp;&amp;nbsp; &amp;nbsp;fi
done &amp;lt; &amp;lt;(env | grep "^${PREFIX}")

echo "-------------------------------------------------------------------"
echo "vLLM engine args: [${ARGS[@]}]"
echo "-------------------------------------------------------------------"

# Pass the collected arguments to the main entrypoint
exec python3 -m vllm.entrypoints.openai.api_server "${ARGS[@]}"&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Host customized GPT-OSS as a SageMaker real-time endpoint&lt;/h3&gt; 
&lt;p&gt;Now you can deploy your fine-tuned GPT-OSS model using the ECR image URI you built in the previous step. In this example, the model artifacts are stored securely in an S3 bucket, and SageMaker will download them into the container at runtime.Complete the following configurations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set &lt;code&gt;model_data&lt;/code&gt; to point to the S3 prefix where your model artifacts are located&lt;/li&gt; 
 &lt;li&gt;Set the &lt;code&gt;OPTION_MODEL&lt;/code&gt; environment variable to &lt;code&gt;/opt/ml/model&lt;/code&gt;, which is where SageMaker mounts the model inside the container&lt;/li&gt; 
 &lt;li&gt;(Optional) If you’re serving a model from Hugging Face Hub instead of Amazon S3, you can set &lt;code&gt;OPTION_MODEL&lt;/code&gt; directly to the Hugging Face model ID instead&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The endpoint startup might take several minutes as the model artifacts are downloaded and the container is initialized.The following is an example deployment code:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-javascript"&gt;inference_image = f"{account_id}.dkr.ecr.{region}.amazonaws.com/vllm:v0.10.1"

...
...

lmi_model = sagemaker.Model(
&amp;nbsp;&amp;nbsp; &amp;nbsp;image_uri=inference_image,
&amp;nbsp;&amp;nbsp; &amp;nbsp;env={
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"OPTION_MODEL": "/opt/ml/model",&amp;nbsp;# set this to let SM endpoint read a model stored in s3, else set it to HF MODEL ID
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"OPTION_SERVED_MODEL_NAME": "model",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"OPTION_TENSOR_PARALLEL_SIZE": json.dumps(num_gpus),
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"OPTION_DTYPE": "bfloat16",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#"VLLM_ATTENTION_BACKEND": "TRITON_ATTN_VLLM_V1", # not required for vLLM 0.10.1 and above
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"OPTION_ASYNC_SCHEDULING": "true",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"OPTION_QUANTIZATION": "mxfp4"
&amp;nbsp;&amp;nbsp; &amp;nbsp;},
&amp;nbsp;&amp;nbsp; &amp;nbsp;role=role,
&amp;nbsp;&amp;nbsp; &amp;nbsp;name=model_name,
&amp;nbsp;&amp;nbsp; &amp;nbsp;model_data={
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;'S3DataSource': {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;'S3Uri': "s3://path/to/gpt-oss/model/artifacts",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;'S3DataType': 'S3Prefix',
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;'CompressionType': 'None'
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp;},
)

...

lmi_model.deploy(
&amp;nbsp;&amp;nbsp; &amp;nbsp;initial_instance_count=1,
&amp;nbsp;&amp;nbsp; &amp;nbsp;instance_type=instance_type,
&amp;nbsp;&amp;nbsp; &amp;nbsp;container_startup_health_check_timeout=600,
&amp;nbsp;&amp;nbsp; &amp;nbsp;endpoint_name=endpoint_name,
&amp;nbsp;&amp;nbsp; &amp;nbsp;endpoint_type=sagemaker.enums.EndpointType.INFERENCE_COMPONENT_BASED,
&amp;nbsp;&amp;nbsp; &amp;nbsp;inference_component_name=inference_component_name,
&amp;nbsp;&amp;nbsp; &amp;nbsp;resources=ResourceRequirements(requests={"num_accelerators": 1, "memory": 1024*3, "copies": 1,}),
)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Sample inference&lt;/h3&gt; 
&lt;p&gt;After your endpoint is deployed and in the &lt;code&gt;InService&lt;/code&gt; state, you can invoke your fine-tuned GPT-OSS model using the SageMaker Python SDK.&lt;/p&gt; 
&lt;p&gt;The following is an example predictor setup:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;pretrained_predictor = sagemaker.Predictor(
&amp;nbsp;&amp;nbsp; &amp;nbsp;endpoint_name=endpoint_name,
&amp;nbsp;&amp;nbsp; &amp;nbsp;sagemaker_session=sagemaker.Session(boto3.Session(region_name=boto3.Session().region_name)),
&amp;nbsp;&amp;nbsp; &amp;nbsp;serializer=serializers.JSONSerializer(),
&amp;nbsp;&amp;nbsp; &amp;nbsp;deserializer=deserializers.JSONDeserializer(),
&amp;nbsp;&amp;nbsp; &amp;nbsp;component_name=inference_component_name
)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;The modified vLLM container is fully compatible with the OpenAI-style &lt;code&gt;messages&lt;/code&gt; input format, making it straightforward to send chat-style requests:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;payload = {
&amp;nbsp;&amp;nbsp; &amp;nbsp;"messages": [{"role": "user", "content": "Hello who are you?"}],
&amp;nbsp;&amp;nbsp; &amp;nbsp;"parameters": {"max_new_tokens": 64, "temperature": 0.2}
}

output = pretrained_predictor.predict(payload)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;You have successfully deployed and invoked your custom fine-tuned GPT-OSS model on SageMaker real-time endpoints, using the vLLM framework for optimized, low-latency inference. You can find more GPT-OSS hosting examples in the &lt;a href="https://github.com/aws-samples/sagemaker-genai-hosting-examples/tree/main/OpenAI/gpt-oss" target="_blank" rel="noopener noreferrer"&gt;OpenAI gpt-oss examples GitHub repo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;To avoid incurring additional charges, complete the following steps to clean up the resources used in this post:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Delete the SageMaker endpoint:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;pretrained_predictor.delete_endpoint()&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;If you created a SageMaker HyperPod cluster for the purposes of this post, delete the cluster by following the instructions in &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-eks-operate-cli-command-delete-cluster.html" target="_blank" rel="noopener noreferrer"&gt;Deleting a SageMaker HyperPod cluster&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Clean up the FSx for Lustre volume if it’s no longer needed by following instructions in &lt;a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/delete-file-system.html" target="_blank" rel="noopener noreferrer"&gt;Deleting a file system&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you used training jobs, the training instances are automatically deleted when the jobs are complete.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this post, we showed how to fine-tune OpenAI’s GPT-OSS models (&lt;code&gt;gpt-oss-120b&lt;/code&gt; and &lt;code&gt;gpt-oss-20b&lt;/code&gt;) on SageMaker AI using SageMaker HyperPod recipes. We discussed how SageMaker HyperPod recipes provide a powerful yet accessible solution for organizations to scale their AI model training capabilities with &lt;a href="https://aws.amazon.com/what-is/large-language-model/" target="_blank" rel="noopener noreferrer"&gt;large language models&lt;/a&gt; (LLMs) including GPT-OSS, using either a persistent cluster through SageMaker HyperPod, or an ephemeral cluster using SageMaker training jobs. The architecture streamlines complex distributed training workflows through its intuitive recipe-based approach, reducing setup time from weeks to minutes. We also showed how these fine-tuned models can be seamlessly deployed to production using SageMaker endpoints with vLLM optimization, providing enterprise-grade inference capabilities with OpenAI-compatible APIs. This end-to-end workflow, from training to deployment, helps organizations build and serve custom LLM solutions while using the scalable infrastructure of AWS and comprehensive ML platform capabilities of SageMaker.&lt;/p&gt; 
&lt;p&gt;To begin using the SageMaker HyperPod recipes, visit the &lt;a href="https://github.com/aws/sagemaker-hyperpod-recipes" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker HyperPod recipes GitHub repo&lt;/a&gt; for comprehensive documentation and example implementations. If you’re interested in exploring the fine-tuning further, the &lt;a href="https://github.com/aws-samples/amazon-sagemaker-generativeai" target="_blank" rel="noopener noreferrer"&gt;Generative AI using Amazon SageMaker GitHub repo&lt;/a&gt; has the necessary code and notebooks. Our team continues to expand the recipe ecosystem based on customer feedback and emerging ML trends, making sure that you have the tools needed for successful AI model training.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to everyone who contributed to the launch: Hengzhi Pei, Zach Kimberg, Andrew Tian, Leonard Lausen, Sanjay Dorairaj, Manish Agarwal, Sareeta Panda, Chang Ning Tsai, Maxwell Nuyens, Natasha Sivananjaiah, and Kanwaljit Khurmi.&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-109227" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/06/19/surydurg-100x100.jpg" alt="author-surydurg" width="100" height="100"&gt;Durga Sury&lt;/strong&gt;&amp;nbsp;is a Senior Solutions Architect at Amazon SageMaker, where she helps enterprise customers build secure and scalable AI/ML systems. When she’s not architecting solutions, you can find her enjoying sunny walks with her dog, immersing herself in murder mystery books, or catching up on her favorite Netflix shows.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-full wp-image-115032" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/21/Pranav-Profile-100.jpeg" alt="" width="100" height="100"&gt;Pranav Murthy&lt;/strong&gt;&amp;nbsp;is a Senior Generative AI Data Scientist at AWS, specializing in helping organizations innovate with Generative AI, Deep Learning, and Machine Learning on Amazon SageMaker AI. Over the past 10+ years, he has developed and scaled advanced computer vision (CV) and natural language processing (NLP) models to tackle high-impact problems—from optimizing global supply chains to enabling real-time video analytics and multilingual search. When he’s not building AI solutions, Pranav enjoys playing strategic games like chess, traveling to discover new cultures, and mentoring aspiring AI practitioners.&amp;nbsp;You can find Pranav on&amp;nbsp;&lt;a href="https://www.linkedin.com/in/pranav-murthy-6bbb5773/" target="_blank" rel="noopener"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-full wp-image-115031" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/21/Sumedha-Swamy.jpg" alt="" width="100" height="133"&gt;Sumedha Swamy&lt;/strong&gt;&amp;nbsp;is a Senior Manager of Product Management at Amazon Web Services (AWS), where he leads several areas of the Amazon SageMaker, including SageMaker Studio – the industry-leading integrated development environment for machine learning, developer and administrator experiences, AI infrastructure, and SageMaker SDK.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-full wp-image-115029" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/21/DmitrySoldatkin.jpg" alt="" width="100" height="103"&gt;Dmitry Soldatkin&lt;/strong&gt;&amp;nbsp;is a Senior AI/ML Solutions Architect at Amazon Web Services (AWS), helping customers design and build AI/ML solutions. Dmitry’s work covers a wide range of ML use cases, with a primary interest in Generative AI, deep learning, and scaling ML across the enterprise. He has helped companies in many industries, including insurance, financial services, utilities, and telecommunications. You can connect with Dmitry on&amp;nbsp;&lt;a href="https://www.linkedin.com/in/dmitry-soldatkin/" target="_blank" rel="noopener"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-full wp-image-115030" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/21/arunkumar-Lokh.png" alt="" width="100" height="108"&gt;Arun Kumar Lokanatha &lt;/strong&gt;is a Senior ML Solutions Architect with the Amazon SageMaker team. He specializes in large language model training workloads, helping customers build LLM workloads using SageMaker HyperPod, SageMaker training jobs, and SageMaker distributed training. Outside of work, he enjoys running, hiking, and cooking.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-full wp-image-115028" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/21/aniviswa.jpg" alt="" width="100" height="100"&gt;Anirudh Viswanathan&lt;/strong&gt; is a Senior Product Manager, Technical, at AWS with the SageMaker team, where he focuses on Machine Learning. He holds a Master’s in Robotics from Carnegie Mellon University and an MBA from the Wharton School of Business. Anirudh is a named inventor on more than 50 AI/ML patents. He enjoys long-distance running, exploring art galleries, and attending Broadway shows.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Inline code nodes now supported in Amazon Bedrock Flows in public preview</title>
		<link>https://aws.amazon.com/blogs/machine-learning/inline-code-nodes-now-supported-in-amazon-bedrock-flows-in-public-preview/</link>
					
		
		<dc:creator><![CDATA[Shubhankar Sumar]]></dc:creator>
		<pubDate>Thu, 21 Aug 2025 20:36:40 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock Prompt Flows]]></category>
		<category><![CDATA[Announcements]]></category>
		<guid isPermaLink="false">8f4a869aa6d3799ecde15169219601372e7bf153</guid>

					<description>We are excited to announce the public preview of support for inline code nodes in Amazon Bedrock Flows. With this powerful new capability, you can write Python scripts directly within your workflow, alleviating the need for separate AWS Lambda functions for simple logic. This feature streamlines preprocessing and postprocessing tasks (like data normalization and response formatting), simplifying generative AI application development and making it more accessible across organizations.</description>
										<content:encoded>&lt;p&gt;Today, we are excited to announce the public preview of support for &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-nodes.html#flows-nodes-data" target="_blank" rel="noopener noreferrer"&gt;inline code nodes&lt;/a&gt; in &lt;a href="https://aws.amazon.com/bedrock/flows/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Flows&lt;/a&gt;. With this powerful new capability, you can write Python scripts directly within your workflow, alleviating the need for separate &lt;a href="http://aws.amazon.com/lambda" target="_blank" rel="noopener noreferrer"&gt;AWS Lambda&lt;/a&gt; functions for simple logic. This feature streamlines preprocessing and postprocessing tasks (like data normalization and response formatting), simplifying generative AI application development and making it more accessible across organizations. By removing adoption barriers and reducing maintenance overhead, the inline code feature accelerates enterprise adoption of generative AI solutions, resulting in faster iteration cycles and broader participation in AI application building.&lt;/p&gt; 
&lt;p&gt;Organizations using Amazon Bedrock Flows now can use inline code nodes to design and deploy workflows for building more scalable and efficient generative AI applications fully within the Amazon Bedrock environment while achieving the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Preprocessing&lt;/strong&gt; – Transforming input data before sending it to a large language model (LLM) without having to set up a separate Lambda function. For example, extracting specific fields from JSON, formatting text data, or normalizing values.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Postprocessing&lt;/strong&gt; – Performing operations on model outputs directly within the flow. For example, extracting entities from responses, formatting JSON for downstream systems, or applying business rules to the results.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Complex use cases&lt;/strong&gt; – Managing the execution of complex, multi-step generative AI workflows that can call popular packages like opencv, scipy, of pypdf.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Builder-friendly&lt;/strong&gt; – Creating and managing inline code through both the &lt;a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/welcome.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock API&lt;/a&gt; and the &lt;a href="http://aws.amazon.com/console" target="_blank" rel="noopener noreferrer"&gt;AWS Management Console&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt; – Seamless user experience with the ability to trace the inputs and outputs from each node.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In this post, we discuss the benefits of this new feature, and show how to use inline code nodes in Amazon Bedrock Flows.&lt;/p&gt; 
&lt;h2&gt;Benefits of inline code in Amazon Bedrock Flows&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.thomsonreuters.com/" target="_blank" rel="noopener noreferrer"&gt;Thomson Reuters&lt;/a&gt;, a global information services company providing essential news, insights, and technology solutions to professionals across legal, tax, accounting, media, and corporate sectors, handles complex, multi-step generative AI use cases that require simple preprocessing and postprocessing as part of the workflow. With the inline code feature in Amazon Bedrock Flows, Thomson Reuters can now benefit from the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simplified flow management&lt;/strong&gt; – Alleviate the need to create and maintain individual Lambda functions for each custom code block, making it straightforward to manage thousands of workflows across a large user base (over 16,000 users and 6,000 chains) with less operational overhead.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible data processing&lt;/strong&gt; – Enable direct preprocessing of data before LLM calls and postprocessing of LLM responses, including the ability to interact with internal AWS services and third-party APIs through a single interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DIY flow creation&lt;/strong&gt; – Help users build complex workflows with custom code blocks through a self-service interface, without exposing them to the underlying infrastructure complexities or requiring Lambda function management.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;In the following sections, we show how to create a simple Amazon Bedrock flow and add inline code nodes. Our example showcases a practical application where we’ll construct a flow that processes user requests for music playlists, incorporating both preprocessing and postprocessing inline code nodes to handle data validation and response formatting.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before implementing the new capabilities, make sure you have the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An AWS account&lt;/li&gt; 
 &lt;li&gt;Other Amazon Bedrock services in place: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-create.html" target="_blank" rel="noopener noreferrer"&gt;Create and test your base prompts&lt;/a&gt; for customer service interactions in &lt;a href="https://aws.amazon.com/es/bedrock/prompt-management/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Prompt Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-components.html" target="_blank" rel="noopener noreferrer"&gt;Create guardrails&lt;/a&gt; with relevant rules using &lt;a href="https://aws.amazon.com/bedrock/guardrails/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Guardrails&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Resources in auxiliary AWS services needed for your workflow, such as &lt;a href="https://aws.amazon.com/dynamodb" target="_blank" rel="noopener noreferrer"&gt;Amazon DynamoDB&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/s3" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Storage Service&lt;/a&gt; (Amazon S3), and &lt;a href="https://aws.amazon.com/sns/" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Notification Service&lt;/a&gt; (Amazon SNS)&lt;/li&gt; 
 &lt;li&gt;Required &lt;a href="https://aws.amazon.com/iam/" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management&lt;/a&gt; (IAM) permissions: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-permissions.html" target="_blank" rel="noopener noreferrer"&gt;Access to Amazon Bedrock Flows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/model-access-permissions.html" target="_blank" rel="noopener noreferrer"&gt;Appropriate access to LLMs in Amazon Bedrock&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After these components are in place, you can proceed with using Amazon Bedrock Flows with inline code capabilities in your generative AI use case.&lt;/p&gt; 
&lt;h2&gt;Create your flow using inline code nodes&lt;/h2&gt; 
&lt;p&gt;Complete the following steps to create your flow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;On the Amazon Bedrock console, choose &lt;strong&gt;Flows&lt;/strong&gt; under &lt;strong&gt;Builder tools&lt;/strong&gt; in the navigation pane.&lt;/li&gt; 
 &lt;li&gt;Create a new flow, for example, easy-inline-code-flow. For detailed instructions on creating a flow, see &lt;a href="https://aws.amazon.com/blogs/machine-learning/amazon-bedrock-flows-is-now-generally-available-with-enhanced-safety-and-traceability/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Flows is now generally available with enhanced safety and traceability&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add an inline code node. (For this example, we create two nodes for two separate prompts).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Amazon Bedrock provides different &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-nodes.html" target="_blank" rel="noopener noreferrer"&gt;node types&lt;/a&gt; to build your prompt flow. For this example, we use an inline code node instead of calling a Lambda function for custom code for a generative AI-powered application. There are two inline code nodes in the flow. We have extended the sample from the documentation &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-ex-prompt.html" target="_blank" rel="noopener noreferrer"&gt;Create a flow with a single prompt&lt;/a&gt;. The new node type &lt;strong&gt;Inline Code&lt;/strong&gt; is on the &lt;strong&gt;Nodes&lt;/strong&gt; tab in the left pane.&lt;/p&gt; 
&lt;p&gt;&lt;img style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ml-19171-image-1.png"&gt;&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Add some code to process in the &lt;code&gt;Preprocessing_InlineCode&lt;/code&gt; node before sending it to the prompt node &lt;code&gt;prompt_1&lt;/code&gt;. Python 3 is only supported at the time of writing. In this example, we check if the number of songs requested by the user is more than 10 and it’s set to 10.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ml-19171-image-2.png"&gt;&lt;/p&gt; 
&lt;p&gt;There is a Python code editor and sample code templates as well for writing the code.&lt;/p&gt; 
&lt;p&gt;&lt;img style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ml-19171-image-3.png"&gt;&lt;/p&gt; 
&lt;p&gt;We use the following code:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;import json
def __func():
    try:
        if userprompt['number'] &amp;gt; 10:
            userprompt['number']=10
            return userprompt
        else:
            return userprompt
            
    except Exception as e:
        return {
            "error": "Invalid input format",
            "details": str(e)
        }
__func()&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;In the Postprocessing_Inline Code node, we check the number of words in the response and feed the data to the next prompt node, &lt;code&gt;prompt_2&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ml-19171-image-4.png"&gt;&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;def __func():
    # Remove extra whitespace and count
    cleaned_text = ' '.join(playlist.split())
    word_count = len(cleaned_text.split())
    return{
        "playlist": playlist,     "word_count": word_count
    }
__func()&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;Test the flow with the following prompt:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;Sample input for the Flow Input node 
{
  "genre": "pop",
    "number": 8
  }&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Input to the inline code node (Python function) must be treated as untrusted user input, and appropriate parsing, validation, and data handling should be implemented.&lt;/p&gt; 
&lt;p&gt;You can see the output as shown in the following screenshot. The system also provides access to node execution traces, offering detailed insights into each processing step, real-time performance metrics, and highlighting any issues that occurred during the flow’s execution. Traces can be enabled using an &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html" target="_blank" rel="noopener noreferrer"&gt;API&lt;/a&gt; and sent to an &lt;a href="http://aws.amazon.com/cloudwatch" target="_blank" rel="noopener noreferrer"&gt;Amazon CloudWatch&lt;/a&gt; log. In the API, set the &lt;code&gt;enableTrace&lt;/code&gt; field to true in an &lt;code&gt;&lt;a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeFlow.html" target="_blank" rel="noopener noreferrer"&gt;InvokeFlow&lt;/a&gt;&lt;/code&gt; request. Each &lt;code&gt;flowOutputEvent&lt;/code&gt; in the response is returned alongside a &lt;code&gt;flowTraceEvent&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ml-19171-image-5.png"&gt;&lt;/p&gt; 
&lt;p&gt;You have now successfully created and executed an Amazon Bedrock flows using inline code nodes. You can also use &lt;a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_StartFlowExecution.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock APIs&lt;/a&gt; to programmatically execute this flow. For additional details on how to configure flows with enhanced safety and traceability, see &lt;a href="https://aws.amazon.com/blogs/machine-learning/amazon-bedrock-flows-is-now-generally-available-with-enhanced-safety-and-traceability/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Flows is now generally available with enhanced safety and traceability&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Considerations&lt;/h2&gt; 
&lt;p&gt;When working with inline code nodes in Amazon Bedrock Flows, the following are the important things to note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code is executed in an AWS managed, secured, sandbox environment that is not shared with anyone and doesn’t have internet access&lt;/li&gt; 
 &lt;li&gt;The feature supports Python 3.12 and above&lt;/li&gt; 
 &lt;li&gt;It efficiently handles code with binary size up to 4 MB, which is roughly 4 million characters&lt;/li&gt; 
 &lt;li&gt;It supports popular packages like opencv, scipy, and pypdf&lt;/li&gt; 
 &lt;li&gt;It supports 25 concurrent code execution sessions per AWS account&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;The integration of inline code nodes in Amazon Bedrock Flows marks a significant advancement in democratizing generative AI development, reducing the complexity of managing separate Lambda functions for basic processing tasks. This enhancement responds directly to enterprise customers’ needs for a more streamlined development experience, helping developers focus on building sophisticated AI workflows rather than managing infrastructure.&lt;/p&gt; 
&lt;p&gt;Inline code in Amazon Bedrock Flows is now available in public preview in the following &lt;a href="https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region" target="_blank" rel="noopener noreferrer"&gt;AWS Regions&lt;/a&gt;: US East (N. Virginia, Ohio), US West (Oregon) and Europe (Frankfurt). To get started, open the Amazon Bedrock console or Amazon Bedrock APIs to begin building flows with Amazon Bedrock Flows. To learn more, refer to &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-get-started.html" target="_blank" rel="noopener noreferrer"&gt;Create your first flow in Amazon Bedrock&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html" target="_blank" rel="noopener noreferrer"&gt;Track each step in your flow by viewing its trace in Amazon Bedrock&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We’re excited to see the innovative applications you will build with these new capabilities. As always, we welcome your feedback through &lt;a href="https://repost.aws/" target="_blank" rel="noopener noreferrer"&gt;AWS re:Post&lt;/a&gt; for Amazon Bedrock or your usual AWS contacts. Join the generative AI builder community at &lt;a href="https://community.aws/" target="_blank" rel="noopener noreferrer"&gt;community.aws&lt;/a&gt; to share your experiences and learn from others.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-105760 size-full alignleft" title="Shubhankar Sumar" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/05/02/sssumar-1.jpg" alt="Shubhankar Sumar" width="100" height="133"&gt;&lt;strong&gt;Shubhankar Sumar&lt;/strong&gt;&amp;nbsp;is a Senior Solutions Architect at AWS, where he specializes in architecting generative AI-powered solutions for enterprise software and SaaS companies across the UK. With a strong background in software engineering, Shubhankar excels at designing secure, scalable, and cost-effective multi-tenant systems on the cloud. His expertise lies in seamlessly integrating cutting-edge generative AI capabilities into existing SaaS applications, helping customers stay at the forefront of technological innovation.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="alignleft wp-image-114386 size-thumbnail" title="Shubhankar Sumar" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/jrmander_Badgephoto-e1755166000536-100x115.jpeg" alt="" width="100" height="115"&gt;&lt;strong&gt;Jesse Manders&lt;/strong&gt; is a Senior Product Manager on Amazon Bedrock, the AWS Generative AI developer service. He works at the intersection of AI and human interaction with the goal of creating and improving generative AI products and services to meet our needs. Previously, Jesse held engineering team leadership roles at Apple and Lumileds, and was a senior scientist in a Silicon Valley startup. He has an M.S. and Ph.D. from the University of Florida, and an MBA from the University of California, Berkeley, Haas School of Business.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-105760 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/11/19/Huuong.jpg" alt="Huong Nguyen" width="100" height="133"&gt;&lt;strong&gt;Huong Nguyen&lt;/strong&gt; is a Principal Product Manager at AWS. She is leading the Amazon Bedrock Flows, with 18 years of experience building customer-centric and data-driven products. She is passionate about democratizing responsible machine learning and generative AI to enable customer experience and business innovation. Outside of work, she enjoys spending time with family and friends, listening to audiobooks, traveling, and gardening.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Accelerate enterprise AI implementations with Amazon Q Business</title>
		<link>https://aws.amazon.com/blogs/machine-learning/accelerate-enterprise-ai-implementations-with-amazon-q-business/</link>
					
		
		<dc:creator><![CDATA[Oliver Steffmann]]></dc:creator>
		<pubDate>Thu, 21 Aug 2025 20:29:53 +0000</pubDate>
				<category><![CDATA[Amazon Q Business]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Best Practices]]></category>
		<category><![CDATA[AI/ML]]></category>
		<category><![CDATA[Generative AI]]></category>
		<guid isPermaLink="false">c9b61ae9d4272f1788c2d447f6e4182c2fc59650</guid>

					<description>Amazon Q Business offers AWS customers a scalable and comprehensive solution for enhancing business processes across their organization. By carefully evaluating your use cases, following implementation best practices, and using the architectural guidance provided in this post, you can deploy Amazon Q Business to transform your enterprise productivity. The key to success lies in starting small, proving value quickly, and scaling systematically across your organization.</description>
										<content:encoded>&lt;p&gt;As an &lt;a href="https://aws.amazon.com/"&gt;Amazon Web Services (AWS)&lt;/a&gt; enterprise customer, you’re probably exploring ways to use generative AI to enhance your business processes, improve customer experiences, and drive innovation.&lt;/p&gt; 
&lt;p&gt;With a variety of options available—from &lt;a href="https://aws.amazon.com/q/business/"&gt;Amazon Q Business&lt;/a&gt; to other AWS services or third-party offerings—choosing the right tool for your use case can be challenging. This post aims to guide you through the decision-making process and highlight the unique advantages of Amazon&amp;nbsp;Q&amp;nbsp;Business and how to build an AWS architecture to get started and onboard more use cases.&lt;/p&gt; 
&lt;p&gt;Amazon Q Business is an AI-powered assistant that can help employees quickly find information, solve problems, and get work done across their company’s data and applications. With Amazon Q Business, employees can access information from various internal documents, websites, wikis, and other business resources through natural conversations, helping them to find exactly what they need without extensive searching. It can also be used to automate common workflows across enterprise systems. Amazon Q Business prioritizes security and privacy by operating within your organization’s existing permissions and access controls, helping to ensure that employees only see information that they’re authorized to access.&lt;/p&gt; 
&lt;h2&gt;Understand your use case&lt;/h2&gt; 
&lt;p&gt;The first step in selecting the right generative AI solution is to clearly define your use case. Are you looking to enhance a single system, or do you need a solution that spans multiple platforms? Single-system use cases might be well-served by specific generative AI solutions, while cross-system scenarios often benefit from a more unified approach.&amp;nbsp;Organizations that benefit most from Amazon Q Business typically share several key characteristics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data complexity:&lt;/strong&gt; Companies with large volumes of data spread across multiple repositories and formats (documents, images, audio, video)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Knowledge dependency:&lt;/strong&gt; Organizations where employee productivity depends on accessing institutional knowledge quickly and accurately&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security requirements:&lt;/strong&gt; Organizations with strict security and compliance needs requiring role-based permissions and access controls&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaboration needs:&lt;/strong&gt; Teams that need to share information and collaborate across departments and geographies&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Process complexity:&lt;/strong&gt; Organizations with complex workflows that could benefit from automation and streamlining&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key considerations for tool selection&lt;/h2&gt; 
&lt;p&gt;When evaluating generative AI tools, there are several factors should you should consider to help ensure successful implementation and adoption:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Customization needs:&lt;/strong&gt; Determine if you need custom AI behaviors or if out-of-the-box solutions suffice&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration complexity:&lt;/strong&gt; Assess the number of systems involved and the complexity of data flows between them&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Future scalability:&lt;/strong&gt; Think about your long-term needs and choose a solution that can grow with you&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data privacy and residency:&lt;/strong&gt; Understand your data governance requirements and make sure that your chosen solution can meet them&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost-effectiveness:&lt;/strong&gt; Evaluate the total cost of ownership, including implementation, maintenance, and scaling costs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Time to market:&lt;/strong&gt; Consider how quickly you need to implement your generative AI solution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Change management:&lt;/strong&gt; As with any enterprise AI implementation, organizations must invest in proper training and change management strategies to help ensure adoption&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The case for Amazon Q Business&lt;/h2&gt; 
&lt;p&gt;Amazon Q Business offers unique advantages, especially for organizations that already have AWS services or that have complex, cross-system needs. For AWS enterprise customers that have the resources to build and operate their own solutions, an architecture that includes Amazon Q Business offers flexibility and cost advantages, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Unified experience:&lt;/strong&gt; Amazon Q Business can provide a consistent AI experience across multiple systems, creating a seamless interface for users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Architectural benefits:&lt;/strong&gt; As a native AWS service, Amazon Q Business integrates seamlessly with your existing AWS architecture, reducing complexity and potential points of failure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexibility:&lt;/strong&gt; Amazon Q Business can connect to various enterprise systems, so that you can use it to create custom workflows that span multiple platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; By using Amazon Q Business, you can take advantage of the proven scalability of AWS to handle growing workloads without worrying about infrastructure management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security and compliance:&lt;/strong&gt; Use the robust security features and compliance certifications of AWS to help reduce your security and compliance burden.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost advantages:&lt;/strong&gt; Amazon Q Business offers a pay-as-you-go model, so you can scale costs with the number of users and usage for knowledge bases. This can lead to significant cost savings (see &lt;a href="https://aws.amazon.com/q/business/pricing/"&gt;pricing details&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Implement your generative&amp;nbsp;AI use cases&lt;/h2&gt; 
&lt;p&gt;After you’ve chosen your generative AI use cases, consider a phased implementation approach:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Start with pilot use cases to prove value quickly:&lt;/strong&gt; Good pilot use cases include IT help desk or HR workflows. You can get started by taking advantage of AWS-provided example projects and open source samples.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evaluate the next use cases:&lt;/strong&gt; Prioritize you next use cases by business impact and feature coverage with existing Amazon Q Business connectors and plugins. Often AIOps use cases that include integrations or chat interfaces on top of ServiceNow, Confluence, Teams, or Slack are good examples.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use existing data sources:&lt;/strong&gt; Connect Amazon Q Business to enterprise systems with supported connectors first to maximize immediate value.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Implement accuracy testing using frameworks:&lt;/strong&gt; Use tools such as the AWS evaluation framework for Amazon Q Business, which includes automated testing pipelines, ground truth datasets, and comprehensive metrics for measuring response quality, relevancy, truthfulness, and overall accuracy.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Iteratively scale successful implementations across your organization:&lt;/strong&gt; Start your implementation with the teams that are most interested in the application and willing to provide feedback. Make changes based on the feedback as needed, then expand it across the organization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Measure and track results:&lt;/strong&gt; Establish clear KPIs before implementation to quantify business impact.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Monitor usage and costs, implement feedback loops, and make sure to support security and compliance throughout your generative&amp;nbsp;AI journey. Amazon Q Business can provide significant value when implemented in appropriate use cases with proper planning and governance. Success depends on careful evaluation of business needs, thorough implementation planning, and ongoing management of the solution.&lt;/p&gt; 
&lt;h2&gt;Get started on AWS&lt;/h2&gt; 
&lt;p&gt;When implementing your generative AI use cases, architectural decisions play a crucial role in achieving long-term success. Let’s explore some best practices for a typical AWS enterprise environment.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://aws.amazon.com/iam/"&gt;AWS Identity and Access Management (IAM)&lt;/a&gt;:&lt;/strong&gt; Connecting your corporate source of identities to &lt;a href="https://aws.amazon.com/iam/identity-center/"&gt;AWS IAM Identity Center&lt;/a&gt; provides better security and user experience, Amazon Q Business users authorize their Amazon Q session with their usual sign-in process, using their existing organizational credentials through the identity source already in place.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Account structure:&lt;/strong&gt; Set up Amazon Q Business service, data sources, and plugins in a shared services account based on application group or business unit to help reduce the number of similar deployments across different AWS accounts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Access channels:&lt;/strong&gt; When rolling out new use cases, consider also enabling existing familiar enterprise channels such as collaboration tools (Teams or Slack) to provide a frictionless way to test and roll out new use cases.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data sources:&lt;/strong&gt; When adding data sources, estimate index storage needs and whether your use case requires crawling access control list (ACL) and identity information from the data source and if it is supported by the connector. To reduce initial complexity, focus on use cases that provide the same data to all users, then expand it in a second phase for use cases that rely on ACLs to control access.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugins:&lt;/strong&gt; Use plugins to integrate external services as actions. For each use case, verify if a built-in plugin can provide this functionality, or if a custom plugin is needed. For custom plugins, plan an architecture that enables pointing to backend services using OpenAPI endpoints in other AWS accounts across the organization. This allows flexible integration of existing &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; functions or container-based functionality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By carefully considering these aspects, you can create a solid foundation for your generative&amp;nbsp;AI implementation that aligns with your organization’s needs and future growth plans.&lt;/p&gt; 
&lt;h2&gt;How to deploy Amazon Q Business in your organization&lt;/h2&gt; 
&lt;p&gt;The following reference architecture illustrates the main components and flow of a typical Amazon Q Business implementation:&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-114264" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/blog1.png" alt="" width="1062" height="550"&gt;&lt;/p&gt; 
&lt;p&gt;The workflow is as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A user interacts with an assistant through an enterprise collaboration system.&lt;/li&gt; 
 &lt;li&gt;Alternate: A user interacts with the built-in web interface provided by Amazon Q Business.&lt;/li&gt; 
 &lt;li&gt;The user is authenticated using IAM Identity Center and federated by a third-party identity provider (IdP).&lt;/li&gt; 
 &lt;li&gt;Data sources are configured for existing enterprise systems and data is crawled and indexed in Amazon Q Business. You can use custom connectors to integrate data sources that aren’t provided by Amazon Q Business.&lt;/li&gt; 
 &lt;li&gt;The user makes a request that requires action through a custom plugin. Use custom plugins to integrate third-party applications.&lt;/li&gt; 
 &lt;li&gt;The custom plugin calls an API endpoint that calls an &lt;a href="https://aws.amazon.com/bedrock/"&gt;Amazon Bedrock&lt;/a&gt; agent using Lambda or &lt;a href="https://aws.amazon.com/eks/"&gt;Amazon Elastic Kubernetes Service (Amazon EKS)&lt;/a&gt; in another AWS account. The response is returned to Amazon Q Business and the user.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Use Amazon Q Business to improve enterprise productivity&lt;/h2&gt; 
&lt;p&gt;Amazon Q Business, offers numerous practical applications across enterprise functions. Let’s explore some of the key use cases where Amazon Q Business can enhance organizational efficiency and productivity.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Knowledge management and support:&lt;/strong&gt; Amazon Q Business can manage and retrieve information from documentation and repositories such as internal wikis, SharePoint, Confluence, and other knowledge bases. It provides contextual answers through natural language queries and helps maintain documentation quality by suggesting updates while connecting related information across different repositories. For examples, see &lt;a href="https://aws.amazon.com/ai/generative-ai/customers/smartsheet/"&gt;Smartsheet enhances productivity with Amazon Q Business&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Employee onboarding and training:&lt;/strong&gt; Improve your &lt;a href="https://aws.amazon.com/blogs/machine-learning/build-a-generative-ai-assistant-to-enhance-employee-experience-using-amazon-q-business/"&gt;employee onboarding experience&lt;/a&gt; with automated, personalized learning journeys powered by intelligent support. From instant answers to common questions to guided system setup and interactive training content, this solution helps integrate new team members while supporting their continuous learning and development. To learn more, see &lt;a href="https://aws.amazon.com/solutions/case-studies/deriv-case-study/"&gt;Deriv Boosts Productivity and Reduces Onboarding Time by 45% with Amazon Q Business&lt;/a&gt; and this &lt;a href="https://aws.amazon.com/blogs/machine-learning/build-a-generative-ai-assistant-to-enhance-employee-experience-using-amazon-q-business/"&gt;Amazon Machine Learning blog post&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IT help desk support:&lt;/strong&gt; Shorten IT response times by using AI-driven assistance that delivers round-the-clock support and intelligent troubleshooting guidance. By automating ticket management and using historical data for solution recommendations, this system dramatically reduces response times while easing the burden on your IT support teams.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Human resources:&lt;/strong&gt; Support your HR operations and increase employee satisfaction with an AI-powered solution that provides quick answers to policy questions and streamlines benefits management. &lt;a href="https://aws.amazon.com/solutions/guidance/ai-assistants-with-amazon-q-business/"&gt;This intelligent assistant&lt;/a&gt; guides employees through HR processes, simplifies leave management, and offers quick access to essential forms and documents, creating a more efficient and user-friendly HR experience.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sales and marketing:&lt;/strong&gt; Strengthen your sales and marketing efforts with an AI-powered platform that streamlines content creation, market analysis, and proposal development. From generating fresh content ideas to quickly providing product information and competitor insights, teams can use this solution to respond faster to customer needs while making data-driven decisions. See &lt;a href="https://aws.amazon.com/blogs/machine-learning/how-aws-sales-uses-amazon-q-business-for-customer-engagement/"&gt;How AWS sales uses Amazon Q Business for customer engagement&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI operations:&lt;/strong&gt; Upgrade and improve your operational workflow with AI-driven monitoring and automation that transforms system management and incident response. From real-time performance tracking to automated routine tasks and intelligent root cause analysis, teams can use &lt;a href="https://aws.amazon.com/blogs/machine-learning/building-an-aiops-chatbot-with-amazon-q-business-custom-plugins/"&gt;this solution&lt;/a&gt; to maintain operational efficiency and reduce manual intervention.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Customer case study&lt;/h2&gt; 
&lt;p&gt;A leading enterprise organization transformed its operational efficiency by implementing Amazon Q Business to tackle widespread knowledge accessibility challenges. Prior to implementation, the company struggled with fragmented institutional knowledge scattered across multiple systems, causing significant productivity losses as employees—from systems analysts to executives—spent hours daily searching through documentation, legacy code, and reports.&lt;/p&gt; 
&lt;p&gt;By deploying Amazon Q Business, the organization centralized its scattered information from various sources including &lt;a href="https://aws.amazon.com/s3/"&gt;Amazon Simple Storage Service (Amazon S3)&lt;/a&gt; buckets, Jira, SharePoint, and other content management systems into a single, intelligent interface. The solution dramatically streamlined access to critical information across their complex ecosystem of enterprise resource planning (ERP) systems, databases, sales platforms, and e-commerce integrations.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-114267" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/blog2.png" alt="" width="954" height="543"&gt;&lt;/p&gt; 
&lt;p&gt;With approximately 300 employees each saving two hours daily on routine information retrieval tasks, the company achieved remarkable productivity and efficiency gains. Beyond the gains, Amazon Q Business fostered smarter collaboration, reduced subject-matter expert (SME) dependencies, and accelerated decision-making processes, effectively redefining how enterprise knowledge is accessed and used across the organization.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;Amazon Q Business offers AWS customers a scalable and comprehensive solution for enhancing business processes across their organization. By carefully evaluating your use cases, following implementation best practices, and using the architectural guidance provided in this post, you can deploy Amazon Q Business to transform your enterprise productivity. The key to success lies in starting small, proving value quickly, and scaling systematically across your organization.&lt;/p&gt; 
&lt;p&gt;For more information on Amazon Q Business, including detailed documentation and getting started guides, visit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Explore the&amp;nbsp;&lt;a href="https://docs.aws.amazon.com/amazonq/"&gt;Amazon Q documentation&lt;/a&gt; to understand more about building custom plugins.&lt;/li&gt; 
 &lt;li&gt;Check out these related resources: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/getting-started.html"&gt;Getting Started with Amazon Q Business&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/plugins.html"&gt;Plugins for Amazon Q Business&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aws.amazon.com/q/business/faqs/"&gt;Amazon Q Business FAQs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For questions and feedback, visit the&amp;nbsp;&lt;a href="https://repost.aws/tags/TALmcXzmfeRaKOzrBowJ9cJQ/amazon-q"&gt;AWS re:Post&lt;/a&gt;&amp;nbsp;or contact&amp;nbsp;&lt;a href="https://docs.aws.amazon.com/awssupport/latest/user/getting-started.html"&gt;AWS Support&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-114344 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/Oliver-Steffmann_bio-2-100x100.png" alt="" width="100" height="100"&gt;&lt;strong&gt;Oliver Steffmann&lt;/strong&gt; is a Principal Solutions Architect at AWS based in New York and is passionate about GenAI and public blockchain use cases. He has over 20 years of experience working with financial institutions and helps his customers get their cloud transformation off the ground. Outside of work he enjoys spending time with his family and training for the next Ironman.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-114349 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/KP-1-100x100.jpg" alt="" width="100" height="100"&gt;&lt;strong&gt;Krishna Pramod&lt;/strong&gt;&amp;nbsp;is a Senior Solutions Architect at AWS. He works as a trusted advisor for customers, guiding them through innovation with modern technologies and development of well-architected applications in the AWS cloud. Outside of work, Krishna enjoys reading, music and exploring new destinations.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-114345 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/Mo-RIV-photo-100x125.jpg" alt="" width="100" height="125"&gt;&lt;strong&gt;Mo Naqvi&lt;/strong&gt; is a Generative AI Specialist at AWS on the Amazon Q Business team, where he helps enterprise customers leverage generative AI to transform workplace productivity and unlock business intelligence. With expertise in AI-powered search, deep research capabilities, and agentic workflows, he enables organizations to break down data silos and derive actionable insights from their enterprise information.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Speed up delivery of ML workloads using Code Editor in Amazon SageMaker Unified Studio</title>
		<link>https://aws.amazon.com/blogs/machine-learning/speed-up-delivery-of-ml-workloads-using-code-editor-in-amazon-sagemaker-unified-studio/</link>
					
		
		<dc:creator><![CDATA[Paul Hargis]]></dc:creator>
		<pubDate>Thu, 21 Aug 2025 20:24:35 +0000</pubDate>
				<category><![CDATA[Advanced (300)]]></category>
		<category><![CDATA[Amazon SageMaker]]></category>
		<category><![CDATA[Amazon SageMaker Studio]]></category>
		<category><![CDATA[Amazon SageMaker Unified Studio]]></category>
		<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Technical How-to]]></category>
		<category><![CDATA[AI/ML]]></category>
		<guid isPermaLink="false">06a60de1ba8424a8a5cc3acaf101286ab6b94e06</guid>

					<description>In this post, we walk through how you can use the new Code Editor and multiple spaces support in SageMaker Unified Studio. The sample solution shows how to develop an ML pipeline that automates the typical end-to-end ML activities to build, train, evaluate, and (optionally) deploy an ML model.</description>
										<content:encoded>&lt;p&gt;&lt;a href="https://aws.amazon.com/sagemaker/unified-studio/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Unified Studio&lt;/a&gt; is a single integrated development environment (IDE) that brings together your data tools for analytics and AI. As part of the next generation of &lt;a href="https://aws.amazon.com/sagemaker/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker&lt;/a&gt;, it contains integrated tooling for building data pipelines, sharing datasets, monitoring data governance, running SQL analytics, building artificial intelligence and machine learning (AI/ML) models, and creating generative AI applications. Recently, AWS announced two additional options that enhance the development experience for analytics, ML, and generative AI teams: &lt;a href="https://aws.amazon.com/about-aws/whats-new/2025/05/code-editor-vs-code-open-source-sagemaker-unified-studio/" target="_blank" rel="noopener noreferrer"&gt;Code Editor and multiple spaces&lt;/a&gt;. These new IDE options can help developers and data scientists speed up delivery of ML workloads by offering familiar IDE layouts, using popular extensions to enhance development, and using critical debug and test options, all within a unified environment.&lt;/p&gt; 
&lt;p&gt;Code Editor, based on Code-OSS (Visual Studio Code – Open Source), provides a lightweight and powerful IDE with familiar shortcuts and terminal access, along with advanced debugging capabilities and refactoring tools. The VSCode IDE, and Code-OSS variants like Code Editor, remain the most &lt;a href="https://visualstudiomagazine.com/articles/2023/06/28/so-2023.aspx" target="_blank" rel="noopener noreferrer"&gt;popular&lt;/a&gt; development tool in recent years. Teams can boost their productivity by accessing thousands of Code Editor-compatible extensions from the &lt;a href="https://open-vsx.org/" target="_blank" rel="noopener noreferrer"&gt;Open VSX extension&lt;/a&gt; gallery. The Code Editor IDE within SageMaker Unified Studio supports version control and cross-team collaboration through GitHub, GitLab, or Bitbucket repositories, while offering preconfigured SageMaker distribution for popular ML frameworks.&lt;/p&gt; 
&lt;p&gt;Within SageMaker Unified Studio, a &lt;em&gt;space&lt;/em&gt; is a work environment that runs a particular IDE. To maximize the benefits of Code Editor alongside other coding interfaces in SageMaker Unified Studio, including JupyterLab, SageMaker now supports multiple spaces per user per project. With multiple spaces, users can manage parallel workstreams with different computational needs. Each space maintains a 1-to-1 relationship with an application instance, so users can efficiently organize their storage and resource requirements. This enhancement provides the flexibility to access multiple applications and instances simultaneously, improving workflow management and productivity.&lt;/p&gt; 
&lt;p&gt;In this post, we walk through how you can use the new Code Editor and multiple spaces support in SageMaker Unified Studio. The sample solution shows how to develop an ML pipeline that automates the typical end-to-end ML activities to build, train, evaluate, and (optionally) deploy an ML model.&lt;/p&gt; 
&lt;h2&gt;Features of Code Editor in SageMaker Unified Studio&lt;/h2&gt; 
&lt;p&gt;Code Editor offers a unique set of features to increase the productivity of your ML team:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fully managed infrastructure&lt;/strong&gt; – The Code Editor IDE runs on fully managed infrastructure. SageMaker takes care of keeping the instances up-to-date with the latest security patches and upgrades.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dial resources up and down&lt;/strong&gt; – With Code Editor, you can seamlessly change the underlying resources (such as instance type or EBS volume size) on which Code Editor is running. This is beneficial for developers who want to run workloads with changing compute, memory, and storage needs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SageMaker provided images&lt;/strong&gt; – Code Editor is preconfigured with &lt;a href="https://github.com/aws/sagemaker-distribution" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Distribution&lt;/a&gt; as the default image. This container image has the most popular ML frameworks supported by SageMaker, along with the &lt;a href="https://pypi.org/project/sagemaker-studio/" target="_blank" rel="noopener noreferrer"&gt;SageMaker Studio SDK&lt;/a&gt;, &lt;a href="https://sagemaker.readthedocs.io/en/stable/" target="_blank" rel="noopener noreferrer"&gt;SageMaker Python SDK&lt;/a&gt;, &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/index.html" target="_blank" rel="noopener noreferrer"&gt;Boto3&lt;/a&gt;, and other AWS and data science specific libraries installed. This significantly reduces the time you spend setting up your environment and decreases the complexity of managing package dependencies in your ML project.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Amazon Q Developer&lt;/strong&gt; – Code Editor also comes with generative AI capabilities powered by &lt;a href="https://aws.amazon.com/q/developer/" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Developer&lt;/a&gt;. You can boost your productivity by generating inline code suggestions within the IDE. In addition, you can use Amazon Q chat to ask questions about building at AWS and for assistance with software development. Amazon Q can explain coding concepts and code snippets, generate code and unit tests, and improve code, including debugging or refactoring.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensions and configuration settings &lt;/strong&gt;– Code Editor also includes persistence of installed extensions and configuration settings.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When you open Code Editor, you will notice that the space has been bootstrapped with the current state of your project’s repository. Navigate to the file explorer, and you will find a &lt;code&gt;getting_started.ipynb&lt;/code&gt; Jupyter notebook, as shown in the following screenshot.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114203 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-smus-nb-1.jpeg" alt="" width="1287" height="753"&gt;&lt;/p&gt; 
&lt;p&gt;You can choose &lt;strong&gt;Run All&lt;/strong&gt; to execute this notebook. Select &lt;strong&gt;Python Environments&lt;/strong&gt; when prompted to select the kernel and then choose the recommended Python environment named &lt;code&gt;base&lt;/code&gt;. Now the &lt;code&gt;getting_started&lt;/code&gt; notebook will be executed, and you can explore the output of the various cells.&lt;/p&gt; 
&lt;h2&gt;Architecture of Code Editor in SageMaker Unified Studio&lt;/h2&gt; 
&lt;p&gt;When you open Code Editor in SageMaker Unified Studio, it creates an application container that runs on an &lt;a href="http://aws.amazon.com/ec2" target="_blank" rel="noopener noreferrer"&gt;Amazon Elastic Compute Cloud&lt;/a&gt; (Amazon EC2) instance. This instance type matches your selection during Code Editor space configuration. The underlying infrastructure management happens automatically in a service-managed account controlled by SageMaker Unified Studio. The following diagram shows the infrastructure as it relates to end-users and how instances are provisioned. User A has configured two spaces, and User B is using a single space. Both users have the option to create additional spaces as needed. Currently, these spaces are isolated private environments, with shared space functionality planned for a future release.&lt;/p&gt; 
&lt;p&gt;SageMaker Unified Studio lets you create multiple spaces with Code Editor or JupyterLab as the IDE, each configurable with different ML instance types, including those with accelerated computing capabilities. For each space, you must specify three core elements: the EBS volume size, your chosen instance type, and the application type you want to run (such as Code Editor or JupyterLab). When you initiate a space, SageMaker Unified Studio automatically provisions a compute instance and launches a SageMaker Unified Studio Code Editor application using your specified container image. The storage system is designed for continuity: your EBS volume persists across sessions, even when you stop and restart the IDE. This means that when you stop the Code Editor application to save on computing costs, although the compute resources shut down, your EBS volume is preserved. Upon restart, the system automatically reattaches this volume, so your work remains intact.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114196 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-arch-diag.jpg" alt="" width="1420" height="1698"&gt;&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;In the following sections, we show how to develop an ML project with Code Editor on SageMaker Unified Studio. For this example, we run through a Jupyter notebook that creates an ML pipeline using &lt;a href="https://aws.amazon.com/sagemaker/pipelines/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Pipelines&lt;/a&gt;, which automates the usual tasks of building, training, and (optionally) deploying a model.&lt;/p&gt; 
&lt;p&gt;In this scenario, Code Editor can be used by an ML engineering team who needs advanced IDE features to test and debug their code, create and execute a pipeline, and monitor the status in SageMaker Unified Studio.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;To prepare your organization to use the new Code Editor IDE and multiple spaces support in SageMaker Unified Studio, complete the following prerequisite steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create an AWS account.&lt;/li&gt; 
 &lt;li&gt;Configure &lt;a href="https://aws.amazon.com/iam/identity-center/" target="_blank" rel="noopener noreferrer"&gt;AWS IAM Identity Center&lt;/a&gt; accordingly.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;By default, authentication and authorization for a SageMaker Unified Studio domain is controlled through IAM Identity Center, which can only be configured in a single AWS Region that must be the same Region as your SageMaker domain. See &lt;a href="https://docs.aws.amazon.com/sagemaker-unified-studio/latest/adminguide/setting-up.html" target="_blank" rel="noopener noreferrer"&gt;Setting up Amazon SageMaker Unified Studio&lt;/a&gt; for additional information.&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Create a SageMaker Unified Studio domain using the &lt;a href="https://docs.aws.amazon.com/sagemaker-unified-studio/latest/adminguide/create-domain-sagemaker-unified-studio-quick.html" target="_blank" rel="noopener noreferrer"&gt;quick setup&lt;/a&gt;. A virtual private cloud (VPC) is required; one will be created for you (if needed) during setup.&lt;/li&gt; 
 &lt;li&gt;After you create the domain, you can enable access to SageMaker Unified Studio for users with single sign-on (SSO) credentials through IAM Identity Center by choosing &lt;strong&gt;Configure&lt;/strong&gt; next to &lt;strong&gt;Configure SSO user access &lt;/strong&gt;in the &lt;strong&gt;Next steps for your domain &lt;/strong&gt;section.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114201 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-smus-domain-3.gif" alt="" width="1662" height="588"&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;After you configure user access for your newly created domain, navigate to the SageMaker Unified Studio URL and log in using SSO.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can find the URL on the SageMaker console, as shown in the following screenshot.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114202 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-smus-domain-4.png" alt="" width="1283" height="254"&gt;&lt;/p&gt; 
&lt;p&gt;By default, IAM Identity Center requires multi-factor authentication on user accounts, and you might be prompted to configure this upon first login to SageMaker Unified Studio, as shown in the following screenshot. For more details about this requirement, refer to &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/user-device-registration.html?icmpid=docs_sso_user_portal" target="_blank" rel="noopener noreferrer"&gt;Registering your device for MFA&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114199 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-idc-mfa-5.png" alt="" width="800" height="906"&gt;&lt;/p&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;After you log in, choose &lt;strong&gt;Create Project&lt;/strong&gt; and follow the prompts to create your first SageMaker Unified Studio project. We choose the &lt;strong&gt;All Capabilities&lt;/strong&gt; project profile during setup.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We abstract away some of the concepts around project profiles in this post for simplicity. For more information, refer to &lt;a href="https://docs.aws.amazon.com/sagemaker-unified-studio/latest/adminguide/project-profiles.html" target="_blank" rel="noopener noreferrer"&gt;Project profiles in Amazon SageMaker Unified Studio&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114204 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-smus-proj-6.gif" alt="" width="1812" height="914"&gt;&lt;/p&gt; 
&lt;p&gt;After you create a project, you can create your space (an IDE) in which Code Editor will be provisioned.&lt;/p&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;On the &lt;strong&gt;Compute&lt;/strong&gt; tab of the project, choose &lt;strong&gt;Create Space&lt;/strong&gt;, then enter a name and choose &lt;strong&gt;Code Editor&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114205 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-smus-proj-7.gif" alt="" width="1812" height="914"&gt;&lt;/p&gt; 
&lt;ol start="8"&gt; 
 &lt;li&gt;When the &lt;strong&gt;Status&lt;/strong&gt; column indicates the space is &lt;strong&gt;Running&lt;/strong&gt;, open the space to be redirected to Code Editor.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114197 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-codeeditor-8.jpeg" alt="" width="1289" height="648"&gt;&lt;/p&gt; 
&lt;h2&gt;Interacting with AWS services directly from your IDE&lt;/h2&gt; 
&lt;p&gt;Out of the box, Code Editor comes with the &lt;a href="https://aws.amazon.com/visualstudiocode/" target="_blank" rel="noopener noreferrer"&gt;AWS Toolkit for Visual Studio Code&lt;/a&gt; to provide you with an integrated experience to other AWS services during your project, such as viewing data within your &lt;a href="http://aws.amazon.com/s3" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Storage Service&lt;/a&gt; (Amazon S3) buckets, finding container images in &lt;a href="http://aws.amazon.com/ecr/" target="_blank" rel="noopener noreferrer"&gt;Amazon Container Registry&lt;/a&gt; (Amazon ECR), or visualizing &lt;a href="http://aws.amazon.com/cloudwatch" target="_blank" rel="noopener noreferrer"&gt;Amazon CloudWatch&lt;/a&gt; logs for your SageMaker environment.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114198 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-codeeditor-9.gif" alt="" width="1614" height="946"&gt;&lt;/p&gt; 
&lt;p&gt;The AWS Toolkit for Visual Studio Code uses the permissions of the &lt;a href="https://aws.amazon.com/iam/" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management&lt;/a&gt; (IAM) role assigned to the project. You can find the Amazon Resource Name (ARN) of the project role on the project details page, as shown in the following screenshot.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114206 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-smus-proj-10.png" alt="" width="1287" height="622"&gt;&lt;/p&gt; 
&lt;h2&gt;Use Code Editor to create and execute an ML pipeline in SageMaker&lt;/h2&gt; 
&lt;p&gt;In this section, we upload and execute a Jupyter notebook that creates and starts a machine learning operations (MLOps) pipeline orchestrated with SageMaker Pipelines. The pipeline we create follows a typical ML application pattern of data preprocessing, training, evaluation, model creation, transformation, and model registration, as illustrated in the following diagram.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114200 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-sm-pipeline-11.jpg" alt="" width="1313" height="283"&gt;&lt;/p&gt; 
&lt;p&gt;Begin by uploading the sample notebook directly into Code Editor. You can drag and drop the notebook, or right-click and choose &lt;strong&gt;Upload &lt;/strong&gt;in the file explorer pane.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-114207 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ML-18917-smus-upload-12.jpg" alt="" width="1056" height="612"&gt;&lt;/p&gt; 
&lt;p&gt;You can download and run sample notebooks using standard &lt;code&gt;Git clone&lt;/code&gt; commands from the GitHub repository where these notebooks are located. Running the Full Pipeline notebook sample requires a few extra IAM role permissions other than the defaults assigned when the SageMaker Unified Studio project is created. The Quick Pipeline can be run as-is with the default IAM permissions.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/amazon-sagemaker-generativeai/blob/main/2_end_to_end_genai_on_sagemaker/4_mlops/smus_pipelines_preprocess_train_evaluate_model.ipynb" target="_blank" rel="noopener noreferrer"&gt;Quick Pipeline sample notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/amazon-sagemaker-generativeai/blob/main/2_end_to_end_genai_on_sagemaker/4_mlops/smus_pipelines_preprocess_train_evaluate_batch_transform.ipynb" target="_blank" rel="noopener noreferrer"&gt;Full Pipeline sample notebook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Region availability, cost, and limitations&lt;/h2&gt; 
&lt;p&gt;Code Editor and multiple spaces support are available in supported SageMaker Unified Studio domains. For more information about Regions where these features are available, see &lt;a href="https://docs.aws.amazon.com/sagemaker-unified-studio/latest/adminguide/supported-regions.html" target="_blank" rel="noopener noreferrer"&gt;Regions where Amazon SageMaker Unified Studio is supported&lt;/a&gt;. Code Editor will be provisioned within a SageMaker space and run on a user-selectable instance type, anywhere from ultra low-cost instances (ml.t3.medium) up to highly performant GPU-based instances (G6 instance family).&lt;/p&gt; 
&lt;p&gt;The primary cost associated with running a Code Editor space is tied directly to the underlying compute instance type. The hourly costs for ML instance types can found on the &lt;a href="https://aws.amazon.com/sagemaker-ai/pricing/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker AI pricing page&lt;/a&gt; on the &lt;strong&gt;Instance details&lt;/strong&gt; tab. To prevent unnecessary charges, the space will be automatically shut down after a configurable timeout when the space is idle (see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_SpaceIdleSettings.html" target="_blank" rel="noopener noreferrer"&gt;SpaceIdleSettings&lt;/a&gt;). There will also be minimal charges tied to storage for the EBS volume that is attached to the Code Editor space.&lt;/p&gt; 
&lt;p&gt;At launch, Code Editor spaces can be configured to use a particular SageMaker Distribution image, either version 2.6 or 3.1. Additional major and minor releases of the SageMaker Distribution will be added over time.&lt;/p&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;To avoid incurring additional charges, delete the resources created from following this post. This includes any development environments created, such as Code Editor or JupyterLab spaces, which you can delete by navigating to the &lt;strong&gt;Project Compute&lt;/strong&gt; navigation pane, choosing the &lt;strong&gt;Spaces&lt;/strong&gt; tab, choosing the options menu (three vertical dots) aligned with the space, and choosing &lt;strong&gt;Delete&lt;/strong&gt;. You can remove project resources by &lt;a href="https://docs.aws.amazon.com/sagemaker-unified-studio/latest/userguide/delete-project.html" target="_blank" rel="noopener noreferrer"&gt;deleting the project&lt;/a&gt;, which can be done from the SageMaker Unified Studio console. There is no charge for a SageMaker Unified Studio domain, but you can optionally delete this from the SageMaker AI console. If you created IAM Identity Center users that you no longer need, delete the users from the IAM Identity Center console.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;The addition of the new Code Editor IDE to SageMaker Unified Studio provides a familiar working environment to thousands of data scientists and developers. With this powerful IDE, data scientists can more quickly build, train, tune, and deploy their ML models and push them into production where they can get measurable ROI. With thousands of pre-tested extensions through the VSX Registry, developers will have improved usability and productivity as they build and deploy their generative AI applications.&lt;/p&gt; 
&lt;p&gt;In addition, SageMaker Unified Studio now supports multiple spaces per user per project. These new environment options can help MLOps personas segregate workloads, isolate compute resources, and increase productivity through parallelized workstreams. Together, these enhancements help data science teams work more efficiently in bringing ML and generative AI solutions into production, where they can begin to reap the benefits of their work.&lt;/p&gt; 
&lt;p&gt;To get started using SageMaker Unified Studio, refer to the &lt;a href="https://catalog.us-east-1.prod.workshops.aws/workshops/06dbe60c-3a94-463e-8ac2-18c7f85788d4/en-US" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Workshop&lt;/a&gt;. This workshop provides complete step-by-step instructions, plus sample datasets, source code, and Jupyter notebooks for gaining hands-on experience with the tooling.&lt;/p&gt; 
&lt;p&gt;To learn more about Code Editor, see &lt;a href="https://docs.aws.amazon.com/sagemaker-unified-studio/latest/userguide/code-editor.html" target="_blank" rel="noopener noreferrer"&gt;Using the Code Editor IDE in Amazon SageMaker Unified Studio&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114690" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/19/phhargis-pic-100x100.png" alt="" width="100" height="100"&gt;Paul Hargis&lt;/strong&gt; has focused his efforts on machine learning at several companies, including AWS, Amazon, and Hortonworks. He enjoys building technology solutions and teaching people how to leverage them. Paul likes to help customers expand their machine learning initiatives to solve real-world problems. Prior to his role at AWS, he was lead architect for Amazon Exports and Expansions, helping amazon.com improve the experience for international shoppers.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114691" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/19/hqudah-pic-100x100.png" alt="" width="100" height="100"&gt;Hazim Qudah&lt;/strong&gt; is an AI/ML Specialist Solutions Architect at Amazon Web Services. He enjoys helping customers build and adopt AI/ML solutions using AWS technologies and best practices. Prior to his role at AWS, he spent many years in technology consulting with customers across many industries and geographies. In his free time, he enjoys running and playing with his dogs!&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114693" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/19/jayan-pic-100x100.png" alt="" width="100" height="100"&gt;Jayan Kuttagupthan&lt;/strong&gt; is a Senior Software Engineer at Amazon with over 15 years of experience in backend development and design. He is currently working on improving Seller Partner Support Experience at Amazon. As a technical leader, Jayan has successfully built and mentored engineering teams across organizations, while also contributing to the broader tech community through speaking engagements such as SRECon Asia.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-114697" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/19/majipar-100x133.png" alt="" width="100" height="133"&gt;Majisha Namath Parambath&lt;/strong&gt; is a Senior Software Engineer at Amazon SageMaker with 9+ years at Amazon. She’s provided technical leadership on SageMaker Studio (Classic and V2) and Studio Lab, and now leads key initiatives for the next-generation Amazon SageMaker Unified Studio, delivering an end-to-end data analytics and interactive machine learning experience. Her work spans system design and architecture, and cross-team execution, with a focus on security, performance, and reliability at scale. Outside of work, she enjoys reading, cooking, and skiing.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>How Infosys Topaz leverages Amazon Bedrock to transform technical help desk operations</title>
		<link>https://aws.amazon.com/blogs/machine-learning/how-infosys-topaz-leverages-amazon-bedrock-to-transform-technical-help-desk-operations/</link>
					
		
		<dc:creator><![CDATA[Meenakshi Venkatesan, Karthikeyan Senthilkumar, Aninda Chakraborty]]></dc:creator>
		<pubDate>Thu, 21 Aug 2025 17:25:11 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Machine Learning]]></category>
		<category><![CDATA[Customer Solutions]]></category>
		<category><![CDATA[Partner solutions]]></category>
		<category><![CDATA[Technical How-to]]></category>
		<guid isPermaLink="false">19bd3f2c7977d1a8c8fe4f502d6da4b0b8e8d205</guid>

					<description>In this blog, we examine the use case of a large energy supplier whose technical help desk agents answer customer calls and support field agents. We use Amazon Bedrock along with capabilities from Infosys Topaz™ to build a generative AI application that can reduce call handling times, automate tasks, and improve the overall quality of technical support.</description>
										<content:encoded>&lt;p&gt;AI-powered apps and AI-powered service delivery are key differentiators in the enterprise space today. A generative AI-based resource can greatly reduce the onboarding time for new employees, enhance enterprise search, assist in drafting content, check for compliance, understand the legal language of data, and more.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aws.amazon.com/generative-ai/" target="_blank" rel="noopener noreferrer"&gt;Generative AI&lt;/a&gt; applications are an emerging and sought-after solution in the enterprise world for customer care centers, customer relationship management centers, and help desks.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.infosys.com/services/data-ai-topaz.html" target="_blank" rel="noopener noreferrer"&gt;Infosys Topaz&lt;/a&gt;, an AI-first offering that accelerates business value for enterprises using generative AI, is integrating AWS generative AI capabilities to future proof enterprise AI solutions including &lt;a href="https://www.infosys.com/products-and-platforms/cortex.html" target="_blank" rel="noopener noreferrer"&gt;Infosys Cortex&lt;/a&gt;, &lt;a href="https://www.infosys.com/services/incubating-emerging-technologies/offerings/personalized-smart-video.html" target="_blank" rel="noopener noreferrer"&gt;Infosys Personalized Smart Video&lt;/a&gt; (PSV), Infosys Conversational AI Suite, &lt;a href="https://www.infosys.com/services/application-development-maintenance/service-offerings/application-management-platform.html" target="_blank" rel="noopener"&gt;Infosys Live Enterprise Automation Platform (LEAP)&lt;/a&gt;, and &lt;a href="https://www.infosys.com/services/cyber-security/offerings/platform-powered-services.html" target="_blank" rel="noopener noreferrer"&gt;Infosys Cyber Next&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In this post, we examine the use case of a large energy supplier whose technical help desk support agents answer customer calls and support meter technicians in the field. We use &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt;, along with capabilities from Infosys Topaz, to build a generative AI application that can reduce call handling times, automate tasks, and improve the overall quality of technical support.&lt;/p&gt; 
&lt;h2&gt;Business challenges&lt;/h2&gt; 
&lt;p&gt;Meter technicians go to customer locations to install, exchange, service, and repair meters. Sometimes they call support agents from the technical help desk to get guidance and support to fix issues that they can’t fix by themselves. The approximate volume of these calls is 5,000 per week, approximately 20,000 per month.&lt;/p&gt; 
&lt;p&gt;Some of the challenges faced by support agents and meter technicians include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Locating the appropriate information or resources to address inquiries or concerns effectively.&lt;/li&gt; 
 &lt;li&gt;The average handling time for these calls varies based on the issue category, but calls in the top 10 categories, which represent over 60% of calls, are over 5 minutes.&lt;/li&gt; 
 &lt;li&gt;60–70% issues are repetitive, and the rest are new issues.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Maintaining an adequate workforce to provide prompt responses can be costly. It’s expensive and not scalable to hire more support agents and train them with the knowledge needed to provide support. We built an AI-powered technical help desk that can ingest past call transcripts and new call transcripts in near real time. This will help support agents provide resolutions based on past calls, thereby reducing manual search time so they can attend to other priorities.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;The solution involves creating a knowledge base by ingesting and processing call transcripts, so that the AI assistant can provide resolutions based on history. The benefits of an AI-powered technical help desk include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Providing all-day availability&lt;/li&gt; 
 &lt;li&gt;Saving effort for the help desk agents&lt;/li&gt; 
 &lt;li&gt;Allowing businesses to focus on new issues&lt;/li&gt; 
 &lt;li&gt;Reducing wait time and shortening call duration&lt;/li&gt; 
 &lt;li&gt;Automating actions that the help desk agents take on the backend based on their analysis of the issue&lt;/li&gt; 
 &lt;li&gt;Improving the quality of technical help desk responses, and thereby communication and outcomes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This post showcases the implementation details, including user-based access controls, caching mechanisms for efficient FAQ retrieval and updates, user metrics tracking, and response generation with time-tracking capabilities.&lt;/p&gt; 
&lt;p&gt;The following diagram shows the flow of data and processes from left to right, starting with call transcripts, going through preprocessing, storage, and retrieval, and ending with user interaction and response generation. It emphasizes the role-based access control throughout the system.&lt;/p&gt; 
&lt;p&gt;We used Amazon Bedrock because it integrates seamlessly with other AWS services shown in the diagram, such as &lt;a href="https://aws.amazon.com/step-functions" target="_blank" rel="noopener noreferrer"&gt;AWS Step Functions&lt;/a&gt;, &lt;a href="https://aws.amazon.com/dynamodb" target="_blank" rel="noopener noreferrer"&gt;Amazon DynamoDB&lt;/a&gt;, and &lt;a href="https://aws.amazon.com/opensearch-service/" target="_blank" rel="noopener noreferrer"&gt;Amazon OpenSearch Service&lt;/a&gt;. This integration improves data flow and management within a single cloud system.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113097 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/04/image-1-2.png" alt="Architecture Diagram" width="1794" height="698"&gt;&lt;/p&gt; 
&lt;h2&gt;Building the knowledge base: Data flow &lt;a id="_Toc139393833" target="_blank" rel="noopener noreferrer"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Calls to the technical help desk are recorded for quality and analysis purposes, and the transcripts are stored in JSON format in an &lt;a href="https://aws.amazon.com/s3/" target="_blank" rel="noopener noreferrer"&gt;AWS Simple Storage Service (Amazon S3)&lt;/a&gt; bucket.&lt;/p&gt; 
&lt;p&gt;The conversations are parsed into a CSV file for sorting and a large language model (LLM), such as &lt;a href="https://aws.amazon.com/bedrock/claude/" target="_blank" rel="noopener noreferrer"&gt;Anthropic’s Claude Sonnet&lt;/a&gt; on Amazon Bedrock, is used to summarize the conversation and determine if the context has useful information, based on the length of the call, key words that indicate relevant context, and so on.&lt;/p&gt; 
&lt;p&gt;The shortlisted conversations are chunked, and embeddings are generated and stored in an &lt;a href="https://aws.amazon.com/opensearch-service/features/serverless/" target="_blank" rel="noopener noreferrer"&gt;Amazon OpenSearch Serverless&lt;/a&gt; vector store. The conversations determined to be irrelevant go into another S3 bucket for future reference. This process is automated, as shown in the following figure.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113098 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/04/image-2-2.png" alt="Process Flow" width="1093" height="557"&gt;&lt;/p&gt; 
&lt;p&gt;A virtual assistant is then built on top of the knowledge base that will assist the support agent.&lt;/p&gt; 
&lt;p&gt;The conversations are parsed into a CSV file for simple sorting and an LLM such as &lt;a href="https://aws.amazon.com/bedrock/claude/" target="_blank" rel="noopener noreferrer"&gt;Anthropic’s Claude Sonnet&lt;/a&gt; on Amazon Bedrock is used to summarize the conversation and determine if the context has useful information, based on the length of the call, key words that indicate relevant context, and so on.&lt;/p&gt; 
&lt;p&gt;An &lt;a href="https://docs.aws.amazon.com/lambda/latest/operatorguide/event-driven-architectures.html" target="_blank" rel="noopener noreferrer"&gt;event-driven&lt;/a&gt; &lt;a href="http://aws.amazon.com/lambda" target="_blank" rel="noopener noreferrer"&gt;AWS Lambda&lt;/a&gt; function is triggered when new call transcripts are loaded into the S3 bucket. This will trigger a Step Functions workflow.&lt;/p&gt; 
&lt;p&gt;From the raw CSV file of call transcripts, only a few fields are extracted: a contact ID that is unique for a particular call session between a customer and a support agent, the &lt;code&gt;participant&lt;/code&gt; column indicating the speaker (who can be either a support agent or a customer) and the &lt;code&gt;content&lt;/code&gt; column, which is the conversation.&lt;/p&gt; 
&lt;p&gt;To build the knowledge base, we used Step Functions to ingest the raw CSV files, as shown in the following workflow.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-113100 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/04/image-3-1.png" alt="Build Knowledge Bases" width="646" height="980"&gt;&lt;/p&gt; 
&lt;p&gt;The automated workflow begins when a user uploads the JSON file to an S3 bucket.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The Step Functions workflow receives the Amazon S3 URL of the CSV transcripts from a Lambda function. The &lt;code&gt;contactid&lt;/code&gt; is unique for a particular call session between the customer and the agent, who are the participants, and the &lt;code&gt;content&lt;/code&gt; is the actual conversation.&lt;/li&gt; 
 &lt;li&gt;The Lambda function (Parse Transcripts from CSV) uses this Amazon S3 URL to download the CSV files and uses Pandas to preprocess the CSV in a format with the contact ID and transcript only. Conversations with the same contact ID are concatenated into a single row.&lt;/li&gt; 
 &lt;li&gt;The second step is a classification task that ingests, classifies, and keeps or discards conversions. The conversations are passed to the map state. In map state, conversations are handled concurrently. For each conversation row, this state triggers concurrent execution of another Lambda function (Check for Irrelevant Conversations) that will classify each conversation as relevant or irrelevant. 
  &lt;ol type="a"&gt; 
   &lt;li&gt;For this classification task, the Lambda function uses Anthropic’s Claude Sonnet model on Amazon Bedrock. It uses zero-shot chain-of-thought prompting, to first summarize the conversation and then to determine the relevance. If the conversation is disconnected or disjointed (because of signal disturbances or other reasons), or has no meaningful context (when the agent is unable to provide resolution), it’s classified as irrelevant.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Finally, the map state takes each instance of the conversation (classified as relevant or irrelevant) and passes to the choice state, which will log the irrelevant conversations into an S3 bucket and relevant conversations are passed to another Lambda function (Handle Relevant Conversations) for further processing.&lt;/li&gt; 
 &lt;li&gt;The final Lambda function (Log Irrelevant Conversations) reads the relevant conversations and generates the summary, problem, and resolution steps using Anthropic’s Claude Sonnet. The summary generated is used for creating the summary embeddings.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The following is an example of an irrelevant conversation that is discarded.&lt;/p&gt; 
&lt;table class="styled-table" border="1px" cellpadding="10px"&gt; 
 &lt;tbody&gt; 
  &lt;tr style="background-color: #000000"&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Contactid&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Participant&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Content&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Help the school speaking&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Your morning call it said Chris Simpson near me, TX 75 is, uh, locked out spinning disc&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;No problem. What’s your carry, please?&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Thanks to see 27492.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Thank you. Right, you’ll be kicked off.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Single noise. Anything anyway, mate. When you look back in, you’ll be fine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Yep.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Alright, Right. Thank you. Choose them.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;66da378c-8d74-467b-86ca-7534158b63c2&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;I think she’s made a bit Right bye.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The following is an example of a relevant conversation.&lt;/p&gt; 
&lt;table class="styled-table" border="1px" cellpadding="10px"&gt; 
 &lt;tbody&gt; 
  &lt;tr style="background-color: #000000"&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Contactid&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Participant&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Content&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Hello.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Help those gathers Reagan. Yes.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Get up, and then I’ll speak to someone about clearing the cash on my T C 75. So, can do. Off job certainly things because you won’t let me sorry minutes, just saying Could not establish network connection.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Yeah, I’ve got a signal.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Yeah, it’s not trying to do is connected. We got three D 14. It’s up, right?&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;What should happen because I’m in the four G area.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Yeah, dragged down the screen twice from the top for me.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Yep. He? Yeah.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Yep. And check that survey is eight hasn’t turned itself off.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Need. Okay, try again.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;There you go, right showing us connected. We can&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;CUSTOMER&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;All right. Can you clear the cat 12 can signal is day to see this message. Contact the T. H. D.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Yep.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;&lt;code&gt;079a57bf-9700-45d3-bbd9-11d2d41370c7&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;There you go. That should take you out any second, okay?&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The following table shows the final knowledge base schema.&lt;/p&gt; 
&lt;table class="styled-table" style="height: 215px" border="1px" width="1196" cellpadding="10px"&gt; 
 &lt;tbody&gt; 
  &lt;tr style="background-color: #000000"&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;k_id&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;conversation_history&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Summary&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;Problem&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;resolution_steps&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;summary_embeddings&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;1&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;AGENT: Hi, how can I help you CUSTOMER: Hi, I am facing a black screen issue.…&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Customer is facing with a issue …&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Black Screen issue&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Restart app&lt;/li&gt; 
     &lt;li&gt;If issue persist, reinstall app&lt;/li&gt; 
    &lt;/ul&gt; &lt;p&gt;…&lt;/p&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;[0.5078125,-0.071777344,0.15722656,0.46679688,0.56640625,-0.037353516,-0.08544922,0.00012588501, …]&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Building an effective RAG pipeline&lt;/h2&gt; 
&lt;p&gt;The success of retrieval systems relies on an effective embedding model. The &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters-titan-embed-text.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Titan Text Embeddings&lt;/a&gt; model is optimized for text retrieval to enable Retrieval Augmented Generation (RAG). Instead of processing massive documents at the same time, we used chunking strategies to improve retrieval. We used a chunk size of 1,000 with an overlapping window of 150–200 for best results. Chunking combined with page boundaries is a simple yet highly effective approach. Sentence window retrieval also returns accurate results.&lt;/p&gt; 
&lt;p&gt;Prompting techniques play a crucial role in obtaining effective results. For example, instead of “guidelines for smart meter installation,” an expanded prompt such as “instructions, procedures, regulations, and best practices along with agent experiences for installation of a smart meter” yields better results.&lt;/p&gt; 
&lt;p&gt;Building production-ready RAG applications requires a performant vector database as well. The &lt;a href="https://aws.amazon.com/opensearch-service/serverless-vector-engine" target="_blank" rel="noopener noreferrer"&gt;vector engine for OpenSearch Serverless&lt;/a&gt; provides a scalable and high-performing vector storage and search capability; key features include adding, updating, and deleting vector embeddings in near real time without impacting query performance. See &lt;a href="https://aws.amazon.com/blogs/machine-learning/build-a-contextual-chatbot-application-using-knowledge-bases-for-amazon-bedrock/" target="_blank" rel="noopener noreferrer"&gt;Build a contextual chatbot application using Amazon Bedrock Knowledge Bases&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Security considerations&lt;/h2&gt; 
&lt;p&gt;This architecture implements comprehensive security measures across the components. We use &lt;a href="https://aws.amazon.com/secrets-manager/" target="_blank" rel="noopener noreferrer"&gt;AWS Secrets Manager&lt;/a&gt; to securely store and manage sensitive credentials, API keys, and database passwords, with automatic rotation policies in place. S3 buckets are encrypted using &lt;a href="http://aws.amazon.com/kms" target="_blank" rel="noopener noreferrer"&gt;AWS Key Management Service&lt;/a&gt; (AWS KMS) with AES-256 encryption, and versioning is enabled for audit purposes. Personally identifiable information (PII) is handled with extreme care— PII data is encrypted and access is strictly controlled through &lt;a href="https://aws.amazon.com/iam/" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management&lt;/a&gt; (IAM) policies and AWS KMS. For OpenSearch Serverless implementation, we make sure data is encrypted both at rest using AWS KMS and in transit using TLS 1.2. Session management includes timeout for inactive sessions, requiring re-authentication for continued access. The system interacts with access control list (ACL) data stored in DynamoDB through a secure middleware layer, where the DynamoDB table is encrypted at rest using AWS managed KMS keys. Data transmissions between services are encrypted in transit using TLS 1.2, and we maintain end-to-end encryption across our entire infrastructure. Access controls are granularly defined and regularly audited through &lt;a href="http://aws.amazon.com/cloudtrail" target="_blank" rel="noopener noreferrer"&gt;AWS CloudTrail&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Implementing role-based access control&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;We used three different personas to implement role-based access control: an administrator with full access, a technical desk analyst with a medium level of access, and a technical agent with minimal access. We used OpenSearch Serverless collections to manage different access levels. Different call transcripts are ingested into different collections; this is to enable user access to the content they are authorized to based on their roles. A list of user IDs and their roles and allowed access are stored in a DynamoDB table along with the OpenSearch collection and index name.&lt;/p&gt; 
&lt;p&gt;We used the &lt;code&gt;authenticate.login&lt;/code&gt; method in a &lt;a href="https://streamlit.io/generative-ai" target="_blank" rel="noopener noreferrer"&gt;Streamlit&lt;/a&gt; authenticator to retrieve the user ID.&lt;/p&gt; 
&lt;h2&gt;User interface and agent experience&lt;/h2&gt; 
&lt;p&gt;We used Streamlit as a frontend framework to build the TECHNICAL HELP DESK, with access to the content controlled by the user’s role. The UI features an FAQ section displayed at the top of the main page and a search metrics insights section in the sidebar, as shown in the following screenshot.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-114884 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/20/image-4-2-1.png" alt="FAQ" width="843" height="400"&gt;&lt;/p&gt; 
&lt;p&gt;The UI includes the following components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Conversation section&lt;/strong&gt; – The conversation section contains interactions between the user and the help desk assistant. Users can provide feedback by choosing either the like or dislike button for each response received, as shown in the following screenshot. This feedback is persisted in a DynamoDB table.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113103" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/04/image-5-1.png" alt="" width="1216" height="592"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;User metrics insights &lt;/strong&gt;– As shown in the following screenshot, the sidebar contains metrics information, including: 
  &lt;ul&gt; 
   &lt;li&gt;Number of queries in the last week&lt;/li&gt; 
   &lt;li&gt;Number of total transcripts&lt;/li&gt; 
   &lt;li&gt;Number of transcripts added in the last week&lt;/li&gt; 
   &lt;li&gt;Number of helpful responses generated&lt;/li&gt; 
   &lt;li&gt;Number of dislikes&lt;/li&gt; 
   &lt;li&gt;Number of misses (no answer found)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113104" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/04/image-6-1.png" alt="" width="481" height="394"&gt;&lt;/p&gt; 
&lt;p&gt;These fields are updated asynchronously after each user query. Additional metrics are also stored, such as sentiment, tone of the speakers, nature of responses generated, and satisfaction percentage.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;FAQ &lt;/strong&gt;– The queries are stored in a DynamoDB table along with a query count column. When the help desk agent signs in, the queries with the most counts are displayed in this section, as shown in the following table.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table class="styled-table" border="1px" cellpadding="10px"&gt; 
 &lt;tbody&gt; 
  &lt;tr style="background-color: #000000"&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;&lt;strong&gt;Partition key&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;&lt;strong&gt;Sort key&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;&lt;span style="color: #ffffff"&gt;&lt;strong&gt;Global secondary index&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;Document name&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Questions&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Counter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px" rowspan="3"&gt;Microsoft Authenticator&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;Overview of MFA&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;What is TAP in MFA&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px"&gt;Common issues in MFA&lt;/td&gt; 
   &lt;td style="padding: 10px"&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The &lt;strong&gt;Counter&lt;/strong&gt; column is created as the global secondary index to retrieve the top five FAQs.&lt;/p&gt; 
&lt;p&gt;After the user submits a query, the technical help desk fetches the top similar items from the knowledge base. This is compared with the user’s query and, when a match is found, the &lt;strong&gt;Counter&lt;/strong&gt; column is incremented.&lt;/p&gt; 
&lt;h2&gt;Cache management&lt;/h2&gt; 
&lt;p&gt;We used the &lt;code&gt;st.cache_data()&lt;/code&gt; function in Streamlit to store the valid results in memory. The results are persisted across the user sessions.&lt;/p&gt; 
&lt;p&gt;The caching function employs an internal hashing mechanism that can be overridden if required. The cached data can be stored either in memory or on disk. Additionally, we can set the data persistence duration as needed for the use case. Cache invalidation or updates can be done when the data changes or after every hour. This, along with the FAQ section, has significantly enhanced performance of the technical help desk, creating faster response times and improving the user experience for customers and support agents.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this post, we showed you how we built a generative AI application to significantly reduce call handling times, automate repetitive tasks, and improve the overall quality of technical support.&lt;/p&gt; 
&lt;p&gt;The enterprise AI assistant from the &lt;a href="https://www.infosys.com/services/data-ai-topaz/offerings/agentic-foundry.htmly" target="_blank" rel="noopener noreferrer"&gt;Infosys Agentic Foundry&lt;/a&gt;, part of Infosys Topaz, now handles 70% of the previously human-managed calls. For the top 10 issue categories, average handling time has decreased from over 5 minutes to under 2 minutes, a 60% improvement. The continuous expansion of the knowledge base has reduced the percentage of issues requiring human intervention from 30–40% to 20% within the first 6 months after deployment.&lt;/p&gt; 
&lt;p&gt;Post-implementation surveys show a 30% increase in customer satisfaction scores related to technical support interactions.&lt;/p&gt; 
&lt;p&gt;To learn more about other solutions built with Amazon Bedrock and Infosys Topaz, see &lt;a href="https://aws.amazon.com/blogs/machine-learning/create-a-multimodal-assistant-with-advanced-rag-and-amazon-bedrock/" target="_blank" rel="noopener noreferrer"&gt;Create a multimodal assistant with advanced RAG and Amazon Bedrock&lt;/a&gt; and &lt;a href="https://www.infosys.com/services/data-ai-topaz/insights/advanced-rag-processing.pdf" target="_blank" rel="noopener noreferrer"&gt;Infosys Topaz Unlocks Insights with Advanced RAG Processing for Oil &amp;amp; Gas Drilling Data&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113288 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/meenakshi.jpeg" alt="" width="100" height="128"&gt;&lt;strong&gt;Meenakshi Venkatesan&lt;/strong&gt; is a Principal Consultant at Infosys and a part of the AWS Centre Of Excellence at Infosys Topaz. She helps design, develop, and deploy solutions in AWS environments and has interests in exploring the new offerings and services.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113287 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/karthikeyan.jpeg" alt="" width="100" height="130"&gt;&lt;strong&gt;Karthikeyan Senthilkumar&lt;/strong&gt;&amp;nbsp;is a Senior Systems Engineer at Infosys and a part of the AWS COE at iCETS. He specializes in AWS generative AI and database services.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113286 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/aninda.jpeg" alt="" width="100" height="103"&gt;&lt;strong&gt;Aninda Chakraborty&lt;/strong&gt;&amp;nbsp;is a Senior Systems Engineer at Infosys and a part of the AWS COE at iCETS. He specializes in generative AI and is passionate about leveraging technology to create innovative solutions that drive progress in this field.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113285 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Ashutosh-Dubey.png" alt="" width="100" height="123"&gt;&lt;strong&gt;Ashutosh Dubey&lt;/strong&gt; is an accomplished software technologist and Technical Leader at Amazon Web Services, where he specializes in Generative AI solutions architecture. With a rich background in software development and data engineering, he architects enterprise-scale AI solutions that bridge innovation with practical implementation. A respected voice in the tech community, he regularly contributes to industry discourse through speaking engagements and thought leadership on Generative AI applications, Data engineering, and ethical AI practices.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-113284 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/vishal.jpeg" alt="" width="100" height="133"&gt;Vishal Srivastava&lt;/strong&gt; is a Senior Solutions Architect with a deep specialization in Generative AI. In his current role, he collaborates closely with NAMER System Integrator (SI) partners, providing expert guidance to architect enterprise-scale AI solutions. Vishal’s expertise lies in navigating the complex landscape of AI technologies and translating them into practical, high-impact implementations for businesses. As a thought leader in the AI space, Vishal is actively engaged in shaping industry conversations and sharing knowledge. He is a frequent speaker at public events, webinars, and conferences, where he offers insights into the latest trends and best practices in Generative AI.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="wp-image-113283 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/dhiraj.jpeg" alt="" width="100" height="98"&gt;&lt;/strong&gt;&lt;strong&gt;Dhiraj Thakur &lt;/strong&gt;is a Solutions Architect with Amazon Web Services, specializing in Generative AI and data analytics domains. He works with AWS customers and partners to architect and implement scalable analytics platforms and AI-driven solutions. With deep expertise in Generative AI services and implementation, end-to-end machine learning implementation, and cloud-native data architectures, he helps organizations harness the power of GenAI and analytics to drive business transformation. He can be reached via &lt;a href="https://www.linkedin.com/in/dhiraj-thakur-14535632/" target="_blank" rel="noopener noreferrer"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Create personalized products and marketing campaigns using Amazon Nova in Amazon Bedrock</title>
		<link>https://aws.amazon.com/blogs/machine-learning/create-personalized-products-and-marketing-campaigns-using-amazon-nova-in-amazon-bedrock/</link>
					
		
		<dc:creator><![CDATA[Raechel Frick]]></dc:creator>
		<pubDate>Wed, 20 Aug 2025 21:50:24 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Nova]]></category>
		<category><![CDATA[CPG]]></category>
		<category><![CDATA[Generative AI]]></category>
		<category><![CDATA[Industries]]></category>
		<category><![CDATA[Marketing & Advertising]]></category>
		<category><![CDATA[Media & Entertainment]]></category>
		<category><![CDATA[Retail]]></category>
		<guid isPermaLink="false">cc357c896bdcc6f65850a3caf9cbb9e8681b6652</guid>

					<description>Built using Amazon Nova in Amazon Bedrock, The&amp;nbsp;Fragrance Lab represents a comprehensive end-to-end application that illustrates the transformative power of generative AI in retail, consumer goods, advertising, and marketing. In this post, we explore the development of The Fragrance Lab. Our vision was to craft a unique blend of physical and digital experiences that would celebrate creativity, advertising, and consumer goods while capturing the spirit of the French Riviera.</description>
										<content:encoded>&lt;p&gt;&lt;em&gt;This post was written with Jake Friedman from Wildlife.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Businesses are seeking innovative ways to differentiate themselves through hyper-personalization and enhanced customer experiences. At the Cannes Lions International Festival of Creativity 2025, AWS showcased &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/fragrance-lab/" target="_blank" rel="noopener noreferrer"&gt;The Fragrance Lab&lt;/a&gt;, an interactive and inspiring experience that demonstrates how generative AI can support the development of hyper-personalized consumer goods and accelerate advertising creative concept and campaign assets development. Following Cannes Lions 2025, The Fragrance Lab received a Gold and Silver Stevie Award from the &lt;a href="https://stevieawards.com/iba/event-category-winners" target="_blank" rel="noopener noreferrer"&gt;International Business Awards&lt;/a&gt; in the Brand &amp;amp; Experiences category.&lt;/p&gt; 
&lt;p&gt;Built using &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova&lt;/a&gt; in &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt;, The&amp;nbsp;Fragrance Lab represents a comprehensive end-to-end application that illustrates the transformative power of generative AI in retail, consumer goods, advertising, and marketing. While our activation at Cannes Lions focused on personalized fragrance development and ad campaign creation, the underlying architecture and methodology can be adapted across diverse categories, from fashion to food and beverage, opening endless possibilities for customized customer experiences.&lt;/p&gt; 
&lt;h2&gt;Introducing The Fragrance Lab&lt;/h2&gt; 
&lt;p&gt;In this post, we explore the development of The Fragrance Lab. Our vision was to craft a unique blend of physical and digital experiences that would celebrate creativity, advertising, and consumer goods while capturing the spirit of the French Riviera. To bring this vision to life, we collaborated with &lt;a href="http://wildlife.la" target="_blank" rel="noopener noreferrer"&gt;Wildlife&lt;/a&gt;, a company that is exceptional at transforming AWS generative AI services into compelling physical experiences. Wildlife was fundamental in&amp;nbsp;brainstorming ideas that would inspire customers and showcase novel use cases that AI makes possible.&lt;/p&gt; 
&lt;div style="width: 640px;" class="wp-video"&gt;
 &lt;video class="wp-video-shortcode" id="video-114313-2" width="640" height="360" preload="metadata" controls="controls"&gt;
  &lt;source type="video/mp4" src="https://d2908q01vomqb2.cloudfront.net/artifacts/DBSBlogs/ML-19120/FragranceLab_Social_Horizontal_compressed.mp4?_=2"&gt;
 &lt;/video&gt;
&lt;/div&gt; 
&lt;h3&gt;Crafting the fragrance&lt;/h3&gt; 
&lt;p&gt;As the first step, the experience used &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/speech/" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova Sonic&lt;/a&gt;, a speech-to-speech model that engages in intuitive dialogues with attendees to understand their personality and preferences. Nova Sonic extends its capabilities through tool integration, allowing it to manage user traits and interface actions through specialized tools such as &lt;code&gt;addTraitTool&lt;/code&gt;, &lt;code&gt;removeTraitTool&lt;/code&gt;, and &lt;code&gt;uiActionIntentTool&lt;/code&gt;. These tools help maintain conversation state and a consistent flow throughout the experience. The collected conversation data and trait information are then processed through a custom Retrieval Augmented Generation (RAG) system built with &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/understanding/" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova Pro&lt;/a&gt;, a highly capable multimodal model that offers our best combination of accuracy, speed, and cost. Nova Pro serves as the intelligence engine for analyzing interactions and extracting essential keywords to determine the perfect fragrance notes and composition. The application also used &lt;a href="https://aws.amazon.com/bedrock/guardrails/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Guardrails&lt;/a&gt;, which offers customizable safeguards and responsible AI policies to block undesirable topics—such as allergens or harmful content—to offer a seamless customer experience.&lt;/p&gt; 
&lt;p&gt;For example, a customer might share with Nova Sonic that they are interested in travel. Nova Pro picked up that exploring new places often “brings a sense of freshness and excitement,” which resulted in a fragrance that feels fresh and invigorating, featuring “a burst of citrus or a floral breeze.” The customer might also share that they enjoy early morning walks across spring fields, which Nova Pro translates into a top note of fresh bergamot, a middle note featuring floral honey, and a base of lavender.&amp;nbsp;The customers’ inputs guide the selection of fragrance notes—from base, to heart, to top notes—which were then expertly mixed by on-site perfumers to create truly personalized scents. Perfumers were able to customize and craft hundreds of unique fragrances per day, aided by AI. A process that would normally take hours for a perfumer was accelerated to minutes, empowering both the customer and the fragrance expert.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114316" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ML-19120-1.jpeg" alt="" width="1430" height="833"&gt;&lt;/p&gt; 
&lt;h3&gt;Creating the campaign&lt;/h3&gt; 
&lt;p&gt;After the personalized fragrance formula was created and sent to the perfumer queue, &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/creative/" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova Canvas&lt;/a&gt; generated customized marketing creative, including the fragrance name, tagline, and imagery that captured the essence of the formula. Attendees were able to further customize the campaign assets using guest inputs such as moody, beachy, or playful. The resulting fragrance image was then transformed into dynamic video content through &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/creative/" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova Reel&lt;/a&gt;, which customers could further customize to meet their creative vision and download to save or share. To match the Cannes Lions atmosphere, the campaign videos were generated with a French-accented female voice using &lt;a href="https://aws.amazon.com/polly/" target="_blank" rel="noopener noreferrer"&gt;Amazon Polly&lt;/a&gt;.&amp;nbsp;The entire experience is built in Amazon Bedrock, a fully managed service to build and scale generative AI applications with AI models.&lt;/p&gt; 
&lt;p&gt;The following data flow diagram shows how multiple Amazon Nova models can be combined for a rich, cohesive, and personalized customer experience.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114317" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ML-19120-2.png" alt="" width="2710" height="1417"&gt;&lt;/p&gt; 
&lt;h2&gt;Best practices for implementation&lt;/h2&gt; 
&lt;p&gt;The Fragrance Lab centers around interactions with Amazon Nova Sonic, providing users with a natural language interface to express their preferences for a custom scent. Through its tool integration capabilities, Nova Sonic orchestrates the entire experience by managing user traits and triggering appropriate workflows. These workflows seamlessly guide the experience from initial conversation to fragrance development and ultimately to campaign asset creation, driving both the visual elements and progression of the experience. The model’s ability to maintain a conversational state, while defining clear conversational flows, helps ensure a consistent and pleasant experience for every user.&lt;/p&gt; 
&lt;p&gt;A well-defined workflow and conversational assistant are pivotal in guiding these conversations to uncover the qualities that are most important to each user. And the system prompt determines the personality, style, and content of your conversational assistant.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt example:&lt;/strong&gt;&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;You are an AI assistant designed to help the user explore their personality and 
emotional landscape in the context of creating a unique fragrance. You engage in warm, 
free-flowing, playful conversation with the user to draw out their character, 
preferences, moods, and desires. Your end goal is to derive a set of 3 to 5 personality 
traits that best describe the user. These traits will later be used in a separate 
process to match appropriate fragrance ingredients. Your tone is warm, chic, and subtly 
playful.&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Additional contextual information within the prompt also plays a key role in Amazon Nova Sonic effectively maintaining state, while defining the conversational flow helps ensure consistent, pleasant, and concise experiences for every user.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt example:&lt;/strong&gt;&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;1. **Welcoming Users**
    Welcome the user to the application experience with a brief overview of the
    process and ask if they are ready to continue.
2. **Assistant Turns** 
    Ask short and unique open ended questions to the user and choose a personality trait 
    that you think would suit the user best.
3. **Handling User Turns**
    Acknowledge the user's answers briefly and warmly.
    Focus on one trait per turn.
    Call the "addTraitTool", "removeTraitTool", "replaceTraitTool", or "clearTraitsTool" 
    tools to manage traits.
    If the user says to go back, skip, customize, or confirm/submit it means you should 
    call the "uiActionIntentTool" &lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;With direct references to our tools in the conversational flow, the user interface feels reactive and connected to the user’s input while providing opportunities for the assistant to demonstrate its expertise on this subject, which comes into the spotlight when user traits and preferences are later mapped to a set of available ingredients and raw fragrance materials.&lt;/p&gt; 
&lt;p&gt;This complex fragrance recipe development is handled by Nova Pro, using its accuracy and speed to generate consistently high-quality scents. To draw from a wealth of fragrance knowledge in real time, RAG was implemented to extend Nova Pro capabilities beyond pre-trained knowledge with access to knowledge sources that include essential scent design principles, a deep understanding of each available ingredient, their profiles and potential roles within the fragrance, and their possible connections to users’ aromatic identities.&lt;/p&gt; 
&lt;p&gt;The resulting fragrances are then visualized using Nova Canvas and Nova Reel. The creative models generate original compositions that reveal the fragrance name, ingredients, and a visual identity within a high-end creative campaign asset. A set of conditioning images featuring unbranded fragrance bottles help to anchor each image (as shown in the following image).&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114320" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ML-19120-3.png" alt="" width="1429" height="363"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt example:&lt;/strong&gt;&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;A high-end fragrance ad environment inspired by a [persona description]. A clear, 
unbranded perfume bottle is visually centered and tightly framed. Key ingredients [top 
note ingredient], [middle note ingredient], [base note ingredient], and [booster 
ingredient] are arranged to surround the bottle in a balanced composition, appearing 
behind, besides, and partially in front of the base. The scene evokes [atmospheric/mood 
descriptors] using [light/color language]. The setting should feel [stylistic direction],
like a [reference style (e.g., fashion editorial, lifestyle spread, luxury campaign)].&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Results&lt;/h2&gt; 
&lt;p&gt;Attendees at Cannes Lions took away a physical fragrance mixed by&amp;nbsp;on-site perfumers. While developing hyper-personalized consumer goods might not be scalable across all use cases, brands can innovate with artificial intelligence and achieve manufacturing outcomes that weren’t previously possible. The advertising campaign concept and asset development use case is easy to implement for brands, agencies, and media networks, allowing users to iterate and optimize campaign creative quickly.&amp;nbsp;Using Amazon Bedrock, additional features could be added like translations and sizes, depending on requirements.&lt;/p&gt; 
&lt;p&gt;You can &lt;a href="https://www.youtube.com/watch?v=_rvYYWWWnUI&amp;amp;feature=youtu.be" target="_blank" rel="noopener noreferrer"&gt;watch a video walk through&lt;/a&gt; of The Fragrance Lab onsite at Cannes Lions 2025, and check out the following example campaign outputs.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-114464 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/TFL-Sample-Images.png" alt="" width="1293" height="571"&gt;&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;The Fragrance Lab demonstrates the power of Amazon Nova in Amazon Bedrock and how customers can create fully personalized consumer experiences. This use case can be replicated across various retail and consumer goods categories including skincare and cosmetics, fashion and accessories, food and beverage, home goods, and wellness products—all benefiting from natural conversation interaction, AI-powered product development, product identity, and creative marketing campaign generation. Get started with Amazon Nova in Amazon Bedrock today.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Raechel Frick&lt;/strong&gt;&amp;nbsp;is a Sr Product Marketing Manager at AWS. With over 20 years of experience in the tech industry, she brings a customer-first approach and growth mindset to building integrated marketing programs. Based in the greater Seattle area, Raechel balances her professional life with being a soccer mom and after-school carpool manager, demonstrating her ability to excel both in the corporate world and family life.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gaby Ferreres&lt;/strong&gt; is the Head of Industry Marketing for Media &amp;amp; Entertainment, Sports, Games, Advertising &amp;amp; Marketing at AWS, where she works with technology and industry leaders to accelerate innovation on behalf of customers. She is a global marketing leader and creator of experiences that elevate customer journeys. Before AWS, she held different positions at Microsoft, Telefonica, and more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Ashley Weston &lt;/strong&gt;is Sr. Marketing Event Manager for Global Third-Party Programs at AWS, where she partners with industry marketing to deliver the highest visibility and most business-critical events for AWS.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tiffany Pfremmer&lt;/strong&gt; is Sr. Industry Marketing Manager at Amazon Web Services (AWS) where she leads strategic integrated marketing initiatives across the Media &amp;amp; Entertainment, Games, and Sports verticals to deliver marketing campaigns that connect AWS cloud solutions with customer opportunities.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Jake Friedman &lt;/strong&gt;is the President and Co-founder at Wildlife, where he leads a team launching interactive experiences and content campaigns for global brands. His work has been recognized with the Titanium Grand Prix at the Cannes Lions International Festival of Creativity for “boundary-busting, envy-inspiring work that marks a new direction for the industry and moves it forward”. You can find him on &lt;a href="https://www.linkedin.com/in/jakefriedman/" target="_blank" rel="noopener noreferrer"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About Wildlife&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.wildlife.la/" target="_blank" rel="noopener noreferrer"&gt;Wildlife&lt;/a&gt; fuses a digitally born skillset with a future proof mindset to deliver breakthrough products, experiences and campaigns for daring partners. We live by a motto: Technology changes, story doesn’t.&lt;/p&gt;</content:encoded>
					
					
			
		
		<enclosure length="113356345" type="video/mp4" url="https://d2908q01vomqb2.cloudfront.net/artifacts/DBSBlogs/ML-19120/FragranceLab_Social_Horizontal_compressed.mp4"/>

			</item>
		<item>
		<title>Tyson Foods elevates customer search experience with an AI-powered conversational assistant</title>
		<link>https://aws.amazon.com/blogs/machine-learning/tyson-foods-elevates-customer-search-experience-with-an-ai-powered-conversational-assistant/</link>
					
		
		<dc:creator><![CDATA[Anveshi Charuvaka]]></dc:creator>
		<pubDate>Wed, 20 Aug 2025 21:44:28 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Bedrock Knowledge Bases]]></category>
		<category><![CDATA[Amazon OpenSearch Service]]></category>
		<category><![CDATA[CPG]]></category>
		<category><![CDATA[Customer Solutions]]></category>
		<category><![CDATA[Experience-Based Acceleration]]></category>
		<guid isPermaLink="false">063916dbcd88c0a92ab97ec47ed03720b8dc55a3</guid>

					<description>In this post, we explore how Tyson Foods collaborated with the AWS Generative AI Innovation Center to revolutionize their customer interaction through an intuitive AI assistant integrated into their website. The AI assistant was built using Amazon Bedrock,</description>
										<content:encoded>&lt;p&gt;&lt;a href="https://www.tysonfoodservice.com/" target="_blank" rel="noopener noreferrer"&gt;Tyson Foodservice&lt;/a&gt; operates as a critical division within &lt;a href="https://www.tysonfoods.com/" target="_blank" rel="noopener noreferrer"&gt;Tyson Foods Inc.&lt;/a&gt;, using its extensive protein production capabilities to supply a diverse array of foodservice clients across multiple sectors. As one of the largest protein providers in the US, Tyson Foods produces approximately 20% of the nation’s beef, pork, and chicken, which forms the foundation of its foodservice offerings.&lt;/p&gt; 
&lt;p&gt;Tyson Foodservice operates through a B2B model, selling products to distributors rather than directly to end consumers, while serving diverse foodservice operators, including restaurants, schools, healthcare facilities, and convenience stores. Until recently, Tyson had limited direct engagement with over 1 million unattended operators who purchased their products through distributors without direct company relationships. To bridge this gap, Tyson has implemented a generative AI assistant on their website, enabling them to scale sales efforts, gather customer insights, and establish direct communication channels. The company’s website now functions as a critical interface where operators can explore products, access menu trends, and discover tailored solutions for their specific foodservice segments, all enhanced by AI-driven personalization that better serves both established customers and previously unattended operators.&lt;/p&gt; 
&lt;p&gt;In this post, we explore how Tyson Foods collaborated with the &lt;a href="https://aws.amazon.com/ai/generative-ai/innovation-center/" target="_blank" rel="noopener noreferrer"&gt;AWS Generative AI Innovation Center&lt;/a&gt; to revolutionize their customer interaction through an intuitive AI assistant &lt;a href="https://www.tysonfoodservice.com/" target="_blank" rel="noopener noreferrer"&gt;integrated into their website&lt;/a&gt;. The AI assistant was built using &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt;, a fully managed service that offers a choice of high-performing foundation models (FMs) from leading AI companies like AI21 Labs, Anthropic, Cohere, Meta, Mistral AI, Stability AI, and Amazon through a single API, along with a broad set of capabilities to build generative AI applications with security, privacy, and responsible AI.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-112992 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/01/tyson-bp-image-1.jpeg" alt="Tyson FoodService AI chat assistant interface" width="1243" height="916"&gt;&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;In this section, we describe the overall architecture of the solution. The workflow includes the following high-level steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A user uses the search bar in &lt;a href="https://www.tysonfoodservice.com/" target="_blank" rel="noopener noreferrer"&gt;https://www.tysonfoodservice.com/&lt;/a&gt;. The query string is converted to embeddings using Amazon Bedrock and the &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/titan-embedding-models.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Titan Text Embeddings model&lt;/a&gt;. The search application performs a k-nearest neighbors (k-NN) vector search to find relevant results in &lt;a href="https://aws.amazon.com/opensearch-service/features/serverless/" target="_blank" rel="noopener noreferrer"&gt;Amazon OpenSearch Serverless&lt;/a&gt; and return those results to the website. The search application is deployed in &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Elastic Container Service&lt;/a&gt; (Amazon ECS) using &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html" target="_blank" rel="noopener noreferrer"&gt;AWS Fargate&lt;/a&gt; as the capacity provider and exposed as a REST API using an &lt;a href="https://aws.amazon.com/elasticloadbalancing/application-load-balancer/" target="_blank" rel="noopener noreferrer"&gt;Application Load Balancer&lt;/a&gt; protected by &lt;a href="https://aws.amazon.com/waf/" target="_blank" rel="noopener noreferrer"&gt;AWS WAF&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The user uses the AI assistant interface to ask questions in natural language. The query is processed by the agent node using &lt;a href="https://aws.amazon.com/bedrock/claude/" target="_blank" rel="noopener noreferrer"&gt;Anthropic’s Claude 3.5 Sonnet&lt;/a&gt; on Amazon Bedrock. Depending on the subject of the query, the agent might orchestrate multiple agents to return relevant information to the user. The application is deployed using a similar architecture to the semantic search component with the addition of an &lt;a href="https://aws.amazon.com/rds/" target="_blank" rel="noopener noreferrer"&gt;Amazon Relational Database Service&lt;/a&gt; (Amazon RDS) database cluster to persist the user high-value actions for analytics purposes.&lt;/li&gt; 
 &lt;li&gt;Products, recipes, ingredients and other relevant data are available from external sources in JSON format. These are processed using Amazon Bedrock and the Amazon Titan Text Embeddings model to create semantic search embeddings. Then these are ingested into OpenSearch Serverless. The ingestion process run in a different ECS cluster using Fargate as the capacity provider.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The following diagram illustrates this architecture.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-112991 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/01/tyson-bp-image-2.png" alt="Tyson FoodService AI assistant architecture" width="1046" height="674"&gt;&lt;/p&gt; 
&lt;p&gt;In the following sections, we discuss the solution’s key components and benefits in more detail.&lt;/p&gt; 
&lt;h2&gt;Improved semantic search&lt;/h2&gt; 
&lt;p&gt;The earlier iteration of search on the Tyson Foodservice website relied on keyword-based search. Traditional keyword-based search on CPG websites like Tyson Foodservice often falters when customers search for products using industry terminology that varies from official catalog descriptions. Chefs searching for “pulled chicken” might miss relevant products labeled as “shredded chicken,” or those looking for “wings” might not see results for “party wings” or “drummettes.” This disconnect frustrates food service professionals who need specific ingredients under tight deadlines and ultimately drives them to competitors where they can more quickly find what they need, resulting in lost revenue opportunities for Tyson. Semantic search transforms this experience by understanding the conceptual relationships between culinary terms, preparation methods, and product applications. A chef searching for “buffalo-style appetizers” would receive results for wings, boneless bites, and similar products regardless of exact keyword matches. By recognizing menu trends, cooking techniques, and professional kitchen terminology, semantic search helps foodservice operators quickly find the Tyson products that meet their exact operational needs, even when using language that differs from catalog descriptions.&lt;/p&gt; 
&lt;p&gt;Tyson Foodservice implemented their semantic search capability using OpenSearch Serverless, a fully managed service that minimized the operational complexity of maintaining search infrastructure. This solution automatically scales compute and storage resources to match query volume and product catalog size without requiring dedicated administrative overhead. The serverless architecture helped Tyson rapidly deploy advanced natural language processing capabilities across their entire product database while maintaining cost-efficiency, because they only pay for the resources they actually use. With OpenSearch Serverless, Tyson incorporated vector embeddings and powerful query capabilities that understand foodservice terminology variations, preparation methods, and culinary applications, transforming how operators discover products that meet their specific needs even when their search terms don’t exactly match catalog descriptions.&lt;/p&gt; 
&lt;p&gt;For indexing Tyson’s diverse content library of products, recipes, and articles, we implemented a preprocessing workflow that transforms raw metadata into optimized semantic search queries. We used large language models (LLMs) to analyze and extract only the most relevant elements from each content piece, creating meaningful search strings specifically designed for semantic indexing. This approach made sure that purely presentational website copy and non-essential informational text were filtered out, and search-critical elements like culinary applications, preparation methods, and ingredient specifications received proper emphasis in the index. By curating what content gets indexed rather than including everything verbatim, we dramatically improved search relevance while reducing index bloat, so OpenSearch Serverless delivered more precise results that truly match the intent behind chef and operator queries. For indexing the text as semantic vectors, we used Amazon Titan Text Embeddings V2 on Amazon Bedrock.&lt;/p&gt; 
&lt;p&gt;The following example prompt illustrates the transformation using only the title, description, and reasons to buy metadata. This generic strategy can be customized according to the customer’s specific needs.&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;SEARCH_STRING_PROMPT = """ Given a product title, description, and reasons to
buy, create a single, concise search string suitable for indexing in a vector
database. This string should focus on distinguishing features, assuming all
products are for foodservice operators unless explicitly stated otherwise.
Enclose the generated search string within &amp;lt;search_string&amp;gt; XML tags. 

Follow these guidelines:
1. Start with the brand name and product line (if applicable).
2. Include the main product type and specific identifying features.
3. List concrete attributes such as preparation state, packaging, or quantity.
4. Mention specific varieties or assortments included in the product.
5. Incorporate key points from the reasons to buy, focusing on unique and
   specific selling points.
6. Avoid generic terms or those common to all products in the category (e.g.,
   "food service", "restaurant", "operator").
7. Omit cliché marketing terms (e.g., "versatile", "high-quality", "innovative")
   unless they have a specific, demonstrable meaning in the context of the
   product.
8. Use precise descriptors that differentiate the product from others in its
   category.
9. Omit articles (a, an, the) and unnecessary connecting words.
10. Use lowercase for all terms except proper nouns.
11. Separate terms with single spaces.
12. Aim for a length of 15-20 words.
13. Prioritize terms that potential buyers are most likely to use in specific
    search queries.
    
Example input:
&amp;lt;title&amp;gt;Tyson® Heritage Valley™ IF Unbreaded 8 Piece Cut Chicken&amp;lt;/title&amp;gt;
&amp;lt;description&amp;gt;Order a variety of crispy, seasoned chicken cuts with 
Heritage Valley™ Uncooked, Ice Glazed 8 Piece Cut Chicken. Featuring an 
assortment of breasts, drumsticks, thighs and wings, our chicken portions 
are completely customizable and perfect for center-of-plate features. 
Separately packaged for quick and easy preparation and portion control, 
our packaging helps your staff reduce waste by allowing them to use what 
they need, when they need. Ready to cook from frozen, simply fry and 
serve as an assortment for a buffet protein choice.
&amp;lt;/description&amp;gt;
&amp;lt;reasons_to_buy&amp;gt;
['Bone-in assortment of breasts, drumsticks, thighs and wings.', 
'Individually quick frozen, locking in natural juices and tenderness.', 
'Different cuts separately bagged for quick and easy preparation and cleanup.', 
'Ready to cook from frozen.']
&amp;lt;/reasons_to_buy&amp;gt;

Example output: &amp;lt;search_string&amp;gt;tyson heritage valley unbreaded raw 8-piece
chicken bone-in breasts drumsticks thighs wings individually-frozen
separate-bags cook-from-frozen juicy center-of-plate&amp;lt;/search_string&amp;gt;

Now, create a similar search string for the following product:
&amp;lt;title&amp;gt;{title}&amp;lt;/title&amp;gt;
&amp;lt;description&amp;gt;{description}&amp;lt;/description&amp;gt;
&amp;lt;reasons_to_buy&amp;gt;{reasons_to_buy}&amp;lt;/reasons_to_buy&amp;gt;
"""
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Agentic chat built using Anthropic’s Claude 3.5 Sonnet on Amazon Bedrock and LangGraph&lt;/h2&gt; 
&lt;p&gt;Tyson Foodservice has integrated a powerful generative AI assistant into their website, using Anthropic’s Claude 3.5 Sonnet on Amazon Bedrock and &lt;a href="https://www.langchain.com/langgraph" target="_blank" rel="noopener noreferrer"&gt;LangGraph&lt;/a&gt;. This AI assistant delivers a seamless conversational search experience that offers comprehensive support across Tyson’s extensive range of products, recipes, and articles, providing contextual guidance through natural conversation. Its capabilities include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Personalized search&lt;/strong&gt; – Uses semantic search to find relevant products, recipes, and articles. The AI assistant customizes recommendations by learning about the user’s business and role, creating a tailored experience while gathering valuable customer insights for Tyson.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Detailed product information&lt;/strong&gt; – Provides comprehensive details about specific Tyson products, including descriptions, ingredients, preparation methods, and suggested applications.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributor services&lt;/strong&gt; – Helps users locate nearby distributors and check product availability in their area.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Purchasing assistance&lt;/strong&gt; – Offers information on how to buy Tyson products and connects customers with sales representatives when needed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Promotion awareness&lt;/strong&gt; – Keeps customers informed about current Tyson Foodservice promotions and special offers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feedback channel&lt;/strong&gt; – Provides a streamlined way for customers to submit product and service feedback directly to Tyson.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Natural conversational flow&lt;/strong&gt; – Maintains context throughout the interaction, allowing users to reference previous results and ask follow-up questions for a more human-like conversation experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following diagram illustrates the high-level architecture of the AI assistant. The system uses the tool calling capabilities of Anthropic’s Claude to implement the AI assistant’s agentic behavior. We used LangGraph to streamline the implementation process, because it provides several convenient primitives specifically designed for building agentic systems with LLMs.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-112990 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/01/tyson-bp-image-3.jpeg" alt="Tyson Food Services agentic chat tool calling" width="621" height="508"&gt;&lt;/p&gt; 
&lt;p&gt;The main components of the architecture are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Agent node&lt;/strong&gt; – The agent node is implemented using a large prompt that directly receives the user message and responds using the conversational capabilities of the LLM. It also defines the agentic behavior by using the tool calling capability: whenever serving the user’s request requires calling a tool, the agent node issues a tool request.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tool execution node &lt;/strong&gt;– This node implements a generic tool executor that connects to various tools. Whenever a tool call is issued by the agent node, this node handles the execution of the tool call. The tool calling node executes the tools, which are defined as Python functions, and returns the results to the agent node to be transformed or summarized and presented to the user. LangGraph provides a generic implementation of the &lt;a href="https://langchain-ai.github.io/langgraph/how-tos/tool-calling/" target="_blank" rel="noopener noreferrer"&gt;ToolNode&lt;/a&gt; that can also be extended to implement additional functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tools layer &lt;/strong&gt;– Tools are implemented as simple programmatic functions that take inputs and return outputs. These tools augment the capabilities of LLMs by performing functions like retrieving data or submitting feedback. The tools are stateless and agnostic to the current conversation between the user and agent. The LLM agent extracts the input parameters required to execute these tools. These tools in our implementation are a thin wrapper around the services and database layer that implement the actual functionality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following system prompt provides a general guidance for implementing the agent node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="lang-python"&gt;import date

AGENT_SYSTEM_PROMPT = """
# Tyson Foodservice (TFS) Customer Support Assistant

## Core Role and Purpose
You are a helpful customer support assistant for Tyson Foodservice a.k.a TFS
hosted on their https://www.tysonfoodservice.com/ website.  You will be helpful
and answer the customers questions. The customers are mainly interested in
learning about the products for their specific needs.
Refrain from engaging in any conversation unrelated to tyson food search of
products, recipes or distributors. If the user asks any unrelated questions the
politely decline and mention your purpose. Do not provide and additional
information or advice.
 
Your job is to stay factual and only provide relevant information from the
current context or retrieved using the tools. Do not offer your own suggestions.
Customers are looking for concrete information that is available in the Tyson
Foodservice database.

## About Tyson Foodservice
Tyson Foods is a major American multinational corporation and one of the world's
largest processors and marketers of chicken, beef, and pork.

### Distributors
Tyson foods mainly sells their products through distributors and does not sell
them directly. Each distributor is identified by a unique identifier named
distributor_id which is used as parameters for the tools, do not use the
distributor name as query parameter.

### Foodservice Operators
Foodservice Operators, or simply Operators, are Tyson Foods' primary customers.
These encompass diverse businesses in the foodservice sector, each with unique
needs. Understanding the distinct personas of various Operator types is crucial
for Tyson Foods to:
- Tailor product offerings effectively
- Develop targeted marketing strategies
- Create relevant recipe suggestions
- Address specific operational challenges
By analyzing different Operator segments (e.g., quick-service restaurants, fine
dining, educational institutions, healthcare facilities), Tyson Foods can
customize its products, offer innovative menu solutions, and provide value-added
services. This approach positions Tyson Foods as a strategic partner, driving
growth and maintaining competitiveness in the foodservice industry.

## Using Tools
You will be provide a variety of tools to perform your job, use them wisely and
ask the customer for relevant information that they have not provided. E.g. if
the search tool requires persona and the customer has not provided it then ask
the customer.
- Do not explicitly declare the tools to the users as the users are not aware of
  the internal workings of the tools.
- Do not try to intrepret the results of the search tool and show them as it is
  to the user.
- Operators may have their preferred distributor they buy from so let them
  confirm or select their distributor before checking for availability of
  products.
- Customers might sometimes search for things that are not available in tyson
  food catalog. If the search did not produce any results then just inform the
  user and do not suggest any external sources.
- When trying to determine the parameters for a tool, do not infer them from
  other parameters. E.g. do not infer the User's name from their email.
  Explicitly ask for the name.
- If the users complain or praise the chatbot then you can ask for their
  feedback in the chatbot and use the `submit_feedback` tool to submit the
  feedback. Ask the user to provide the relevant contact information.

## Product, Recipes, and Articles Search
Search functionality is a critical tool on Tyson's website, allowing users to
find products, recipes, and articles. It enables searches across three main
entity types:
- **Products**: The core offerings of Tyson Foods. These are identified by a
  unique GTIN (Global Trade Item Number).
- **Recipes**: Culinary ideas provided by Tyson Foods to encourage product use.
  Each recipe incorporates one or more Tyson products.
- **Articles**: Informative content on various topics, created by Tyson Foods
  for their customers.
- Do not provide any items or suggestions outside of the ones that are found
  through search.
- When the user asks to for details or a product or compare two or more
  products, retrieve the details of the products first using the tools to get
  product details.
- While users of the site are mainly looking for products, they might also be
interested in recipes and articles so it's important to not omit them when
displaying the search results.

### User Profile or Persona
In order to serve the user's better, the search tool can accept the user's
persona as an input. User profile or persona is a concise description of the
type of role that a user performs in the foodservice industry. A few examples
of persona are
- Restaurant owners looking to optimize costs
- Chef looking for unique ingredients
- K12 operators looking for healthy menu items
They can also be simple roles if the user has not provided any additional
information. Examples are
- Restaurant owner
- Chef
- Hotel Manager
The user persona should not include the search query that they are using for
finding products E.g. these are not good personas
- Restaurant owner looking for chicken nuggets
The above is not a good persona because it includes the product

### Search query string
Search queries should be simple and specific to the products or recipes and
should not contain the operator information
Here are some examples: 
- Instead of "healthy chicken wings for K12" use "chicken wings"
- Instead of "mexican beef patties for Deli operation" use "mexican beef
  patties"

### Product Results Display 
When listing the product results, always display them in the following format as
a numbered list. This will be displayed in the UI using markdown. 
1. **Title**
- GTIN
- description - This is a brief description
- [Product Page](Product url link)

### Recipes Results Display
When displaying recipes. Display the following
1. **Title**
- description - This is a brief description
- [Recipe Page](Recipe url link)

## Contact or provide feedback
- If the users want to reach out to Tyson foods team then they can use the form
  using this link [Contact
  Us](https://www.tysonfoodservice.com/connect/contact-us) 
- Users can submit their feedback using the chatbot using tools. When submitting
  feedback to Tyson extract user's message verbatim and do not rephrase it.

## How to buy
If the user wants to buy a product then they have two options. 
1. through distributor (preferred option)
2. reaching out to tysons sales representative by filling a form
If the user has not already indicated their preference then present these two
options. 
When the user asks for ordering information you do not need to retrieve all the
product details again, only specify the title of the product and be concise with
the details.

### Order through distributor
If they user is interested in buying through a distributor then let them
identify their preferred distributor and then for a specific product or products
they have identified provide the ordering link obtained through the user of
appropriate tool. Also help them check if a product is available with their
distributor.

### Find a tyson Sales Rep
If the user is not interested in a purchasing through a distributor then direct
them to submit a form through this link which will submit their information to a
sales team and someone will reach out to them. Here is the link to the form
&lt;a href="https://www.tysonfoodservice.com/connect/find-a-sales-rep" rel="noopener noreferrer"&gt;https://www.tysonfoodservice.com/connect/find-a-sales-rep&lt;/a&gt; 

Current date (YYYY-MM-DD): """ + date.today().strftime("%Y-%m-%d") + "\n" 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Capturing high-value actions: Turning conversations into insights&lt;/h2&gt; 
&lt;p&gt;In designing Tyson Foodservice’s AI assistant, we implemented an innovative solution for capturing high-value actions that transforms customer interactions into strategic business intelligence. This capability provides deeper contextual understanding of customer interests and needs than traditional web analytics. Whereas conventional analytics tools track user behavior through page views, clicks, and time-on-site metrics, our solution uses the rich conversational data generated through natural dialogue. This provides Tyson with unprecedented visibility into customer interests, pain points, and purchase intentions.&lt;/p&gt; 
&lt;p&gt;The system identifies and logs specific high-value interactions whenever users request detailed product information, inquire about specific product categories, ask about preparation methods or recipe ideas, seek distributor information in their region, or express interest in bulk purchasing or promotions. This approach creates a powerful feedback loop for Tyson Foodservice. As customers naturally express their needs and interests through conversation, the system captures these signals in an aggregate, privacy-respecting manner. Tyson can use these insights to identify trending product categories and potential gaps in their portfolio, understand regional variations in customer interests, recognize seasonal patterns in product inquiries, refine marketing strategies based on direct customer language, and improve inventory management through better demand forecasting. The technical implementation uses the tool-calling capabilities of Anthropic’s Claude 3.5 Sonnet in a straightforward but effective way. Rather than analyzing chat logs after the fact, we integrated the capture mechanism directly into the AI assistant’s operational workflow through LangGraph, allowing for real-time insight collection during customer interactions. When the LLM invokes certain tools to retrieve information requested by users, these tool calls simultaneously trigger the capture of high-value action data. We’ve designed a configurable system where specific tools are designated as high-value action triggers that record meaningful interactions while fulfilling the user’s immediate request.This dual-purpose approach makes sure that valuable business intelligence is gathered as a natural byproduct of providing excellent customer service, without requiring additional processing or analysis steps. The system includes configurable parameters that allow Tyson to adjust which user intents and actions qualify as high value based on evolving business priorities. By transforming every customer conversation into structured, actionable data, Tyson Foodservice can now measure customer interest with unprecedented precision while delivering a superior search experience that feels natural to users.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this post, we demonstrated a powerful approach to implementing natural conversational AI assistants that seamlessly integrate with existing website functionalities and provide intuitive language interactions for users. By using Amazon Bedrock FMs and OpenSearch Serverless, businesses can quickly expose their website’s capabilities through conversation rather than complex interfaces. The high-value action capture mechanism further enhances this solution by gathering valuable customer insights directly from natural interactions, creating a rich source of business intelligence without additional user friction. This framework provides a flexible blueprint for implementing AI-powered assistants across retail and CPG websites. Organizations can adapt this approach to their specific needs, such as product discovery, customer support, or personalized recommendations. The combination of semantic search with conversational AI creates experiences that understand user intent while maintaining the context necessary for natural dialogue.&lt;/p&gt; 
&lt;p&gt;If you’re interested in building a similar AI assistant that orchestrates multiple tools, you can get started with &lt;a href="https://aws.amazon.com/bedrock/agents/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Agents&lt;/a&gt;, a fully managed AWS solution designed specifically for this purpose. Amazon Bedrock Agents simplifies the process of creating, testing, and deploying conversational experiences that can execute complex tasks across your business systems. With the right architecture and implementation approach demonstrated in this post, you can develop AI-powered interactions that deliver measurable business value while significantly enhancing your customer journey.&lt;/p&gt; 
&lt;p&gt;For developers exploring AI agent frameworks today, AWS recently introduced &lt;a href="https://aws.amazon.com/blogs/opensource/introducing-strands-agents-an-open-source-ai-agents-sdk/" target="_blank" rel="noopener noreferrer"&gt;Strands Agents&lt;/a&gt;, an open source SDK that takes a model-driven approach to building agents with just a model, tools, and a prompt. Unlike workflow-based frameworks, Strands adopts a model-first philosophy that uses advanced reasoning capabilities, offering an interesting alternative approach to frameworks like LangGraph.&lt;/p&gt; 
&lt;p&gt;Try out these solutions for your own use case, and share your feedback in the comments.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-113447 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/anveshi.jpeg" alt="" width="100" height="100"&gt; Anveshi Charuvaka &lt;/strong&gt;is a Senior Applied Scientist at AWS’s Generative AI Innovation Center, where he partners with customers to turn Generative AI into solutions for mission-critical business problems. He holds a PhD in Machine Learning and brings over 10 years of experience applying innovative ML and GenAI techniques to complex, real-world challenges.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-full wp-image-113448 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/barret.jpg" alt="" width="100" height="100"&gt;&lt;strong&gt;Barret Miller&lt;/strong&gt; leads the Digital Enterprise Organization at Tyson Foods, where he spearheads progress in emerging technologies, artificial intelligence, and Smart Office initiatives. With more than 17 years of expertise in software development, data, analytics, and AI, Barret excels at leveraging innovative technology paradigms, including Agentic AI, to tackle and enhance complex business processes.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-full wp-image-113451 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/vincil.png" alt="" width="100" height="100"&gt; &lt;strong&gt;Vincil Bishop&lt;/strong&gt; is a Senior Deep Learning Architect in the Generative AI Innovation Center. Vincil has 25 years of experience in the IT industry and holds a PhD in Systems Engineering from Colorado State University. Vincil specializes in the design and implementation of AI solutions that help solve customers’ toughest business challenges.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-full wp-image-113450 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/tes.png" alt="" width="100" height="100"&gt; &lt;strong&gt;Tesfagabir Meharizghi&lt;/strong&gt; is an Applied Scientist at the AWS Generative AI Innovation Center, where he leads projects and collaborates with enterprise customers across various industries to leverage cutting-edge generative AI technologies in solving complex business challenges. He specializes in identifying and prioritizing high-impact use cases, developing scalable AI solutions, and fostering knowledge-sharing partnerships with stakeholders.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-full wp-image-113449 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/tanay.png" alt="" width="100" height="100"&gt;&amp;nbsp; &lt;strong&gt;Tanay Chowdhury&lt;/strong&gt; is a Data Scientist at Generative AI Innovation Center at Amazon Web Services who helps customers solve their business problems using generative AI and machine learning. He has done MS with Thesis in Machine Learning from University of Illinois and has extensive experience in solving customer problem in the field of data science.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-medium wp-image-113459 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/angona.jpg" alt="" width="100" height="133"&gt; &lt;strong&gt;Angel Goni&lt;/strong&gt; is a Principal Solutions Architect at AWS with 15+ years of IT experience across the Financial Services, Retail, and Consumer Packaged Goods sectors. Angel specializes in utilizing cloud technology to impact business KPIs, with particular expertise in multicloud strategies, SAP migrations, and supply chain improvement.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Enhance AI agents using predictive ML models with Amazon SageMaker AI and Model Context Protocol (MCP)</title>
		<link>https://aws.amazon.com/blogs/machine-learning/enhance-ai-agents-using-predictive-ml-models-with-amazon-sagemaker-ai-and-model-context-protocol-mcp/</link>
					
		
		<dc:creator><![CDATA[Saptarshi Banerjee]]></dc:creator>
		<pubDate>Wed, 20 Aug 2025 20:26:08 +0000</pubDate>
				<category><![CDATA[Advanced (300)]]></category>
		<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Machine Learning]]></category>
		<category><![CDATA[Amazon SageMaker AI]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Generative AI]]></category>
		<category><![CDATA[AI/ML]]></category>
		<category><![CDATA[Amazon SageMaker]]></category>
		<guid isPermaLink="false">6e3e7620c7486a30cc17e6b1991f6f9d4b44a9e3</guid>

					<description>In this post, we demonstrate how to enhance AI agents’ capabilities by integrating predictive ML models using Amazon SageMaker AI and the MCP. By using the open source Strands Agents SDK and the flexible deployment options of SageMaker AI, developers can create sophisticated AI applications that combine conversational AI with powerful predictive analytics capabilities.</description>
										<content:encoded>&lt;p&gt;&lt;a href="https://aws.amazon.com/ai/machine-learning/" target="_blank" rel="noopener noreferrer"&gt;Machine learning&lt;/a&gt; (ML) has evolved from an experimental phase to becoming an integral part of business operations. Organizations now actively deploy ML models for precise sales forecasting, customer segmentation, and churn prediction. While traditional ML continues to transform business processes, &lt;a href="https://aws.amazon.com/generative-ai/" target="_blank" rel="noopener noreferrer"&gt;generative AI&lt;/a&gt; has emerged as a revolutionary force, introducing powerful and accessible tools that reshape customer experiences.&lt;/p&gt; 
&lt;p&gt;Despite generative AI’s prominence, traditional ML solutions remain essential for specific predictive tasks. Sales forecasting, which depends on historical data and trend analysis, is most effectively handled by established ML algorithms including random forests, gradient boosting machines (like XGBoost), autoregressive integrated moving average (ARIMA) models, long short-term memory (LSTM) networks, and linear regression techniques. Traditional ML models, such as K-means and hierarchical clustering, also excel in customer segmentation and churn prediction applications. Although generative AI demonstrates exceptional capabilities in creative tasks such as content generation, product design, and personalized customer interactions, traditional ML models maintain their superiority in data-driven predictions. Organizations can achieve optimal results by using both approaches together, creating solutions that deliver accurate predictions while maintaining cost efficiency.&lt;/p&gt; 
&lt;p&gt;To achieve this, we showcase in this post how customers can expand AI agents’ capabilities by integrating predictive ML models and &lt;a href="https://modelcontextprotocol.io/introduction" target="_blank" rel="noopener noreferrer"&gt;Model Context Protocol (MCP)&lt;/a&gt;—an open protocol that standardizes how applications provide context to &lt;a href="https://aws.amazon.com/what-is/large-language-model/" target="_blank" rel="noopener noreferrer"&gt;large language models&lt;/a&gt; (LLMs)—on &lt;a href="https://aws.amazon.com/sagemaker-ai" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker AI&lt;/a&gt;. We demonstrate a comprehensive workflow that enables AI agents to make data-driven business decisions by using ML models hosted SageMaker. Through the use of &lt;a href="https://strandsagents.com/" target="_blank" rel="noopener noreferrer"&gt;Strands Agents SDK&lt;/a&gt;—an open source SDK that takes a model-driven approach to building and running AI agents in only a few lines of code—and flexible integration options, including direct endpoint access and MCP, we show you how to build intelligent, scalable AI applications that combine the power of conversational AI with predictive analytics.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;This solution enhances AI agents by having ML models deployed on Amazon SageMaker AI endpoints integrate with AI Agents, to enable them to make data-driven business decisions through ML predictions. An AI agent is an LLM-powered application that uses an LLM as its core “brain” to autonomously observe its environment, plan actions, and execute tasks with minimal human input. It integrates reasoning, memory, and tool use to perform complex, multistep problem-solving by dynamically creating and revising plans, interacting with external systems, and learning from past interactions to optimize outcomes over time. This enables AI agents to go beyond simple text generation, acting as independent entities capable of decision-making and goal-directed actions in diverse real-world and enterprise scenarios.For this solution, the AI agent is developed using the Strands Agents SDK, which allows for rapid development from simple assistants to complex workflows. Predictive ML models are hosted on Amazon SageMaker AI and will be used as tools by the AI agent. This can happen in two ways: agents can directly invoke SageMaker endpoints for more direct access to model inference capabilities or use the MCP protocol to facilitate the interaction between AI agents and the ML models. Both options are valid: direct tool invocation doesn’t require additional infrastructure by embedding the tool calling directly in the agent code itself, whereas MCP enables dynamic discovery of the tools and decoupling of agent and tool execution through the introduction of an additional architectural component, the MCP server itself. For scalable and secure implementation of the tool calling logic, we recommend the MCP approach. Although we’re recommending MCP, we discuss and implement the direct endpoint access as well, to give readers the freedom to choose the approach that they prefer.&lt;/p&gt; 
&lt;p&gt;Amazon SageMaker AI offers two methods to host multiple models behind a single endpoint: inference components and multi-model endpoints. This consolidated hosting approach enables efficient deployment of multiple models in one environment, which optimizes computing resources and minimizes response times for model predictions. For demonstration purposes, this post deploys only one model on one endpoint. If you want to learn more about inference components, refer to the Amazon SageMaker AI documentation &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/realtime-endpoints-deploy-models.html#deployed-shared-utilization" target="_blank" rel="noopener noreferrer"&gt;Shared resource utilization with multiple models&lt;/a&gt;. To learn more about multi-model endpoints, refer to the Amazon SageMaker AI documentation &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/multi-model-endpoints.html" target="_blank" rel="noopener noreferrer"&gt;Multi-model endpoints&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;In this post, we define a workflow for empowering AI agents to make data-driven business decisions by invoking predictive ML models using Amazon SageMaker AI. The process begins with a user interacting through an interface, such as a chat-based assistant or application. This input is managed by an AI agent developed using the open source Strands Agents SDK. Strands Agents adopts a model-driven approach, which means developers define agents with only a prompt and a list of tools, facilitating rapid development from simple assistants to complex autonomous workflows.&lt;/p&gt; 
&lt;p&gt;When the agent is prompted with a request that requires a prediction (for example, “what will be the sales for H2 2025?”), the LLM powering the agent decided to interact with the Amazon SageMaker AI endpoint hosting the ML model. This can happen in two ways: directly using the endpoint as a custom tool of the Strands Agents Python SDK or by calling the tool through MCP. With MCP, the client application can discover the tools exposed by the MCP server, obtain the list of required parameters, and format the request to the Amazon SageMaker inference endpoint. Alternatively, agents can directly invoke SageMaker endpoints using tool annotations (such as &lt;code&gt;@tool&lt;/code&gt;), bypassing the MCP server for more direct access to model inference capabilities.&lt;/p&gt; 
&lt;p&gt;Finally, the prediction generated by the SageMaker hosted model is routed back through the agent and ultimately delivered to the user interface, enabling real-time, intelligent responses.&lt;/p&gt; 
&lt;p&gt;The following diagram illustrates this process. The complete code for this solution is available on &lt;a href="https://github.com/dgallitelli/generative-ai-on-amazon-sagemaker/tree/main/workshops/diy-agents-with-sagemaker-and-bedrock/99-use-cases/sagemaker-endpoint-as-tool" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/06/image-1-8.png" alt="A diagram of a software process AI-generated content may be incorrect."&gt;&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;To get started with this solution, make sure you have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An AWS account that will contain all your AWS resources.&lt;/li&gt; 
 &lt;li&gt;An &lt;a href="https://aws.amazon.com/iam/" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management&lt;/a&gt; (IAM) role to access SageMaker AI. To learn more about how IAM works with SageMaker AI, refer to &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam.html" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management for Amazon SageMaker AI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Access to &lt;a href="https://aws.amazon.com/sagemaker/studio/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Studio&lt;/a&gt; and a SageMaker AI notebook instance or an interactive development environment (IDE) such as &lt;a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener noreferrer"&gt;PyCharm&lt;/a&gt; or &lt;a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer"&gt;Visual Studio Code&lt;/a&gt;. We recommend using SageMaker Studio for straightforward deployment and inference.&lt;/li&gt; 
 &lt;li&gt;Access to accelerated instances (GPUs) for hosting the LLMs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Solution implementation&lt;/h2&gt; 
&lt;p&gt;In this solution, we implement a complete workflow that demonstrates how to use ML models deployed on Amazon SageMaker AI as specialized tools for AI agents. This approach enables agents to access and use ML capabilities for enhanced decision-making without requiring deep ML expertise. We play the role of a data scientist tasked with building an agent that can predict demand for one product. To achieve this, we train a time-series forecasting model, deploy it, and expose it to an AI agent.&lt;/p&gt; 
&lt;p&gt;The first phase involves training a model using Amazon SageMaker AI. This begins with preparing training data by generating synthetic time series data that incorporates trend, seasonality, and noise components to simulate realistic demand patterns. Following data preparation, feature engineering is performed to extract relevant features from the time series data, including temporal features such as day of week, month, and quarter to effectively capture seasonality patterns. In our example, we train an XGBoost model using the XGBoost container available as 1P container in Amazon SageMaker AI to create a regression model capable of predicting future demand values based on historical patterns. Although we use XGBoost for this example because it’s a well-known model used in many use cases, you can use your preferred container and model, according to the problem you’re trying to solve. For the sake of this post, we won’t detail an end-to-end example of training a model using XGBoost. To learn more about this, we suggest checking out the documentation &lt;a href="https://sagemaker.readthedocs.io/en/stable/frameworks/xgboost/using_xgboost.html#use-xgboost-with-the-sagemaker-python-sdk" target="_blank" rel="noopener noreferrer"&gt;Use XGBoost with the SageMaker Python SDK&lt;/a&gt;. Use the following code:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;from&amp;nbsp;sagemaker.xgboost.estimator import&amp;nbsp;XGBoost

xgb_estimator = XGBoost(...)
xgb_estimator.fit({'train': train_s3_path, 'validation': val_s3_path})&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Then, the trained model is packaged and deployed to a SageMaker AI endpoint, making it accessible for real-time inference through API calls:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;predictor = xgb_estimator.deploy(
 &amp;nbsp; &amp;nbsp;initial_instance_count=1,
 &amp;nbsp; &amp;nbsp;instance_type=instance_type,
 &amp;nbsp; &amp;nbsp;serializer=JSONSerializer(),
 &amp;nbsp; &amp;nbsp;deserializer=JSONDeserializer()
)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;After the model is deployed and ready for inferences, you need to learn how to invoke the endpoint. To invoke the endpoint, write a function like this:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-ruby"&gt;ENDPOINT_NAME = "serverless-xgboost"
REGION = boto3.session.Session().region_name

def invoke_endpoint(payload: list):
&amp;nbsp;&amp;nbsp; &amp;nbsp;"""
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Use the model deployed on the Amazon SageMaker AI endpoint to generate predictions.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Args:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;payload: a list of lists containing the inputs to generate predictions from
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Returns:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;predictions: an NumPy array of predictions
&amp;nbsp;&amp;nbsp; &amp;nbsp;"""
&amp;nbsp;&amp;nbsp; &amp;nbsp;sagemaker_runtime = boto3.client("sagemaker-runtime", region_name=REGION)
&amp;nbsp;&amp;nbsp; &amp;nbsp;response = sagemaker_runtime.invoke_endpoint(
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;EndpointName=ENDPOINT_NAME,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Body=json.dumps(payload),
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ContentType="application/json",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Accept="application/json"
&amp;nbsp;&amp;nbsp; &amp;nbsp;)
&amp;nbsp;&amp;nbsp; &amp;nbsp;predictions = json.loads(response['Body'].read().decode("utf-8"))
&amp;nbsp;&amp;nbsp; &amp;nbsp;return np.array(predictions)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Note that the function &lt;code&gt;invoke_endpoint()&lt;/code&gt; has been written with proper docstring. This is key to making sure that it can be used as a tool by LLMs because the description is what allows them to choose the right tool for the right task. YOu can turn this function into a Strands Agents tool thanks to the &lt;code&gt;@tool&lt;/code&gt; decorator:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;from&amp;nbsp;strands import&amp;nbsp;tool

@tool()
def&amp;nbsp;invoke_endpoint(payload: list):
&amp;nbsp; &amp;nbsp; ....&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;And to use it, pass it to a Strands agent:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;from&amp;nbsp;strands import&amp;nbsp;Agent

agent = Agent(
&amp;nbsp; &amp;nbsp; model="us.amazon.nova-pro-v1:0", 
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tools=[generate_prediction_with_sagemaker]
)

agent(
&amp;nbsp;&amp;nbsp; &amp;nbsp;"Invoke the endpoint with this input:\n\n"
&amp;nbsp;&amp;nbsp; &amp;nbsp;f"&amp;lt;input&amp;gt;{test_sample}&amp;lt;/input&amp;gt;\n\n"
&amp;nbsp;&amp;nbsp; &amp;nbsp;"Provide the output in JSON format {'predictions':&amp;lt;predictions&amp;gt;}"
)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;As you run this code, you can confirm the output from the agent, which correctly identifies the need to call the tool and executes the function calling loop:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;&amp;lt;thinking&amp;gt; To fulfill the User's request, I need to invoke the Amazon SageMaker 
endpoint with the provided input data. The input is a list of lists, which is the 
required format for the 'generate_prediction_with_sagemaker' tool. I will use this 
tool to get the predictions. &amp;lt;/thinking&amp;gt; 

Tool #1: generate_prediction_with_sagemaker The predictions from the Amazon SageMaker
endpoint are as follows: 
```json {&amp;nbsp; "predictions": [89.8525238, 52.51485062, 58.35247421, 62.79786301, 85.51475525] } ```&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;As the agent receives the prediction result from the endpoint tool, it can then use this as an input for other processes. For example, the agent could write the code to create a plot based on these predictions and show it to the user in the conversational UX. It could send these values directly to business intelligence (BI) tools such as &lt;a href="https://aws.amazon.com/quicksight" target="_blank" rel="noopener noreferrer"&gt;Amazon QuickSight&lt;/a&gt; or &lt;a href="http://www.tableau.com/" target="_blank" rel="noopener noreferrer"&gt;Tableau&lt;/a&gt; and automatically update enterprise resource planning (ERP) or customer relationship management (CRM) tools such as &lt;a href="http://www.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP&lt;/a&gt; or &lt;a href="http://www.salesforce.com/" target="_blank" rel="noopener noreferrer"&gt;Salesforce&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Connecting to the endpoint through MCP&lt;/h3&gt; 
&lt;p&gt;You can further evolve this pattern by having an MCP server invoke the endpoint rather than the agent itself. This allows for the decoupling of agent and tool logic and an improved security pattern because the MCP server will be the one with the permission to invoke the endpoint. To achieve this, implement an MCP server using the &lt;a href="https://gofastmcp.com/getting-started/welcome?gad_source=1&amp;amp;gad_campaignid=22521620347&amp;amp;gbraid=0AAAAACeCpg_Hi0k3Ql_OeCU0q96xoSh9M&amp;amp;gclid=CjwKCAjwprjDBhBTEiwA1m1d0n-o5wCNkDPbAbxBPgTP5-ui-wwO_LZaNqvVmUKj-1QsJ9SjpEBh-xoCJnwQAvD_BwE" target="_blank" rel="noopener noreferrer"&gt;FastMCP&lt;/a&gt; framework that wraps the SageMaker endpoint and exposes it as a tool with a well-defined interface. A tool schema must be specified that clearly defines the input parameters and return values for the tool, facilitating straightforward understanding and usage by AI agents. Writing the proper docstring when defining the function achieves this. Additionally, the server must be configured to handle authentication securely, allowing it to access the SageMaker endpoint using AWS credentials or AWS roles. In this example, we run the server on the same compute as the agent and use &lt;code&gt;stdio&lt;/code&gt; as communication protocol. For production workloads, we recommend running the MCP server on its own AWS compute and using transport protocols based on HTTPS (for example, Streamable HTTP). If you want to learn how to deploy MCP servers in a serverless fashion, refer to &lt;a href="https://github.com/awslabs/run-model-context-protocol-servers-with-aws-lambda" target="_blank" rel="noopener noreferrer"&gt;this official AWS GitHub repository&lt;/a&gt;. Here’s an example MCP server:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-php"&gt;from&amp;nbsp;mcp.server.fastmcp import&amp;nbsp;FastMCP

mcp =&amp;nbsp;FastMCP("SageMaker App")
ENDPOINT_NAME =&amp;nbsp;os.environ["SAGEMAKER_ENDPOINT_NAME"]

@mcp.tool()
async&amp;nbsp;def&amp;nbsp;invoke_endpoint(payload: list):
&amp;nbsp;&amp;nbsp; &amp;nbsp;"""&amp;nbsp;Use the model ... """
&amp;nbsp; &amp;nbsp; [...]
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
if&amp;nbsp;__name__&amp;nbsp;==&amp;nbsp;"__main__":
&amp;nbsp;&amp;nbsp; &amp;nbsp;mcp.run(="stdio")&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Finally, integrate the ML model with the agent framework. This begins with setting up Strands Agents to establish communication with the MCP server and incorporate the ML model as a tool. A comprehensive workflow must be created to determine when and how the agent should use the ML model to enhance its capabilities. The implementation includes programming decision logic that enables the agent to make informed decisions based on the predictions received from the ML model. The phase concludes with testing and evaluation, where the end-to-end workflow is validated by having the agent generate predictions for test scenarios and take appropriate actions based on those predictions.&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;from&amp;nbsp;mcp import&amp;nbsp;StdioServerParameters
from&amp;nbsp;mcp.client.stdio import&amp;nbsp;stdio_client
from&amp;nbsp;strands.tools.mcp import&amp;nbsp;MCPClient

# Create server parameters for stdio connection
server_params = StdioServerParameters(
&amp;nbsp;&amp;nbsp; &amp;nbsp;command="python3", &amp;nbsp;# Executable
&amp;nbsp;&amp;nbsp; &amp;nbsp;args=["server.py"], &amp;nbsp;# Optional command line arguments
&amp;nbsp;&amp;nbsp; &amp;nbsp;env={"SAGEMAKER_ENDPOINT_NAME":&amp;nbsp;"&amp;lt;your-endpoint-name&amp;gt;"}
)

# Create an agent with MCP tools
with stdio_mcp_client:
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Get the tools from the MCP server
&amp;nbsp;&amp;nbsp; &amp;nbsp;tools = stdio_mcp_client.list_tools_sync()
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Create an agent with these tools
&amp;nbsp;&amp;nbsp; &amp;nbsp;agent = Agent(model="us.amazon.nova-pro-v1:0", tools=tools)
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Invoke the agent
&amp;nbsp;&amp;nbsp; &amp;nbsp;agent(
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"Invoke the endpoint with this input:\n\n"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;f"&amp;lt;input&amp;gt;{test_sample}&amp;lt;/input&amp;gt;\n\n"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"Provide the output in JSON format {'predictions':&amp;lt;predictions&amp;gt;}"
&amp;nbsp;&amp;nbsp; &amp;nbsp;)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;When you’re done experimenting with the Strands Agents Python SDK and models on Amazon SageMaker AI, you can delete the endpoint you’ve created to stop incurring unwanted charges. To do that, you can use either the &lt;a href="https://aws.amazon.com/console/" target="_blank" rel="noopener noreferrer"&gt;AWS Management Console&lt;/a&gt;, the &lt;a href="https://sagemaker.readthedocs.io/en/stable/" target="_blank" rel="noopener noreferrer"&gt;SageMaker Python SDK&lt;/a&gt;, or the &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/index.html" target="_blank" rel="noopener noreferrer"&gt;AWS SDK for Python (boto3)&lt;/a&gt;:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;# SageMaker Python SDK
predictor.delete_model()
predictor.delete_endpoint()

# Alternatively, boto3
sagemaker_runtime.delete_endpoint(EndpointName=endpoint_name)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this post, we demonstrated how to enhance AI agents’ capabilities by integrating predictive ML models using Amazon SageMaker AI and the MCP. By using the open source Strands Agents SDK and the flexible deployment options of SageMaker AI, developers can create sophisticated AI applications that combine conversational AI with powerful predictive analytics capabilities. The solution we presented offers two integration paths: direct endpoint access through tool annotations and MCP-based integration, giving developers the flexibility to choose the most suitable approach for their specific use cases. Whether you’re building customer service chat assistants that need predictive capabilities or developing complex autonomous workflows, this architecture provides a secure, scalable, and modular foundation for your AI applications. As organizations continue to seek ways to make their AI agents more intelligent and data-driven, the combination of Amazon SageMaker AI, MCP, and the Strands Agents SDK offers a powerful solution for building the next generation of AI-powered applications.&lt;/p&gt; 
&lt;p&gt;For readers unfamiliar with connecting MCP servers to workloads running on Amazon SageMaker AI, we suggest &lt;a href="https://aws.amazon.com/blogs/machine-learning/extend-large-language-models-powered-by-amazon-sagemaker-ai-using-model-context-protocol/" target="_blank" rel="noopener noreferrer"&gt;Extend large language models powered by Amazon SageMaker AI using Model Context Protocol&lt;/a&gt; in the AWS Artificial Intelligence Blog, which details the flow and the steps required to build agentic AI solutions with Amazon SageMaker AI.&lt;/p&gt; 
&lt;p&gt;To learn more about AWS commitment to the MCP standard, we recommend reading &lt;a href="https://aws.amazon.com/blogs/opensource/open-protocols-for-agent-interoperability-part-1-inter-agent-communication-on-mcp/" target="_blank" rel="noopener noreferrer"&gt;Open Protocols for Agent Interoperability Part 1: Inter-Agent Communication on MCP&lt;/a&gt; in the AWS Open Source Blog, where we announced that AWS is joining the steering committee for MCP to make sure developers can build breakthrough agentic applications without being tied to one standard. To learn more about how to use MCP with other technologies from AWS, such as &lt;a href="https://aws.amazon.com/bedrock/agents/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Agents&lt;/a&gt;, we recommend reading &lt;a href="https://aws.amazon.com/blogs/machine-learning/harness-the-power-of-mcp-servers-with-amazon-bedrock-agents/" target="_blank" rel="noopener noreferrer"&gt;Harness the power of MCP servers with Amazon Bedrock Agents&lt;/a&gt; in the AWS Artificial Intelligence Blog. Finally, a great way to securely deploy and scale MCP servers on AWS is provided in the AWS Solutions Library at &lt;a href="https://aws.amazon.com/solutions/guidance/deploying-model-context-protocol-servers-on-aws/" target="_blank" rel="noopener noreferrer"&gt;Guidance for Deploying Model Context Protocol Servers on AWS&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113976 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/10/saptarshi.jpeg" alt="" width="100" height="121"&gt;&lt;strong&gt;Saptarshi Banerjee &lt;/strong&gt;serves as a Senior Solutions Architect at AWS, collaborating closely with AWS Partners to design and architect mission-critical solutions. With a specialization in generative AI, AI/ML, serverless architecture, Next-Gen Developer Experience tools and cloud-based solutions, Saptarshi is dedicated to enhancing performance, innovation, scalability, and cost-efficiency for AWS Partners within the cloud ecosystem.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="size-full wp-image-4648 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/06/image-3-5.png" alt="" width="100" height="125"&gt;&lt;strong&gt;Davide Gallitelli &lt;/strong&gt;is a Senior Worldwide Specialist Solutions Architect for Generative AI at AWS, where he empowers global enterprises to harness the transformative power of AI. Based in Europe but with a worldwide scope, Davide partners with organizations across industries to architect custom AI agents that solve complex business challenges using AWS ML stack. He is particularly passionate about democratizing AI technologies and enabling teams to build practical, scalable solutions that drive organizational transformation.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Simplify access control and auditing for Amazon SageMaker Studio using trusted identity propagation</title>
		<link>https://aws.amazon.com/blogs/machine-learning/simplify-access-control-and-auditing-for-amazon-sagemaker-studio-using-trusted-identity-propagation/</link>
					
		
		<dc:creator><![CDATA[Durga Sury]]></dc:creator>
		<pubDate>Tue, 19 Aug 2025 20:00:45 +0000</pubDate>
				<category><![CDATA[Advanced (300)]]></category>
		<category><![CDATA[Amazon SageMaker AI]]></category>
		<category><![CDATA[Amazon SageMaker Studio]]></category>
		<category><![CDATA[AWS IAM Identity Center]]></category>
		<category><![CDATA[Technical How-to]]></category>
		<guid isPermaLink="false">a2c8109d46394c581954ccf9b60dc68943f6f167</guid>

					<description>In this post, we explore how to enable and use trusted identity propagation in Amazon SageMaker Studio, which allows organizations to simplify access management by granting permissions to existing AWS IAM Identity Center identities. The solution demonstrates how to implement fine-grained access controls based on a physical user's identity, maintain detailed audit logs across supported AWS services, and support long-running user background sessions for training jobs.</description>
										<content:encoded>&lt;p&gt;AWS supports &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/trustedidentitypropagation-overview.html" target="_blank" rel="noopener noreferrer"&gt;trusted identity propagation&lt;/a&gt;, a feature that allows AWS services to securely propagate a user’s identity across service boundaries. With trusted identity propagation, you have fine-grained access controls based on a physical user’s identity rather than relying on IAM roles. This integration allows for the implementation of access control through services such as &lt;a href="https://aws.amazon.com/s3/features/access-grants/" target="_blank" rel="noopener noreferrer"&gt;Amazon S3 Access Grants&lt;/a&gt; and maintains detailed audit logs of user actions across supported AWS services such as &lt;a href="https://aws.amazon.com/emr/" target="_blank" rel="noopener noreferrer"&gt;Amazon EMR&lt;/a&gt;. Furthermore, it supports long-running user background sessions for training jobs, so you can log out of your interactive ML application while the background job continues to run.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aws.amazon.com/sagemaker-ai/studio/" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker Studio&lt;/a&gt; now supports trusted identity propagation, offering a powerful solution for enterprises seeking to enhance their ML system security. By integrating trusted identity propagation with SageMaker Studio, organizations can simplify access management by granting permissions to existing &lt;a href="https://aws.amazon.com/iam/identity-center/" target="_blank" rel="noopener noreferrer"&gt;AWS IAM Identity Center&lt;/a&gt;&amp;nbsp;identities.&lt;/p&gt; 
&lt;p&gt;In this post, we explore how to enable and use trusted identity propagation in SageMaker Studio, demonstrating its benefits through practical use cases and implementation guidelines. We walk through the setup process, discuss key considerations, and showcase how this feature can transform your organization’s approach to security and access controls.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;In this section, we review the architecture for the proposed solution and the steps to enable trusted identity propagation for your SageMaker Studio domain.&lt;/p&gt; 
&lt;p&gt;The following diagram shows the interaction between the different components that allow the user’s identity to propagate from their identity provider and IAM Identity Center to downstream services such as Amazon EMR and &lt;a href="https://aws.amazon.com/athena/" target="_blank" rel="noopener noreferrer"&gt;Amazon Athena&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114633" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/18/ml-19006-arch-diagram-1.png" alt="architecture diagram showing trusted identity propagation between multiple aws services" width="936" height="534"&gt;&lt;/p&gt; 
&lt;p&gt;With a trusted identity propagation-enabled SageMaker Studio domain, users can access data across &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/trustedidentitypropagation-integrations.html" target="_blank" rel="noopener noreferrer"&gt;supported AWS services&lt;/a&gt; using their end user identity and group membership, in addition to access allowed by their domain or user execution role. In addition, API calls from SageMaker Studio notebooks and supported AWS services and &lt;a href="https://aws.amazon.com/sagemaker-ai" target="_blank" rel="noopener noreferrer"&gt;Amazon SageMaker AI&lt;/a&gt; features log the user identity in &lt;a href="http://aws.amazon.com/cloudtrail" target="_blank" rel="noopener noreferrer"&gt;AWS CloudTrail&lt;/a&gt;. For a list of supported AWS services and SageMaker AI features, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/trustedidentitypropagation-compatibility.html" target="_blank" rel="noopener noreferrer"&gt;Trusted identity propagation architecture and compatibility&lt;/a&gt;. In the following sections, we show how to enable trusted identity propagation for your domain.&lt;/p&gt; 
&lt;p&gt;This solution applies for SageMaker Studio domains set up using IAM Identity Center as the method of authentication. If your domain is set up using IAM, see &lt;a href="https://aws.amazon.com/blogs/machine-learning/implement-user-level-access-control-for-multi-tenant-ml-platforms-on-amazon-sagemaker-ai/" target="_blank" rel="noopener noreferrer"&gt;Implement user-level access control for multi-tenant ML platforms on Amazon SageMaker AI&lt;/a&gt; for best practices on managing and scaling access control.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;To follow along with this post, you must have the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An AWS account with an organization instance of IAM Identity Center configured through &lt;a href="https://aws.amazon.com/organizations/" target="_blank" rel="noopener noreferrer"&gt;AWS Organizations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Administrator permissions (or elevated permissions allowing modification of IAM principals, and SageMaker administrator access to create and update domains)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Create or update the SageMaker execution role&lt;/h2&gt; 
&lt;p&gt;For trusted identity propagation to work, the SageMaker execution role (domain and user profile execution role), should allow the &lt;code&gt;sts:SetContext&lt;/code&gt; permissions, in addition to &lt;code&gt;sts:AssumeRole&lt;/code&gt;, in its trust policy. For a new SageMaker AI domain, create a domain execution role by following the instructions in &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html#sagemaker-roles-create-execution-role" target="_blank" rel="noopener noreferrer"&gt;Create execution role&lt;/a&gt;. For existing domains, follow the instructions in &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html#sagemaker-roles-get-execution-role" target="_blank" rel="noopener noreferrer"&gt;Get your execution role&lt;/a&gt; to find the user or domain’s execution role.&lt;/p&gt; 
&lt;p&gt;Next, to update the trust policy for the role, complete the following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;In the navigation pane of the IAM console, choose &lt;strong&gt;Roles&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;In the list of roles in your account, choose the domain or user execution role.&lt;/li&gt; 
 &lt;li&gt;On the &lt;strong&gt;Trust relationships&lt;/strong&gt; tab, choose &lt;strong&gt;Edit trust policy&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Update the trust policy with the following statement:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div class="hide-language"&gt; 
 &lt;div class="hide-language"&gt; 
  &lt;div class="hide-language"&gt; 
   &lt;pre&gt;&lt;code class="lang-json"&gt;{
  "Version": "2012-10-17",
  "Statement": [
     .....
    {
      "Effect": "Allow",
      "Principal": {
        "Service": [
          "sagemaker.amazonaws.com",
        ]
      },
      "Action": [
        "sts:AssumeRole",
        "sts:SetContext"
      ],
      "Condition": {
	"aws:SourceAccount": "&amp;lt;account&amp;gt;"
         }
       }
    }
  ]
}&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Update policy&lt;/strong&gt; to save your changes.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Trusted identity propagation only works for private spaces at the time of launch.&lt;/p&gt; 
&lt;h2&gt;Create a SageMaker AI domain with trusted identity propagation enabled&lt;/h2&gt; 
&lt;p&gt;SageMaker AI domains using IAM Identity Center for authentication can only be set up in the same AWS Region as the IAM Identity Center instance. To create a new SageMaker domain, follow the steps in &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/onboard-custom.html" target="_blank" rel="noopener noreferrer"&gt;Use custom setup for Amazon SageMaker AI&lt;/a&gt;. For &lt;strong&gt;Trusted identity propagation&lt;/strong&gt;, select &lt;strong&gt;Enable trusted identity propagation for all users on this domain&lt;/strong&gt;, and continue with the rest of the setup to create a domain and assign users and groups, choosing the role you created in the previous step.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114634" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/18/ml-19006-create-domain-1.png" alt="screenshot of a create domain workflow" width="1397" height="1339"&gt;&lt;/p&gt; 
&lt;h2&gt;Update an existing SageMaker AI domain&lt;/h2&gt; 
&lt;p&gt;You can also update your existing SageMaker AI domain to enable trusted identity propagation. You can enable trusted identity propagation even while the domain or user has active SageMaker Studio applications. However, for the changes to be applied, the active applications must be restarted. You can use the &lt;code&gt;EffectiveTrustedIdentityPropagationStatus&lt;/code&gt; field in the response to the &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeApp.html" target="_blank" rel="noopener noreferrer"&gt;DescribeApp&lt;/a&gt; API for running applications to determine if the application has trusted identity propagation enabled.&lt;/p&gt; 
&lt;p&gt;To enable trusted identity propagation for the domain using the SageMaker AI console, choose &lt;strong&gt;Edit&lt;/strong&gt; under &lt;strong&gt;Authentication and permissions&lt;/strong&gt; on the &lt;strong&gt;Domain settings &lt;/strong&gt;tab.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114329" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-edit-domain.png" alt="screenshot of a edit domain workflow" width="1428" height="614"&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;Trusted identity propagation&lt;/strong&gt;, select &lt;strong&gt;Enable trusted identity propagation for all users on this domain&lt;/strong&gt;, and choose &lt;strong&gt;Submit&lt;/strong&gt; to save the changes.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114335" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-update-domain.png" alt="screenshot showing update domain settings to enable trusted identity propagation" width="1430" height="876"&gt;&lt;/p&gt; 
&lt;h2&gt;(Optional) Update user background session configuration in IAM Identity Center&lt;/h2&gt; 
&lt;p&gt;IAM Identity Center now supports running user background sessions, and the session duration is set by default to 7 days. With background sessions, users can launch long-running SageMaker training jobs that assume the user’s identity context along with the SageMaker execution role. As an administrator, you can enable or disable user background sessions, and modify the session duration for user background sessions. As of the time of writing, the maximum session duration that you can set for user background sessions is 90 days. The user’s session is stopped at the end of the specified duration, and consequently, the training job will also fail at the end of the session duration.&lt;/p&gt; 
&lt;p&gt;To disable or update the session duration, navigate to the IAM Identity Center console, choose &lt;strong&gt;Settings &lt;/strong&gt;in the navigation pane, and choose &lt;strong&gt;Configure&lt;/strong&gt; under &lt;strong&gt;Session duration&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114334" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-session-duration.png" alt="iam identity center console screenshot showing edit button for configuring interactive sessions" width="1431" height="696"&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;User background sessions&lt;/strong&gt;, select &lt;strong&gt;Enable user background sessions&lt;/strong&gt; and use the dropdown to change the session duration. If user background sessions are disabled, the user must be logged in for the duration of the training job; otherwise, the training job will fail once the user logs out. Updating this configuration doesn’t affect current running sessions and only applies to newly created user background sessions. Choose &lt;strong&gt;Save&lt;/strong&gt; to save your settings.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114330" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-edit-session-duration.png" alt="screenshot showing how to update the background session duration for users in iam identity center" width="1619" height="880"&gt;&lt;/p&gt; 
&lt;h2&gt;Use cases&lt;/h2&gt; 
&lt;p&gt;Imagine you’re an enterprise with hundreds or even thousands of users, each requiring varying levels of access to data across multiple teams. You’re responsible for maintaining an AI/ML system on SageMaker AI and managing access permissions across diverse data sources such as &lt;a href="https://aws.amazon.com/s3"&gt;Amazon Simple Storage Service (Amazon S3)&lt;/a&gt;, &lt;a href="https://aws.amazon.com/redshift/" target="_blank" rel="noopener noreferrer"&gt;Amazon Redshift&lt;/a&gt;, and &lt;a href="https://aws.amazon.com/lake-formation/" target="_blank" rel="noopener noreferrer"&gt;AWS Lake Formation&lt;/a&gt;. Traditionally, this has involved maintaining complex IAM policies for users, services, and resources, including bucket policies where applicable. This approach is not only tedious but also makes it challenging to track and audit data access without maintaining a separate role for each user.&lt;/p&gt; 
&lt;p&gt;This is precisely the scenario that trusted identity propagation aims to address. With trusted identity propagation support, you can now maintain service-specific roles with minimal permissions, such as &lt;code&gt;s3:GetDataAccess&lt;/code&gt; or &lt;code&gt;LakeFormation:GetDataAccess&lt;/code&gt;, along with additional permissions to start jobs, view job statuses, and perform other necessary tasks. For data access, you can assign fine-grained policies directly to individual users. For instance, Jane might have read access to customer data and full access to sales and pricing data, whereas Laura might only have read access to sales trends. Both Jane and Laura can assume the same SageMaker AI role to access their SageMaker Studio applications, while maintaining separate data access permissions based on their individual identities.In the following sections, we explore how this can be achieved for common use cases, demonstrating the power and flexibility of trusted identity propagation in simplifying data access management while maintaining robust security and auditability.&lt;/p&gt; 
&lt;h3&gt;Scenario 1: Experiment with Amazon S3 data in notebooks&lt;/h3&gt; 
&lt;p&gt;S3 Access Grants provide a simplified way to manage data access at scale. Unlike traditional IAM roles and policies that require a detailed knowledge of IAM concepts, and frequent policy updates as new resources are added, with S3 Access Grants, you can define access to data based on familiar database-like grants that automatically scale with your data. This approach significantly reduces the operational overhead of managing thousands of IAM policies and bucket policies, and overcomes the limitations of IAM permissions, while strengthening security through access patterns. If you don’t have S3 Access Grants set up, see &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-grants-instance-create.html" target="_blank" rel="noopener noreferrer"&gt;Create an S3 Access Grant instance&lt;/a&gt; to get started. For detailed architecture and use cases, you can also refer to &lt;a href="https://aws.amazon.com/blogs/storage/scaling-data-access-with-amazon-s3-access-grants/" target="_blank" rel="noopener noreferrer"&gt;Scaling data access with Amazon S3 Access Grants&lt;/a&gt;. After you have set up S3 Access Grants, you can grant access to your datasets to users based on their identity in IAM Identity Center.&lt;/p&gt; 
&lt;p&gt;To use S3 Access Grants from SageMaker Studio, update the following IAM roles with policies and trust policies.&lt;/p&gt; 
&lt;p&gt;For the domain or user execution role, add the following &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_manage-attach-detach.html" target="_blank" rel="noopener noreferrer"&gt;inline policy&lt;/a&gt;:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;div class="hide-language"&gt; 
  &lt;pre&gt;&lt;code class="lang-json"&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowDataAccessAPI",
            "Effect": "Allow",
            "Action": [
                "s3:GetDataAccess"
            ],
            "Resource": [
                "arn:aws:s3:&amp;lt;region&amp;gt;:&amp;lt;account&amp;gt;:access-grants/default"
            ]
        },
        {
            "Sid": "RequiredForTIP",
            "Effect": "Allow",
            "Action": "sts:SetContext",
            "Resource": "arn:aws:iam::&amp;lt;account&amp;gt;:role/&amp;lt;s3-access-grants-role&amp;gt;"
        }
    ]
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;Make sure the S3 Access Grants role’s trust policy allows the &lt;code&gt;sts:SetContext&lt;/code&gt; action in addition to &lt;code&gt;sts:AssumeRole&lt;/code&gt;. The following is a sample trust policy:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;div class="hide-language"&gt; 
  &lt;div class="hide-language"&gt; 
   &lt;pre&gt;&lt;code class="lang-json"&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Service": [
                    "access-grants.s3.amazonaws.com"
                ]
            },
            "Action": [
                "sts:AssumeRole",
                "sts:SetContext"
            ],
            "Condition": {
                "StringEquals": {
                    "aws:SourceArn": "arn:aws:s3:&amp;lt;region&amp;gt;:&amp;lt;account&amp;gt;:access-grants/default"
                }
            }
        }
    ]
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; 
  &lt;pre&gt;&lt;/pre&gt; 
 &lt;/div&gt; &amp;nbsp; 
&lt;/div&gt; Now, the user can access the data as allowed by S3 Access Grants for your user identity by calling the 
&lt;code&gt;GetDataAccess&lt;/code&gt; API to return temporary credentials, and by assuming the temporary credentials to read or write to their prefixes. For example, the following code shows how to use Boto3 to get temporary credentials and assume the credentials to get access to Amazon S3 locations that are allowed through S3 Access Grants: 
&lt;div class="hide-language"&gt;
  &amp;nbsp; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;import boto3
from botocore.config import Config

def get_access_grant_credentials(account_id: str, target: str, 
                                 permission: str = 'READ'):
    s3control = boto3.client('s3control')
    response = s3control.get_data_access(
        AccountId=account_id,
        Target=target,
        Permission=permission
    )
    return response['Credentials']

def create_s3_client_from_credentials(credentials) -&amp;gt; boto3.client:
    return boto3.client(
        's3',
        aws_access_key_id=credentials['AccessKeyId'],
        aws_secret_access_key=credentials['SecretAccessKey'],
        aws_session_token=credentials['SessionToken']
    )

# Create client
credentials = get_access_grant_credentials('&amp;lt;account&amp;gt;',
                                        "s3://&amp;lt;bucket&amp;gt;/&amp;lt;allowed-prefix&amp;gt;/")
s3 = create_s3_client_from_credentials(credentials)

# Will succeed
s3.list_objects(Bucket="&amp;lt;bucket&amp;gt;", Prefix="&amp;lt;allowed-prefix&amp;gt;")

# Will fail
s3.list_objects(Bucket="&amp;lt;bucket&amp;gt;", Prefix="&amp;lt;any-other-prefix&amp;gt;")&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Scenario 2: Access Lake Formation through Athena&lt;/h3&gt; 
&lt;p&gt;Lake Formation provides centralized governance and fine-grained access control management for data stored in Amazon S3 and metadata in the &lt;a href="https://docs.aws.amazon.com/glue/latest/dg/catalog-and-crawler.html" target="_blank" rel="noopener noreferrer"&gt;AWS Glue Data Catalog&lt;/a&gt;. The Lake Formation permission model operates in conjunction with IAM permissions, offering granular controls at the database, table, column, row, and cell levels. This dual-layer security model provides comprehensive data governance while maintaining flexibility in access patterns.&lt;/p&gt; 
&lt;p&gt;Data governed through Lake Formation can be accessed through various AWS analytics services. In this scenario, we demonstrate using Athena, a serverless query engine that integrates seamlessly with Lake Formation’s permission model. For other services like Amazon EMR on EC2, make sure the resource is configured to support trusted identity propagation, including setting up security configurations and making sure the EMR cluster is configured with IAM roles that support trusted identity propagation.&lt;/p&gt; 
&lt;p&gt;The following instructions assume that you have already set up Lake Formation. If not, see &lt;a href="https://docs.aws.amazon.com/lake-formation/latest/dg/initial-lf-config.html" target="_blank" rel="noopener noreferrer"&gt;Set up AWS Lake Formation&lt;/a&gt; and follow the &lt;a href="https://docs.aws.amazon.com/lake-formation/latest/dg/getting-started-tutorials.html" target="_blank" rel="noopener noreferrer"&gt;AWS Lake Formation tutorials&lt;/a&gt; to set up Lake Formation and bring in your data.&lt;/p&gt; 
&lt;p&gt;Complete the following steps to access your governed data in trusted identity propagation-enabled SageMaker Studio notebooks using Athena:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Integrate Lake Formation with IAM Identity Center by following the instructions in &lt;a href="https://docs.aws.amazon.com/lake-formation/latest/dg/identity-center-integration.html" target="_blank" rel="noopener noreferrer"&gt;Integrating IAM Identity Center&lt;/a&gt;. At a high level, this includes creating an IAM role allowing creating and updating application configurations in Lake Formation and IAM Identity Center, and providing the single sign-on (SSO) instance ID.&lt;/li&gt; 
 &lt;li&gt;Grant permissions to the IAM Identity Center user to the relevant resources (database, table, row or column) using Lake Formation. See &lt;a href="https://docs.aws.amazon.com/lake-formation/latest/dg/granting-catalog-permissions.html" target="_blank" rel="noopener noreferrer"&gt;Granting permissions on Data Catalog resources&lt;/a&gt; instructions.&lt;/li&gt; 
 &lt;li&gt;Create an Athena workgroup that supports trusted identity propagation by following instructions in &lt;a href="https://docs.aws.amazon.com/athena/latest/ug/creating-workgroups.html" target="_blank" rel="noopener noreferrer"&gt;Create a workgroup&lt;/a&gt; and choosing &lt;strong&gt;IAM Identity Center&lt;/strong&gt; as the method of authentication. Make sure the user has access to write to the query results location provided here using S3 Access Grants, because Athena uses access grants by default when choosing IAM Identity Center as the authentication method.&lt;/li&gt; 
 &lt;li&gt;Update the Athena workgroup’s IAM role with the following trust policy (add &lt;code&gt;sts:SetContext&lt;/code&gt; to the existing trust policy). You can find the IAM role by choosing the workgroup you created earlier and looking for &lt;strong&gt;Role name&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div class="hide-language"&gt; 
 &lt;div class="hide-language"&gt; 
  &lt;pre&gt;&lt;code class="lang-json"&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AthenaTrustPolicy",
            "Effect": "Allow",
            "Principal": {
                "Service": "athena.amazonaws.com"
            },
            "Action": [
                "sts:AssumeRole",
                "sts:SetContext"
            ],
            "Condition": {
                "StringEquals": {
                    "aws:SourceAccount": "&amp;lt;account-id&amp;gt;"
                },
                "ArnLike": {
                    "aws:SourceArn": "arn:aws:athena:&amp;lt;region&amp;gt;:&amp;lt;account-id&amp;gt;:workgroup/&amp;lt;workgroup-name&amp;gt;"
                }
            }
        }
    ]
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;The setup is now complete. You can now launch SageMaker Studio using an IAM Identity Center user, launch a JupyterLab or Code Editor application, and query the database. See the following example code to get started:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;div class="hide-language"&gt; 
  &lt;pre&gt;&lt;code class="lang-python"&gt;import time
import boto3
import pandas as pd
athena_client = boto3.client("athena")

database = "&amp;lt;database-name&amp;gt;"
table = "&amp;lt;table-name&amp;gt;"
query = f"SELECT * FROM {database}.{table}"
output_location = "s3://&amp;lt;bucket-name&amp;gt;/queries"  # bucket name and location from Step 3

response = athena_client.start_query_execution(
    QueryString=query,
    QueryExecutionContext={'Database': database},
    ResultConfiguration={'OutputLocation': output_location}
)

# Get the query execution ID
query_execution_id = response['QueryExecutionId']

# wait for query to complete
while True:
    query_status = athena_client.get_query_execution(QueryExecutionId=query_execution_id)
    status = query_status['QueryExecution']['Status']['State']
    if status in ['SUCCEEDED', 'FAILED', 'CANCELLED']:
        break
    time.sleep(1)

# If the query succeeded, fetch and display results
if status == 'SUCCEEDED':
    results = athena_client.get_query_results(QueryExecutionId=query_execution_id)
    
    # Extract column names and data
    columns = [col['Name'] for col in results['ResultSet']['ResultSetMetadata']['ColumnInfo']]
    data = []
    for row in results['ResultSet']['Rows'][1:]:  # Skip the header row
        data.append([field.get('VarCharValue', '') for field in row['Data']])
    
    # Create a pandas DataFrame
    df = pd.DataFrame(data, columns=columns)
    
    # Display the first few rows
    print(df.head())
else:
    print(f"Query failed with status: {status}")&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;Scenario 3: Create a training job supported with user background sessions&lt;/h3&gt; 
&lt;p&gt;For a trusted identity propagation-enabled domain, a user background session is a session that continues to run even if the end-user has logged out of their interactive session such as JupyterLab applications in SageMaker Studio. For example, the user can initiate a training job from their SageMaker Studio space, and the job can run in the background for days or weeks regardless of the user’s activity, and use the user’s identity to access data and log audit trails. If your domain doesn’t have trusted identity propagation enabled, you can continue to run training jobs and processing jobs as before; however, if trusted identity propagation is enabled, make sure your user background session time is updated to reflect the duration of your training jobs, because the default is set automatically to 7 days. If you have enabled user background sessions, update your SageMaker Studio domain or user’s execution role with the following permissions to provide a seamless experience for data scientists:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-json"&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowDataAccessAPI",
            "Effect": "Allow",
            "Action": [
                "s3:GetDataAccess",
                "s3:GetAccessGrantsInstanceForPrefix"
            ],
            "Resource": [
                "arn:aws:s3:&amp;lt;region&amp;gt;:&amp;lt;account&amp;gt;:access-grants/default"
            ]
        },
        {
            "Sid": "RequiredForTIP",
            "Effect": "Allow",
            "Action": "sts:SetContext",
            "Resource": "arn:aws:iam::&amp;lt;account&amp;gt;:role/&amp;lt;s3-access-grants-role&amp;gt;"
        }
    ]
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;With this setup, a data scientist can use an Amazon S3 location that they have access to through S3 Access Grants. SageMaker automatically looks for data access using S3 Access Grants and falls back to the job’s IAM role otherwise. For example, in the following SDK call to create the training job, the user provides the S3 Amazon URI where the data is stored, they have access to it through S3 Access Grants, and they can run this job without additional setup:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;div class="hide-language"&gt; 
  &lt;div class="hide-language"&gt; 
   &lt;pre&gt;&lt;code class="lang-python"&gt;    response = sm.create_training_job(
        TrainingJobName=training_job_name,
        AlgorithmSpecification={
            'TrainingImage': '763104351884.dkr.ecr.us-west-2.amazonaws.com/huggingface-pytorch-training:2.0.0-transformers4.28.1-gpu-py310-cu118-ubuntu20.04',
            'TrainingInputMode': 'File',
            ...
                    RoleArn='arn:aws:iam::&amp;lt;account&amp;gt;:role/tip-domain-role',
        InputDataConfig=[
            {
                'ChannelName': 'training',
                'DataSource': {
                    'S3DataSource': {
                        'S3DataType': 'S3Prefix',
                        'S3Uri': 's3://&amp;lt;s3-ag-enabled-bucket&amp;gt;/&amp;lt;s3-ag-enabled-prefix&amp;gt;',
                        'S3DataDistributionType': 'FullyReplicated'
                    }
                },
                'CompressionType': 'None',
                'RecordWrapperType': 'None'
            },
            ...
        }&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h4&gt;(Optional) View and manage user background sessions on IAM Identity Center&lt;/h4&gt; 
&lt;p&gt;When training jobs are run as user background sessions, you can view these sessions as user background sessions on IAM Identity Center. The administrator can view a list of all user background sessions and optionally stop a session if the user has left the team, for example. When the user background session is ended, the training job subsequently fails.&lt;/p&gt; 
&lt;p&gt;To view a list of all user background sessions, on the IAM Identity Center console, choose &lt;strong&gt;Users&lt;/strong&gt; and choose the user you want view the user background sessions for. Choose the &lt;strong&gt;Active sessions&lt;/strong&gt; tab to view a list of sessions. The user background session can be identified by the &lt;strong&gt;Session type&lt;/strong&gt; column, which shows if the session is interactive or a user background session. The list also shows the job’s Amazon Resource Name (ARN) under the &lt;strong&gt;Used by&lt;/strong&gt; column.&lt;/p&gt; 
&lt;p&gt;To end a session, select the session and choose &lt;strong&gt;End sessions&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114332" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-list-active-sessions.png" alt="screenshot showing list of active sessions in iam identity center console" width="1392" height="650"&gt;&lt;/p&gt; 
&lt;p&gt;You will be prompted to confirm the action. Enter confirm to confirm that you want to end the session and choose &lt;strong&gt;End sessions&lt;/strong&gt; to stop the user background session.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114331" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-end-session.png" alt="screenshot showing how to end a user interactive session from iam identity center console" width="599" height="427"&gt;&lt;/p&gt; 
&lt;h3&gt;Scenario 4: Auditing using CloudTrail&lt;/h3&gt; 
&lt;p&gt;After trusted identity propagation is enabled for your domain, you can now track the user that performed specific actions through CloudTrail. To try this out, log in to SageMaker Studio, and create and open a JupyterLab space. Open a terminal and enter &lt;code&gt;aws s3 ls&lt;/code&gt; to list the available buckets in your Region.&lt;/p&gt; 
&lt;p&gt;On the CloudTrail console, choose &lt;strong&gt;Event history&lt;/strong&gt; in the navigation pane. Update the &lt;strong&gt;Lookup attributes&lt;/strong&gt; to &lt;strong&gt;Event name&lt;/strong&gt; and in the search box, enter &lt;code&gt;ListBuckets&lt;/code&gt;. You should see a list of events, as shown in the following screenshot (it might take up to 5 minutes for the logs to be available in CloudTrail).&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114333" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-list-events-ct.png" alt="screenshot showing list of cloudtrail events" width="1424" height="601"&gt;&lt;/p&gt; 
&lt;p&gt;Choose the event to view its details (verify the user name is &lt;strong&gt;SageMaker&lt;/strong&gt; if you have also listed buckets through the AWS console or APIs). In the event details, you should be able to see an additional field called &lt;code&gt;onBehalfOf&lt;/code&gt; that has the user’s identity.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114328" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ml-19006-ct-event.png" alt="screenshot showing cloudtrail event details with the onBehalfOf field highlighted" width="1422" height="749"&gt;&lt;/p&gt; 
&lt;p&gt;Supported services and SageMaker AI features called from a trusted identity propagation-enabled SageMaker Studio domain will have the &lt;code&gt;OnBehalfOf&lt;/code&gt; field in CloudTrail.&lt;/p&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;If you have created a SageMaker Studio domain for the purposes of trying out trusted identity propagation, delete the domain and its associated &lt;a href="https://aws.amazon.com/efs/" target="_blank" rel="noopener noreferrer"&gt;Amazon Elastic File System&lt;/a&gt; (Amazon EFS) volume to avoid incurring additional charges. Before deleting a domain, you must delete all the users and their associated spaces and applications. For detailed instructions, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-updated-running-stop.html" target="_blank" rel="noopener noreferrer"&gt;Stop and delete your Studio running applications and spaces&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you created a SageMaker training job, they are ephemeral, and the compute is shut down automatically when the job is complete.&lt;/p&gt; 
&lt;p&gt;Athena is a serverless analytics service that charges per query billing. No cleanup is necessary, but for best practices, &lt;a href="https://docs.aws.amazon.com/athena/latest/ug/deleting-workgroups.html" target="_blank" rel="noopener noreferrer"&gt;delete the workgroup&lt;/a&gt; to remove unused resources.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this post, we showed you how to enable trusted identity propagation for SageMaker AI domains that use IAM Identity Center as the mode of authentication. With trusted identity propagation, administrators can manage user authorization to other AWS services through the user’s physical identity in conjunction with IAM roles. Administrators can streamline permissions management by maintaining a single domain execution role and manage granular access to other AWS services and data sources through the user’s identity. In addition, trusted identity propagation supports auditing, so administrators can track user activity without the need for managing a role for each user profile.&lt;/p&gt; 
&lt;p&gt;To learn more about enabling this feature and its use cases, see &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/trustedidentitypropagation-integrations.html" target="_blank" rel="noopener noreferrer"&gt;Trusted identity propagation use cases&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/trustedidentitypropagation.html" target="_blank" rel="noopener noreferrer"&gt;Trusted identity propagation with Studio&lt;/a&gt;. This post covered a subset of supported applications; we encourage you to check out the documentation and choose the services that best serve your use case and share your feedback!&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-114323 size-thumbnail alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/ajjaisin-100x115.png" alt="author-ajjaisin" width="100" height="115"&gt;&lt;strong&gt;Amit Shyam Jaisinghani&lt;/strong&gt; is a Software Engineer on the SageMaker Studio team at Amazon Web Services, and he earned his Master’s degree in Computer Science from Rochester Institute of Technology. Since joining Amazon in 2019, he has built and enhanced several AWS services, including AWS WorkSpaces and Amazon SageMaker Studio. Outside of work, he explores hiking trails, plays with his two cats, Missy and Minnie, and enjoys playing Age of Empire.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-114336 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/surydurg-100x100.png" alt="author-surydurg" width="100" height="100"&gt;Durga Sury&lt;/strong&gt; is a Senior Solutions Architect at Amazon SageMaker, where she helps enterprise customers build secure and scalable AI/ML systems. When she’s not architecting solutions, you can find her enjoying sunny walks with her dog, immersing herself in murder mystery books, or catching up on her favorite Netflix shows.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-114324 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/khushbsr.png" alt="author-khushbsr" width="100" height="100"&gt;Khushboo Srivastava&lt;/strong&gt; is a Senior Product Manager for Amazon SageMaker. She enjoys building products that simplify machine learning workflows for customers, and loves playing with her 1-year old daughter.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-114325 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/13/kmaniva-100x111.png" alt="author-kmaniva" width="100" height="111"&gt;Krishnan Manivannan&lt;/strong&gt; is a Senior Software Engineer at Amazon Web Services and a founding member of the SageMaker AI API team. He has 8 years of experience in the architecture and security of large-scale machine learning services. His specialties include API design, service scalability, identity and access management, and inventing new approaches for building and operating distributed systems. Krishnan has led multiple engineering efforts from design through global launch, delivering reliable and secure systems for customers worldwide.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Benchmarking document information localization with Amazon Nova</title>
		<link>https://aws.amazon.com/blogs/machine-learning/benchmarking-document-information-localization-with-amazon-nova/</link>
					
		
		<dc:creator><![CDATA[Ryan Razkenari]]></dc:creator>
		<pubDate>Tue, 19 Aug 2025 18:17:36 +0000</pubDate>
				<category><![CDATA[Advanced (300)]]></category>
		<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Nova]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Generative AI]]></category>
		<category><![CDATA[Technical How-to]]></category>
		<guid isPermaLink="false">a5a180f1a3fa1d0a64bcaffbcfcb7473f0b54933</guid>

					<description>This post demonstrates how to use foundation models (FMs) in Amazon Bedrock, specifically Amazon Nova Pro, to achieve high-accuracy document field localization while dramatically simplifying implementation. We show how these models can precisely locate and interpret document fields with minimal frontend effort, reducing processing errors and manual intervention.</description>
										<content:encoded>&lt;p&gt;Every day, enterprises process thousands of documents containing critical business information. From invoices and purchase orders to forms and contracts, accurately locating and extracting specific fields has traditionally been one of the most complex challenges in document processing pipelines. Although optical character recognition (OCR) can tell us what text exists in a document, determining where specific information is located has required sophisticated computer vision solutions.&lt;/p&gt; 
&lt;p&gt;The evolution of this field illustrates the complexity of the challenge. Early object detection approaches like &lt;a href="https://arxiv.org/abs/1506.02640" target="_blank" rel="noopener noreferrer"&gt;YOLO (You Only Look Once)&lt;/a&gt; revolutionized the field by reformulating object detection as a regression problem, enabling real-time detection. &lt;a href="https://arxiv.org/abs/1708.02002v2" target="_blank" rel="noopener noreferrer"&gt;RetinaNet&lt;/a&gt; advanced this further by addressing class imbalance issues through Focal Loss, and &lt;a href="https://arxiv.org/abs/2005.12872" target="_blank" rel="noopener noreferrer"&gt;DETR&lt;/a&gt; introduced transformer-based architectures to minimize hand-designed components. However, these approaches shared common limitations: they required extensive training data, complex model architectures, and significant expertise to implement and maintain.&lt;/p&gt; 
&lt;p&gt;The emergence of multimodal large language models (LLMs) represents a paradigm shift in document processing. These models combine advanced vision understanding with natural language processing capabilities, offering several groundbreaking advantages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimized use of specialized computer vision architectures&lt;/li&gt; 
 &lt;li&gt;Zero-shot capabilities without the need for supervised learning&lt;/li&gt; 
 &lt;li&gt;Natural language interfaces for specifying location tasks&lt;/li&gt; 
 &lt;li&gt;Flexible adaptation to different document types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This post demonstrates how to use foundation models (FMs) in &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt;, specifically &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova Pro&lt;/a&gt;, to achieve high-accuracy document field localization while dramatically simplifying implementation. We show how these models can precisely locate and interpret document fields with minimal frontend effort, reducing processing errors and manual intervention. Through comprehensive benchmarking on the &lt;a href="https://arxiv.org/abs/2311.11856" target="_blank" rel="noopener noreferrer"&gt;FATURA dataset&lt;/a&gt;, we provide benchmarking of performance and practical implementation guidance.&lt;/p&gt; 
&lt;h2&gt;Understanding document information localization&lt;/h2&gt; 
&lt;p&gt;Document information localization goes beyond traditional text extraction by identifying the precise spatial position of information within documents. Although OCR tells us what text exists, localization tells us where specific information resides—a crucial distinction for modern document processing workflows. This capability enables critical business operations ranging from automated quality checks and sensitive data redaction to intelligent document comparison and validation.&lt;/p&gt; 
&lt;p&gt;Traditional approaches to this challenge relied on a combination of rule-based systems and specialized computer vision models. These solutions often required extensive training data, careful template matching, and continuous maintenance to handle document variations. Financial institutions, for instance, would need separate models and rules for each type of invoice or form they processed, making scalability a significant challenge. Multimodal models with localization capabilities available on Amazon Bedrock fundamentally change this paradigm. Rather than requiring complex computer vision architectures or extensive training data, these multimodal LLMs can understand both the visual layout and semantic meaning of documents through natural language interactions. By using models with the capability to localize, organizations can implement robust document localization with significantly reduced technical overhead and greater adaptability to new document types.&lt;/p&gt; 
&lt;p&gt;Multimodal models with localization capabilities, such as those available on Amazon Bedrock, fundamentally change this paradigm. Rather than requiring complex computer vision architectures or extensive training data, these multimodal LLMs can understand both the visual layout and semantic meaning of documents through natural language interactions. By using models with the capability to localize, organizations can implement robust document localization with significantly reduced technical overhead and greater adaptability to new document types.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;We designed a simple localization solution that takes a document image and text prompt as input, processes it through selected FMs on Amazon Bedrock, and returns the field locations using either absolute or normalized coordinates. The solution implements two distinct prompting strategies for document field localization:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Image dimension strategy&lt;/strong&gt; – Works with absolute pixel coordinates, providing explicit image dimensions and requesting bounding box locations based on the document’s actual size&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scaled coordinate strategy&lt;/strong&gt; – Uses a normalized 0–1000 coordinate system, making it more flexible across different document sizes and formats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The solution has a modular design to allow for straightforward extension to support custom field schemas through configuration updates rather than code changes. This flexibility, combined with the scalability of Amazon Bedrock, makes the solution suitable for both small-scale document processing and enterprise-wide deployment. In the following sections, we demonstrate the setup and implementation strategies used in our solution for document field localization using Amazon Bedrock FMs. You can see more details in our &lt;a href="https://github.com/aws-samples/sample-document-information-localization" target="_blank" rel="noopener noreferrer"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;For this walkthrough, you should have the following prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An &lt;a href="https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fportal.aws.amazon.com%2Fbilling%2Fsignup%2Fresume&amp;amp;client_id=signup" target="_blank" rel="noopener noreferrer"&gt;AWS account&lt;/a&gt; with Amazon Bedrock access&lt;/li&gt; 
 &lt;li&gt;Permissions to use Amazon Nova Pro&lt;/li&gt; 
 &lt;li&gt;Python 3.8+ with the boto3 library installed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Initial set ups&lt;/h3&gt; 
&lt;p&gt;Complete the following setup steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configure the Amazon Bedrock runtime client with appropriate retry logic and timeout settings:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div class="code-block"&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import boto3
from botocore.config import Config

# Configure Bedrock client with retry logic
BEDROCK_CONFIG = Config(
    region_name='us-west-2',
    signature_version='v4',
    read_timeout=500,
    retries={
        'max_attempts': 10,
        'mode': 'adaptive'
    }
)

# Initialize Bedrock runtime client
bedrock_runtime = boto3.client("bedrock-runtime", config=BEDROCK_CONFIG)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Define your field configuration to specify which elements to locate in your documents:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div class="code-block"&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;# sample config
field_config = {
    "invoice_number": {"type": "string", "required": True},
    "total_amount": {"type": "currency", "required": True},
    "date": {"type": "date", "required": True}
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Initialize the &lt;code&gt;BoundingBoxExtractor&lt;/code&gt; with your chosen model and strategy:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div class="code-block"&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;extractor = BoundingBoxExtractor(
    model_id=NOVA_PRO_MODEL_ID,  # or other FMs on Amazon Bedrock
    prompt_template_path="path/to/prompt/template",
    field_config=field_config,
    norm=None  # Set to 1000 for scaled coordinate strategy
)

# Process a document    
bboxes, metadata = extractor.get_bboxes(
    document_image=document_image,
    document_key="invoice_001" # Optional tracking key
)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Implement prompting strategies&lt;/h2&gt; 
&lt;p&gt;We test two prompt strategies in this workflow: image dimension and scaled coordinate.&lt;/p&gt; 
&lt;p&gt;The following is a sample prompt template for the image dimension strategy:&lt;/p&gt; 
&lt;div class="code-block"&gt; 
 &lt;pre&gt;&lt;code class="language-text"&gt;"""
Your task is to detect and localize objects in images with high precision.
Analyze each provided image (width = {w} pixels, height = {h} pixels) and return only a JSON object with bounding box data for detected objects.

Output Requirements:
1. Use absolute pixel coordinates based on provided width and height.
2. Ensure high accuracy and tight-fitting bounding boxes.

Detected Object Structure:
- "element": Use one of these labels exactly: {elements}
- "bbox": Array with coordinates [x1, y1, x2, y2] in absolute pixel values.

JSON Structure:
```json
{schema}
```

Provide only the specified JSON format without extra information.
"""&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;The following is a sample prompt template for the scaled coordinate strategy:&lt;/p&gt; 
&lt;div class="code-block"&gt; 
 &lt;pre&gt;&lt;code class="language-text"&gt;"""
Your task is to detect and localize objects in images with high precision.
Analyze each provided image and return only a JSON object with bounding box data for detected objects.

Output Requirements:
Use (x1, y1, x2, y2) format for bounding box coordinates, scaled between 0 and 1000.

Detected Object Structure:
- "element": Use one of these labels exactly: {elements}
- "bbox": Array [x1, y1, x2, y2] scaled between 0 and 1000.

JSON Structure:
```json
{schema}
```

Provide only the specified JSON format without extra information.
"""&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Evaluate performance&lt;/h2&gt; 
&lt;p&gt;We implement evaluation metrics to monitor accuracy:&lt;/p&gt; 
&lt;div class="code-block"&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;evaluator = BBoxEvaluator(field_config=field_config)
evaluator.set_iou_threshold(0.5)  # Adjust based on requirements
evaluator.set_margin_percent(5)   # Tolerance for position matching

# Evaluate predictions
results = evaluator.evaluate(predictions, ground_truth)
print(f"Mean Average Precision: {results['mean_ap']:.4f}")&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;This implementation provides a robust foundation for document field localization while maintaining flexibility for different use cases and document types. The choice between image dimension and scaled coordinate strategies depends on your specific accuracy requirements and document variation.&lt;/p&gt; 
&lt;h2&gt;Benchmarking results&lt;/h2&gt; 
&lt;p&gt;We conducted our benchmarking study using FATURA, a public invoice dataset specifically designed for document understanding tasks. The dataset comprises 10,000 single-page invoices saved as JPEG images, representing 50 distinct layout templates with 200 invoices per template. Each document is annotated with 24 key fields, including invoice numbers, dates, line items, and total amounts. The annotations provide both the text values and precise bounding box coordinates in JSON format, making it ideal for evaluating field localization tasks. The dataset has the following key characteristics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documents: 10,000 invoices (JPEG format)&lt;/li&gt; 
 &lt;li&gt;Templates: 50 distinct layouts (200 documents each)&lt;/li&gt; 
 &lt;li&gt;Fields per document: 24 annotated fields&lt;/li&gt; 
 &lt;li&gt;Annotation format: JSON with bounding boxes and text values&lt;/li&gt; 
 &lt;li&gt;Field types: Invoice numbers, dates, addresses, line items, amounts, taxes, totals&lt;/li&gt; 
 &lt;li&gt;Image resolution: Standard A4 size at 300 DPI&lt;/li&gt; 
 &lt;li&gt;Language: English&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following figure shows sample invoice templates showcasing layout variation.&lt;/p&gt; 
&lt;div style="justify-content: space-between;margin: 20px 0"&gt;
 &lt;img class="invoice-sample" style="width: 25%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-4-sample-docs.png" alt="Invoice Template 1"&gt;
 &lt;img class="invoice-sample" style="width: 25%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-3-sample-docs.png" alt="Invoice Template 2"&gt;
 &lt;img class="invoice-sample" style="width: 25%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-2-sample-docs.png" alt="Invoice Template 3"&gt;
 &lt;img class="invoice-sample" style="width: 25%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-1-sample-docs.png" alt="Invoice Template 4"&gt;
&lt;/div&gt; 
&lt;p&gt;The following figure is an example of annotation visualization.&lt;/p&gt; 
&lt;div style="justify-content: space-between;margin: 20px 0"&gt;
 &lt;img class="invoice-sample" style="width: 48%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-5-sample-results.png" alt="Sample Results 1"&gt;
 &lt;img class="invoice-sample" style="width: 48%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-6-sample-results.png" alt="Sample Results 2"&gt;
&lt;/div&gt; 
&lt;p&gt;Before conducting the full-scale benchmark, we performed an initial experiment to determine the optimal prompting strategy. We selected a representative subset of 50 images, comprising 5 samples from 10 different templates, and evaluated three distinct approaches:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image dimension: 
  &lt;ul&gt; 
   &lt;li&gt;Method: Provides explicit pixel dimensions and requests absolute coordinate bounding boxes&lt;/li&gt; 
   &lt;li&gt;Input: Image bytes, image dimensions, output schema&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Scaled coordinate: 
  &lt;ul&gt; 
   &lt;li&gt;Method: Uses normalized 0-1000 coordinate system&lt;/li&gt; 
   &lt;li&gt;Input: Image bytes, output schema&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Added gridlines: 
  &lt;ul&gt; 
   &lt;li&gt;Method: Enhances image with visual gridlines at fixed intervals&lt;/li&gt; 
   &lt;li&gt;Input: Modified image with gridlines bytes, image dimensions, output schema&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following figure compares performance for different approaches for Mean Average Precision (mAP).&lt;/p&gt; 
&lt;div style="margin: 20px 0"&gt;
 &lt;img loading="lazy" class="alignnone wp-image-112804 size-full" style="width: 100%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18377-nova_pro_mean_ap_distribution.png" alt="Mean AP Distribution" width="2669" height="1786"&gt;
&lt;/div&gt; 
&lt;p&gt;Building on insights from our initial strategy evaluation, we conducted benchmarking using the complete FATURA dataset of 10,000 documents. We employed the scaled coordinate approach for Amazon Nova models, based on their respective optimal performance characteristics from our initial testing. Our evaluation framework assessed Amazon Nova Pro through standard metrics, including Intersection over Union (IoU) and Average Precision (AP). The evaluation spanned all 50 distinct invoice templates, using an IoU threshold of 0.5 and a 5% margin tolerance for field positioning.&lt;/p&gt; 
&lt;p&gt;The following are our sample results in JSON:&lt;/p&gt; 
&lt;div class="code-block"&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
    "template": "template1",
    "instance": "Instance0",
    "metrics": {
        "mean_ap": 0.8421052631578947,
        "field_scores": {
            "TABLE": [0.9771107575829314, 1.0, 1.0, 1.0, 1.0],
            "BUYER": [0.3842328422050217, 0.0, 0.0, 0, 0.0],
            "DATE": [0.9415158516000428, 1.0, 1.0, 1.0, 1.0],
            "DISCOUNT": [0.8773709977744115, 1.0, 1.0, 1.0, 1.0],
            "DUE_DATE": [0.9338410331219548, 1.0, 1.0, 1.0, 1.0],
            "GSTIN_BUYER": [0.8868145680064249, 1.0, 1.0, 1.0, 1.0],
            "NOTE": [0.7926162009357707, 1.0, 1.0, 1.0, 1.0],
            "PAYMENT_DETAILS": [0.9517931284002012, 1.0, 1.0, 1.0, 1.0],
            "PO_NUMBER": [0.8454266053075804, 1.0, 1.0, 1.0, 1.0],
            "SELLER_ADDRESS": [0.9687004508445741, 1.0, 1.0, 1.0, 1.0],
            "SELLER_EMAIL": [0.8771026147909002, 1.0, 1.0, 1.0, 1.0],
            "SELLER_SITE": [0.8715647216012751, 1.0, 1.0, 1.0, 1.0],
            "SUB_TOTAL": [0.8049954543667662, 1.0, 1.0, 1.0, 1.0],
            "TAX": [0.8751563641702513, 1.0, 1.0, 1.0, 1.0],
            "TITLE": [0.850667327423512, 1.0, 1.0, 1.0, 1.0],
            "TOTAL": [0.7226784112051814, 1.0, 1.0, 1.0, 1.0],
            "TOTAL_WORDS": [0.9099353099528785, 1.0, 1.0, 1.0, 1.0],
            "GSTIN_SELLER": [0.87170328009624, 1.0, 1.0, 1.0, 1.0],
            "LOGO": [0.679425211111111, 1.0, 1.0, 1.0, 1.0]
        }
    },
    "metadata": {
        "usage": {
            "inputTokens": 2250,
            "outputTokens": 639,
            "totalTokens": 2889
        },
        "metrics": {
            "latencyMs": 17535
        }
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;The following figure is an example of successful localization for Amazon Nova Pro.&lt;/p&gt; 
&lt;div style="margin: 20px auto;width: 70%"&gt;
 &lt;img loading="lazy" class="alignnone size-full wp-image-112358" style="width: 100%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-7-sample-results.png" alt="" width="595" height="841"&gt;
&lt;/div&gt; 
&lt;p&gt;The results demonstrate Amazon Nova Pro’s strong performance in document field localization. Amazon Nova Pro achieved a mAP of 0.8305. It demonstrated consistent performance across various document layouts, achieving a mAP above 0.80 across 45 of 50 templates, with the lowest template-specific mAP being 0.665. Although Amazon Nova Pro showed relatively high processing failures (170 out of 10,000 images), it still maintained high overall performance. Most low AP results were attributed to either complete processing failures (particularly over-refusal by its guardrail filters and malformed JSON output) or field misclassifications (particularly confusion between similar fields, such as buyer vs. seller addresses).&lt;/p&gt; 
&lt;p&gt;The following table summarizes the overall performance metrics.&lt;/p&gt; 
&lt;table class="styled-table" border="1px" cellpadding="10px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;strong&gt;Mean IoU&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;strong&gt;Mean AP&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;Amazon Nova Pro&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;0.7423&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;0.8331&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The following graph shows the performance distribution for each individual extraction of approximately 20 labels for 10,000 documents.&lt;/p&gt; 
&lt;div style="margin: 20px 0"&gt;
 &lt;img loading="lazy" class="alignnone wp-image-112803 size-full" style="width: 100%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18377-nova_pro_iou_distribution.png" alt="" width="2669" height="1768"&gt;
&lt;/div&gt; 
&lt;p&gt;Field-specific analysis reveals that Amazon Nova Pro excels at locating structured fields like invoice numbers and dates, consistently achieving precision and recall scores above 0.85. It demonstrates particularly strong performance with text fields, maintaining robust accuracy even when dealing with varying currency formats and decimal representations. This resilience to format variations makes it especially valuable for processing documents from multiple sources or regions.&lt;/p&gt; 
&lt;p&gt;The following graph summarizes field-specific performance. The graph shows AP success percentage for each label, across all documents for each model. It is sorted by highest success.&lt;/p&gt; 
&lt;div style="margin: 20px 0"&gt;
 &lt;img loading="lazy" class="alignnone wp-image-112805 size-full" style="width: 100%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18377-nova_pro_results.png" alt="" width="2669" height="1768"&gt;
&lt;/div&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;This benchmarking study demonstrates the significant advances in document field localization by multimodal FMs. Through comprehensive testing on the FATURA dataset, we’ve shown that these models can effectively locate and extract document fields with minimal setup effort, dramatically simplifying traditional computer vision workflows. Amazon Nova Pro emerges as an excellent choice for enterprise document processing, delivering a mAP of 0.8305 with consistent performance across diverse document types. Looking ahead, we see several promising directions for further optimization. Future work could explore extending the solution in agentic workflows to support more complex document types and field relationships.&lt;/p&gt; 
&lt;p&gt;To get started with your own implementation, you can find the complete solution code in our &lt;a href="https://github.com/aws-samples/sample-document-information-localization" target="_blank" rel="noopener noreferrer"&gt;GitHub repository&lt;/a&gt;. We also recommend reviewing the &lt;a href="https://docs.aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock documentation&lt;/a&gt; for the latest model capabilities and best practices.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-112361 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-image-11.jpeg" alt="" width="120" height="160"&gt; &lt;strong&gt;Ryan Razkenari&lt;/strong&gt;&amp;nbsp;is a Deep Learning Architect at the AWS Generative AI Innovation Center, where he uses his expertise to create cutting-edge AI solutions. With a strong background in AI and analytics, he is passionate about building innovative technologies that address real-world challenges for AWS customers.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-112362 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-image-12.jpeg" alt="" width="120" height="160"&gt;Harpreet Cheema &lt;/strong&gt;is a Deep Learning Architect at the AWS Generative AI Innovation Center. He is very passionate in the field of machine learning and in tackling different problems in the ML domain. In his role, he focuses on developing and delivering Generative AI focused solutions for real-world applications.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-112363 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-image-13.jpeg" alt="" width="120" height="160"&gt;Spencer Romo&lt;/strong&gt; is a Senior Data Scientist with extensive experience in deep learning applications. He specializes in intelligent document processing while maintaining broad expertise in computer vision, natural language processing, and signal processing. Spencer’s innovative work in remote sensing has resulted in multiple patents. Based in Austin, Texas, Spencer loves working directly with customers to understand their unique problems and identify impactful AI solutions. Outside of work, Spencer competes in 24 Hours of Lemons racing series, embracing the challenge of high-performance driving on a budget.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-112364 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-image-14.jpeg" alt="" width="120" height="160"&gt;Mun Kim&lt;/strong&gt;&amp;nbsp;is a Machine Learning Engineer at the AWS Generative AI Innovation Center. Mun brings expertise in building machine learning science and platform that help customers harness the power of generative AI technologies. He works closely with AWS customers to accelerate their AI adoption journey and unlock new business value.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-112365 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/26/ML-18377-image-15.jpeg" alt="" width="120" height="160"&gt;Wan Chen&lt;/strong&gt; is an Applied Science Manager at the Generative AI Innovation Center. As a ML/AI veteran in tech industry, she has wide range of expertise on traditional machine learning, recommender system, deep learning and Generative AI. She is a stronger believer of Superintelligence, and is very passionate to push the boundary of AI research and application to enhance human life and drive business growth. She holds Ph.D in Applied Mathematics from University of British Columbia, and had worked as postdoctoral fellow in Oxford University.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>How Infosys built a generative AI solution to process oil and gas drilling data with Amazon Bedrock</title>
		<link>https://aws.amazon.com/blogs/machine-learning/how-infosys-built-a-generative-ai-solution-to-process-oil-and-gas-drilling-data-with-amazon-bedrock/</link>
					
		
		<dc:creator><![CDATA[Dhiraj Thakur]]></dc:creator>
		<pubDate>Tue, 19 Aug 2025 18:04:25 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Machine Learning]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Energy (Oil & Gas)]]></category>
		<category><![CDATA[Generative AI]]></category>
		<category><![CDATA[Partner solutions]]></category>
		<guid isPermaLink="false">acb56cc97880f74e0fe2bf1bcf0e26f9b0742a50</guid>

					<description>We built an advanced RAG solution using Amazon Bedrock leveraging Infosys Topaz™ AI capabilities, tailored for the oil and gas sector. This solution excels in handling multimodal data sources, seamlessly processing text, diagrams, and numerical data while maintaining context and relationships between different data elements. In this post, we provide insights on the solution and walk you through different approaches and architecture patterns explored, like different chunking, multi-vector retrieval, and hybrid search during the development.</description>
										<content:encoded>&lt;p&gt;Enterprises across industries like healthcare, finance, manufacturing, and legal services face escalating challenges in processing vast amounts of multimodal data that combines text, images, charts, and complex technical formats. As organizations generate multimodal content at unprecedented speed and scale, document processing methods increasingly fail to handle the intricacies of specialized domains where technical terminology, interconnected data relationships, and industry-specific formats create operational bottlenecks. These conventional (non-AI) processing approaches struggle with the unique characteristics of enterprise documents: highly technical terminology, complex multimodal data formats, and interconnected information spread across various document types. This results in inefficient data extraction, missed insights, and time-consuming manual processing that hinders organizational productivity and decision-making.One such industry example is oil and gas, which generates vast amounts of complex technical data through drilling operations, presenting significant challenges in data processing and knowledge extraction. These documents, such as detailed well completion reports, drilling logs, and intricate lithology diagrams, contain crucial information that drives operational decisions and strategic planning.&lt;/p&gt; 
&lt;p&gt;To overcome such challenges, we built an advanced RAG solution using &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt; leveraging &lt;a href="https://www.infosys.com/services/data-ai-topaz.html" target="_blank" rel="noopener noreferrer"&gt;Infosys Topaz&lt;/a&gt;&lt;img src="https://s.w.org/images/core/emoji/14.0.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;"&gt; AI capabilities, tailored for the oil and gas sector. This solution excels in handling multimodal data sources, seamlessly processing text, diagrams, and numerical data while maintaining context and relationships between different data elements. The specialized approach helps organizations unlock valuable insights from their technical documentation, streamline their workflows, and make more informed decisions based on comprehensive data analysis.&lt;/p&gt; 
&lt;p&gt;In this post, we provide insights on the solution and walk you through different approaches and architecture patterns explored, like different chunking, multi-vector retrieval, and hybrid search during the development.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;The solution is built using AWS services, including &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Nova Pro&lt;/a&gt;, &lt;a href="https://aws.amazon.com/bedrock/knowledge-bases/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Knowledge Bases&lt;/a&gt;, &lt;a href="https://aws.amazon.com/opensearch-service/serverless-vector-database/" target="_blank" rel="noopener noreferrer"&gt;Amazon OpenSearch Serverless as a Vector Database&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/titan-embedding-models.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Titan Text Embeddings&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters-embed.html" target="_blank" rel="noopener noreferrer"&gt;Cohere Embed English model&lt;/a&gt;, and BGE Reranker, allowing for scalability and cost-effectiveness. We also used &lt;a href="https://aws.amazon.com/q/developer/" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Developer&lt;/a&gt;, an AI-powered assistant for software development for frontend and backend development of our solution powered by Infosys Topaz’s generative AI capabilities. The solution uses distributed processing to handle large volumes of data, so the system can handle a high volume of requests without compromising performance. The real-time indexing system allows for new documents to be incorporated into the system as soon as they are available, so that the information is up-to-date.&lt;/p&gt; 
&lt;p&gt;The following are some of the key components of the solution:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Document processing&lt;/strong&gt; – PyMuPDF for PDF parsing, OpenCV for image processing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Embedding generation&lt;/strong&gt; – Cohere Embed English on Amazon Bedrock for generating vector embeddings of document content and user queries. A hierarchical parent-child chunking architecture that preserves document structure and contextual relationships.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vector storage&lt;/strong&gt; – &lt;a href="https://aws.amazon.com/opensearch-service/features/serverless/" target="_blank" rel="noopener noreferrer"&gt;Amazon OpenSearch Serverless&lt;/a&gt; for hybrid search capabilities combining semantic vector search with traditional keyword search (although Amazon Bedrock Knowledge Bases provides a managed RAG solution, this implementation uses a custom RAG architecture to deliver enhanced value and flexibility). This multi-vector retrieval mechanism with separate embedding spaces was required for maintaining the context between textual and visual data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt; – Amazon Nova model for domain-specific response generation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reranking&lt;/strong&gt; – BGE reranker, for improving search result relevance by reordering retrieved documents based on semantic similarity to the query.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following diagram is a high-level overview of the architecture of the solution.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113119" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/04/image-1-3.png" alt="Architecture Diagram" width="1242" height="803"&gt;&lt;/p&gt; 
&lt;p&gt;Many approaches were used during the build phase to get the desired accuracy. In the following sections, we discuss these approaches in detail.&lt;/p&gt; 
&lt;h2&gt;RAG exploration and initial approach&lt;/h2&gt; 
&lt;p&gt;The following figure shows some sample images from the oil and well drilling reports. The image on the left is a performance chart of a well drilling operation with the details of the drilling instrument. The image on the top right is of the split sections of the drilling instrument, followed below by the drilling data in a tabular form.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113120" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/04/image-2-3.png" alt="Drilling Data" width="730" height="628"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Image Source : &lt;a href="https://public.neats.nopta.gov.au/nopims/wells" target="_blank" rel="noopener noreferrer"&gt;Wells Search | NEATS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;© Commonwealth of Australia [&lt;em&gt;year&lt;/em&gt; of publishing- 2018]&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Over a thousand such technical images (including lithology diagrams, well completion charts, and drilling visualizations) were preprocessed using Amazon Nova Pro, a multimodal language model. An iterative prompting strategy was employed to generate comprehensive descriptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Initial image analysis to extract basic technical elements&lt;/li&gt; 
 &lt;li&gt;Refined prompting with domain-specific context to capture specialized terminology&lt;/li&gt; 
 &lt;li&gt;Multiple inference iterations to provide completeness and accuracy of technical descriptions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This process converted visual technical information into detailed textual descriptions that preserve the original technical context.The process included the following key components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Text content processing&lt;/strong&gt; – The textual content from drilling reports was processed using Amazon Titan Text Embedding v2 model with: 
  &lt;ul&gt; 
   &lt;li&gt;Fixed-size chunking of 1,500 tokens with 100-token overlap&lt;/li&gt; 
   &lt;li&gt;Preservation of original document structure and technical relationships&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image content integration&lt;/strong&gt;– The detailed image descriptions generated were integrated without chunking to maintain complete technical context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vector storage&lt;/strong&gt; – The processed content (chunked text and complete image descriptions) was ingested into an OpenSearch Serverless vector database&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RAG implementation&lt;/strong&gt; – RAG-enabled semantic search and retrieval is used across both textual content and image-derived descriptions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This approach worked well with text questions but was less effective with image-related questions and finding information from images. The lack of a chunking strategy for images resulted in the entire description of each image ingested as a single unit into the search index. This made it difficult for the embedding model to pinpoint exact locations of specific information, especially for technical terms that might be buried within longer descriptions.In the following sections, we discuss the other approaches explored to overcome the limitations presented by each of the previous approaches.&lt;/p&gt; 
&lt;h2&gt;Multi-vector embeddings with ColBERT&lt;/h2&gt; 
&lt;p&gt;To use a vision model, we created multi-vector embeddings for each image. We then used the ColBERT embedding model for fine-grained text representations. User queries were converted into embeddings, and similarity scores between query and document embeddings were calculated. These embeddings were stored using tensor-based storage, and no chunking was applied. We observed the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Outcome&lt;/strong&gt; – We encountered difficulties in storing and managing the complex ColBERT embeddings in traditional vector stores. Debugging and analyzing retrieved documents became cumbersome. Despite context-rich queries, selecting the proper document pages remained challenging.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Limitations and key learnings&lt;/strong&gt; – This approach demonstrated the potential of advanced embedding techniques for image-based document retrieval. However, it also highlighted the challenges in implementing and managing such a system effectively, particularly in the complex domain of oil and gas. Overall, the use of vision models enhanced document understanding, and fine-grained representation of visual and textual content was achieved.&lt;/p&gt; 
&lt;h2&gt;Fixed chunking with Amazon Titan Embeddings&lt;/h2&gt; 
&lt;p&gt;Adopting a more traditional text-based approach, we introduced a fixed chunking strategy. PDF pages were converted to images, and text content was extracted from these images. A fixed chunking strategy of 500 tokens per chunk was implemented. We used Amazon Bedrock Knowledge Bases with OpenSearch Serverless vector storage, upgraded to Amazon Titan Embeddings v2, and retained the Amazon Nova Pro model. We observed the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Outcome&lt;/strong&gt; – The ability to find and retrieve information based on technical keyword searches improved. More focused chunks allowed for a more accurate representation of specific concepts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Limitations and key learnings&lt;/strong&gt; – Providing comprehensive, long-form answers was challenging. Rigid chunking sometimes split related information across different chunks. This approach underscored the importance of balancing chunk size with information coherence, improving our handling of technical terms but highlighting the need for more sophisticated chunking strategies to maintain context.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Parent-child hierarchy with Cohere Embeddings&lt;/h2&gt; 
&lt;p&gt;Building on our previous learnings, we introduced a more sophisticated chunking strategy using a parent-child hierarchy. PDF pages were converted to images and text was extracted. We implemented a parent-child chunking hierarchy with parent chunks of 1,500 tokens and child chunks of 512 tokens. We switched to Cohere English embeddings, used Amazon Bedrock Knowledge Bases and OpenSearch Serverless vector storage, and continued using the Amazon Nova Pro model. We observed the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Outcome&lt;/strong&gt; – This approach balanced the need for context with the ability to pinpoint specific information. It significantly improved the ability to answer a wide range of queries, maintaining context while offering precise information retrieval.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Limitations and key learnings&lt;/strong&gt; – Careful structuring of content significantly enhanced the performance of both embedding and QnA models. The parent-child structure proved particularly effective for handling the complex, nested nature of oil and gas documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Hybrid search with optimized chunking&lt;/h2&gt; 
&lt;p&gt;Our final approach retained the advanced features of the previous method while introducing a crucial change in the search methodology. PDF pages were converted to images and text was extracted. We implemented a hybrid search system within the Amazon Bedrock knowledge base. The parent-child chunking hierarchy was retained with parent chunks of 1,200 tokens and child chunks of 512 tokens. We continued using Cohere English embeddings and the Amazon Nova Pro model, and implemented a BGE reranker to refine search results. We observed the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Outcome&lt;/strong&gt; – This approach combined the strengths of semantic search and traditional keyword-based search. It addressed the limitations of purely embedding-based searches and improved the handling of specific technical terms and exact phrases.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Limitations and key learnings&lt;/strong&gt; – This final approach represents a highly evolved RAG system, offering the best of both worlds: the ability to understand context and nuance through embeddings, and the precision of keyword matching for specific technical queries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are some of the tangible results of the hybrid strategy:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Average query response time: Less than 2 seconds&lt;/li&gt; 
 &lt;li&gt;Retrieval accuracy (measured against human expert baseline): 92%&lt;/li&gt; 
 &lt;li&gt;User satisfaction rating: 4.7/5 based on feedback from field engineers and geologists&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Hybrid RAG approach and optimization strategy&lt;/h2&gt; 
&lt;p&gt;Let’s explore the key components and strategies that make the final approach effective for oil and gas drilling reports. Each of the following sections outlines the differentiators in the solution.&lt;/p&gt; 
&lt;h3&gt;Multimodal processing capabilities&lt;/h3&gt; 
&lt;p&gt;The solution is designed to handle the diverse types of information found in oil and gas documents. The system processes both textual content (technical jargon, well logs, production figures) and visual elements (well schematics, seismic charts, lithology graphs) while maintaining contextual relationships between them. This makes sure that when processing a well completion report, the system can extract key parameters from text, analyze accompanying schematics, and link textual formation descriptions to their visual representations in lithology charts.For example, when processing a well completion report, the system can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Extract key parameters from the text (such as total depth and casing sizes)&lt;/li&gt; 
 &lt;li&gt;Analyze the accompanying well schematic&lt;/li&gt; 
 &lt;li&gt;Link textual descriptions of formations to their visual representation in lithology charts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Domain-specific vocabulary handling&lt;/h3&gt; 
&lt;p&gt;The system incorporates a comprehensive dictionary of industry terms and acronyms specific to oil and gas operations. Standard natural language processing (NLP) models often misinterpret technical terminology like “fish left in hole” or fail to recognize specialized abbreviations like “BOP” and “TVD.” By implementing domain-specific vocabulary handling, the system accurately interprets queries and maintains semantic understanding of technical concepts. This helps prevent misinterpretation of critical drilling information and provides relevant document retrieval.For example, when processing a query about “fish left in hole at 5000 ft MD,” the system understands:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;“Fish” refers to lost equipment, not an actual fish&lt;/li&gt; 
 &lt;li&gt;“MD” means measured depth&lt;/li&gt; 
 &lt;li&gt;The relevance of this information to drilling operations and potential remediation steps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hybrid hierarchy chunking strategy&lt;/h3&gt; 
&lt;p&gt;Traditional fixed-size chunking often breaks apart related technical information, losing critical context in oil and gas documents. The solution implements a hybrid hierarchy approach with parent chunks (1,200 tokens) maintaining document-level context and child chunks (512 tokens) containing detailed technical information. Dynamic chunk sizing adjusts based on content complexity, using natural language processing to identify logical break points. This preserves the integrity of technical descriptions while enabling precise information retrieval across large, complex documents.For example, when processing a well completion report, the system will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a large parent chunk for the overall well summary&lt;/li&gt; 
 &lt;li&gt;Generate smaller child chunks for specific sections like casing details or perforation intervals&lt;/li&gt; 
 &lt;li&gt;Dynamically adjust chunk size for the lithology description based on its complexity&lt;/li&gt; 
 &lt;li&gt;Implement cross-references between the casing schedule and the well schematic description&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Multi-vector retrieval implementation&lt;/h3&gt; 
&lt;p&gt;Oil and gas documents contain diverse content types that require different retrieval approaches. The system creates separate embedding spaces for text, diagrams, and numerical data, implementing dense vector search for semantic similarity and sparse vector search for exact technical terminology matches. Cross-modal retrieval connects information across different content types, and contextual query expansion automatically includes relevant industry-specific terms. This hybrid approach delivers comprehensive retrieval whether users search for conceptual information or specific technical parameters.For example, for a query like “recent gas shows in Permian Basin wells,” the system will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use dense vector search to understand the concept of “gas shows”&lt;/li&gt; 
 &lt;li&gt;Use sparse vector search to find exact matches for “Permian Basin”&lt;/li&gt; 
 &lt;li&gt;Expand the query to include related terms like “hydrocarbon indicators”&lt;/li&gt; 
 &lt;li&gt;Apply temporal filtering to focus on recent reports&lt;/li&gt; 
 &lt;li&gt;Use spatial awareness to limit results to the Permian Basin area&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Temporal and spatial awareness&lt;/h3&gt; 
&lt;p&gt;Drilling operations are inherently tied to specific locations and time periods, making context crucial for accurate information retrieval. The system incorporates understanding of well locations and operational timelines, allowing for queries that consider geographical and chronological contexts. For example, searching for “recent gas shows in Permian Basin wells” uses both temporal filtering and spatial awareness to provide relevant, location-specific results. This optimization makes sure retrieved information matches the operational context of the user’s needs.For example, when generating a response about drilling fluid properties, the system will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Retrieve relevant information from multiple sources&lt;/li&gt; 
 &lt;li&gt;Cross-check numerical values for consistency&lt;/li&gt; 
 &lt;li&gt;Use reflective prompting to make sure critical parameters are addressed&lt;/li&gt; 
 &lt;li&gt;Apply the reranking model to prioritize the most relevant and accurate information&lt;/li&gt; 
 &lt;li&gt;Present the response along with confidence scores and source citations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reflective response generation&lt;/h3&gt; 
&lt;p&gt;Technical accuracy is paramount in oil and gas operations, where incorrect information can have serious consequences. The system implements reflective prompting mechanisms that prompt the language model to critically evaluate its own responses against source documents and industry standards. Response reranking uses scoring models that evaluate technical accuracy, contextual relevance, and adherence to industry best practices. This multi-layered validation approach makes sure generated responses meet the high accuracy standards required for technical decision-making in drilling operations.&lt;/p&gt; 
&lt;h2&gt;Advanced RAG strategies&lt;/h2&gt; 
&lt;p&gt;To further enhance our system’s capabilities, we implemented several advanced RAG strategies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hypothetical document embeddings: 
  &lt;ul&gt; 
   &lt;li&gt;Generates synthetic questions based on document content&lt;/li&gt; 
   &lt;li&gt;Creates embeddings for these hypothetical questions&lt;/li&gt; 
   &lt;li&gt;Improves retrieval for complex, multi-part queries&lt;/li&gt; 
   &lt;li&gt;Particularly effective for handling what-if scenarios in drilling operations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Recursive retrieval: 
  &lt;ul&gt; 
   &lt;li&gt;Implements multi-hop information gathering&lt;/li&gt; 
   &lt;li&gt;Allows the system to follow chains of related information across multiple documents&lt;/li&gt; 
   &lt;li&gt;Essential for answering complex queries that require synthesizing information from various sources&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Semantic routing: 
  &lt;ul&gt; 
   &lt;li&gt;Intelligently routes queries to appropriate knowledge bases or document subsets&lt;/li&gt; 
   &lt;li&gt;Optimizes search efficiency by focusing on the most relevant data sources&lt;/li&gt; 
   &lt;li&gt;Crucial for handling the diverse types of documents in oil and gas operations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Query transformation: 
  &lt;ul&gt; 
   &lt;li&gt;Automatically refines and reformulates user queries for optimal retrieval&lt;/li&gt; 
   &lt;li&gt;Applies industry-specific knowledge to interpret ambiguous terms&lt;/li&gt; 
   &lt;li&gt;Breaks down complex queries into series of simpler, more targeted searches&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, for a complex query like “Compare the production decline rates of horizontal wells in the Eagle Ford to those in the Bakken over the last 5 years,” the system will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use hypothetical document embeddings to generate relevant sub-questions about decline rates, horizontal wells, and specific formations&lt;/li&gt; 
 &lt;li&gt;Apply recursive retrieval to gather data from production reports, geological surveys, and economic analyses&lt;/li&gt; 
 &lt;li&gt;Route different aspects of the query to appropriate knowledge bases (such as separate databases for Eagle Ford and Bakken data)&lt;/li&gt; 
 &lt;li&gt;Transform the query into a series of more specific searches, considering factors like well completion techniques and reservoir characteristics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Business outcome&lt;/h2&gt; 
&lt;p&gt;The implementation of this advanced RAG solution has delivered significant business value for oil and gas operations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Operational efficiency&lt;/strong&gt; – Significant reduction in decision-making time for drilling and field engineers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost optimization&lt;/strong&gt; – 40–50% decrease in manual document processing costs through automated information extraction&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced productivity&lt;/strong&gt; – Field engineers and geologists spend 60% less time searching for technical information, focusing instead on high-value analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Risk mitigation&lt;/strong&gt; – Consistent 92% retrieval accuracy provides reliable access to critical technical knowledge, reducing operational decision risks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;Our journey in developing this advanced RAG solution for the oil and gas industry demonstrates the power of combining AI techniques with domain-specific knowledge. By addressing the unique challenges of technical documentation in this field, we have created a system that not only retrieves information but understands and synthesizes it in a way that adds real value to operations. Amazon Bedrock is at the center of this solution, with Amazon Q Developer for the application frontend and backend development, and capabilities from Infosys Topaz&lt;img src="https://s.w.org/images/core/emoji/14.0.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;"&gt; – an AI-first offering that accelerates business value for enterprises using generative AI.We see significant potential for further advancement, s in this area, such as integration with real-time sensor data for dynamic information retrieval, enhanced visualization capabilities for complex geological and engineering data, and predictive analytics by combining historical retrieval patterns with operational data.&lt;/p&gt; 
&lt;p&gt;For more information on Amazon Bedrock and the latest Amazon Nova models, refer to the &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-bedrock.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock User Guide&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/nova/latest/userguide/what-is-nova.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the Authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-113283 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/dhiraj.jpeg" alt="" width="100" height="98"&gt;Dhiraj Thakur &lt;/strong&gt;is a Solutions Architect with Amazon Web Services, specializing in Generative AI and data analytics domains. He works with AWS customers and partners to architect and implement scalable analytics platforms and AI-driven solutions. With deep expertise in Generative AI services and implementation, end-to-end machine learning implementation, and cloud-native data architectures, he helps organizations harness the power of GenAI and analytics to drive business transformation. He can be reached via &lt;a href="https://www.linkedin.com/in/dhiraj-thakur-14535632/" target="_blank" rel="noopener noreferrer"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113288 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/meenakshi.jpeg" alt="" width="100" height="128"&gt;&lt;strong&gt;Meenakshi Venkatesan&lt;/strong&gt; is a Principal Consultant at Infosys and a part of the AWS partnerships team at Infosys Topaz CoE. She helps in designing, developing, and deploying in AWS environments and has interests in exploring the new offerings and services.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113292 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-5-2-1.png" alt="" width="100" height="121"&gt;&lt;strong&gt;Keerthi Prasad&lt;/strong&gt; is a Senior Technology Architect at Infosys and a part of the AWS partnerships team at Infosys Topaz CoE. He provides guidance and assistance to customers in building various solutions in the AWS Cloud. He also supports AWS partners and customers in their generative AI adoption journey.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113293 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Suman-Debnath.png" alt="" width="100" height="110"&gt;&lt;strong&gt;Suman Debnath&lt;/strong&gt; is an Associate Principal at Infosys and a part of Infosys Topaz delivery. He has played multiple roles, such as architect, program manager, and data scientist, building scalable enterprise systems and AI/ML and generative AI applications on the cloud for oil and gas, healthcare, and financial clients.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113294 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/ganesh.png" alt="" width="100" height="126"&gt;&lt;strong&gt;Ganesh&lt;/strong&gt; is a Enterprise Architect and Data Scientist at Infosys and part of Topaz Delivery. He has a master’s degree in computer science and machine learning. He has played multiple roles such as architect, program manager and data scientist building scalable enterprise systems.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-113295 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/yash.png" alt="" width="100" height="94"&gt;&lt;strong&gt;Yash Sharma&lt;/strong&gt; is a Digital Specialist Engineer with Infosys and part of the AWS team at ICETS with a passion for emerging generative AI services. He has successfully led and contributed to numerous generative AI projects. He is always eager to expand his knowledge and stay ahead of industry trends, bringing the latest insights and techniques to work.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="size-full wp-image-113287 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/karthikeyan.jpeg" alt="" width="100" height="130"&gt;Karthikeyan Senthilkumar&lt;/strong&gt; is a Senior Systems Engineer at Infosys and a part of the AWSCOE at iCETS. He specializes in AWS services with a focus on emerging technologies.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Streamline employee training with an intelligent chatbot powered by Amazon Q Business</title>
		<link>https://aws.amazon.com/blogs/machine-learning/streamline-employee-training-with-an-intelligent-chatbot-powered-by-amazon-q-business/</link>
					
		
		<dc:creator><![CDATA[Neha Bhupatiraju]]></dc:creator>
		<pubDate>Tue, 19 Aug 2025 14:02:50 +0000</pubDate>
				<category><![CDATA[Amazon Q]]></category>
		<category><![CDATA[Amazon Q Business]]></category>
		<category><![CDATA[Technical How-to]]></category>
		<guid isPermaLink="false">7a0ae177ce6347625011534ba7305a9d99376846</guid>

					<description>In this post, we explore how to design and implement custom plugins for Amazon Q Business to create an intelligent chatbot that streamlines employee training by retrieving answers from training materials. The solution implements secure API access using Amazon Cognito for user authentication and authorization, processes multiple document formats, and includes features like RAG-enhanced responses and email escalation capabilities through custom plugins.</description>
										<content:encoded>&lt;p&gt;&lt;a href="https://aws.amazon.com/q/business/" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Business&lt;/a&gt; is a generative AI-powered assistant for interacting with organizational knowledge and enterprise systems. In addition to providing built-in connectors and plug-ins to connect seamlessly to over 40 popular enterprise systems, Amazon Q Business provides the ability to interact seamlessly with other third-party applications using custom plugins. Some of the enterprise systems that use Amazon Q Business include Salesforce, Zendesk, Confluence, Jira, ServiceNow, and Microsoft SharePoint. With custom plugins, you can integrate Amazon Q Business with various enterprise systems such as ticketing systems, email services, and other business applications, thus facilitating the creation of a comprehensive enterprise solutions. In this post, we explore how to design and implement custom plugins for Amazon Q Business, showcasing practical examples of integrating with common enterprise systems while helping to ensure secure access through &lt;a href="https://aws.amazon.com/cognito" target="_blank" rel="noopener noreferrer"&gt;Amazon Cognito&lt;/a&gt; authentication.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;We will build an Amazon Q Business application serving as an intelligent chatbot that facilitates new employee training by retrieving answers from the provided training materials. The solution implements secure API access using Amazon Cognito for user authentication and authorization, helping to ensure that only authorized users can access the system. It can process documents in multiple formats including PDF, DOC, DOCX, and TXT with a maximum file size of 50 MB per document and can index up to 100,000 documents. The chatbot effectively answers the questions posed by new employees by using Retrieval Augmented Generation (RAG) techniques to enhance its response capabilities. If the chatbot can’t locate the requested information, it presents a dynamic option to the user to submit an email directly to the training support team through the chatbot using the custom plugins for Amazon Q Business. We include an &lt;a href="https://aws.amazon.com/cloudformation" target="_blank" rel="noopener noreferrer"&gt;AWS CloudFormation&lt;/a&gt; template for deployment and management of our solution.&lt;/p&gt; 
&lt;p&gt;The following illustration shows how Amazon Q Business delivers training content using RAG techniques, stores materials in &lt;a href="https://aws.amazon.com/s3" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Storage Service (Amazon S3)&lt;/a&gt;, processes requests through &lt;a href="https://aws.amazon.com/lambda" target="_blank" rel="noopener noreferrer"&gt;AWS Lambda&lt;/a&gt; functions, and enables user escalations through a custom plugin. CloudFormation automates the deployment of these integrated services, as shown in the following figure.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-1-6.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113386" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-1-6.png" alt="" width="847" height="874"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features and benefits&lt;/h2&gt; 
&lt;p&gt;The solution provides three key capabilities that work together to create an efficient and user-friendly training support system. These features help organizations reduce support overhead while making sure users can get the help they need. The solution’s intelligent query handling uses RAG techniques to process user questions accurately and provide context-aware responses from indexed training materials. This capability reduces the burden on human trainers by enabling employees to find answers up to 10 times faster than traditional search methods. According to AWS case studies, organizations implementing Amazon Q Business have seen significant efficiency gains: support tickets have decreased by up to 30% through enhanced self-service capabilities, while employees save an average of 20–30 hours per month on document search and summarization tasks. The system has demonstrated the ability to handle up to 80% of routine, repetitive questions automatically, leading to 50% faster onboarding and training processes through automated knowledge access. When users need additional support, they can use the dynamic email escalation feature to contact the training team directly with a single click. This seamless integration maintains a smooth user experience while making sure complex or specialized queries receive prompt attention from subject matter experts. Organizations can typically implement this solution within 2–3 business days using a pre-configured CloudFormation template, which will minimize deployment effort and technical overhead. The architecture uses the elastic infrastructure of AWS to scale automatically, supporting enterprise-wide deployments through its ability to process and index millions of documents across multiple data sources. The solution scales according to AWS service quotas, with specific limits on knowledge bases (100,000 documents each), applications (10 per account), and concurrent users (based on your AWS account’s service quotas). The infrastructure automatically adjusts resources based on query volume and user demand, facilitating consistent performance even during peak usage periods.&lt;/p&gt; 
&lt;h2&gt;Deployment Steps&lt;/h2&gt; 
&lt;p&gt;Use the following steps to set up your training chatbot solution. You will configure email notifications using &lt;a href="https://aws.amazon.com/ses" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Email Service (Amazon SES)&lt;/a&gt;, create an S3 bucket for training materials, deploy two CloudFormation templates, and set up user access for the Amazon Q Business chatbot.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Download the files needed from the S3 bucket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aws-blogs-artifacts-public.s3.us-east-1.amazonaws.com/artifacts/ML-17015/qbusiness-application.yaml" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Business application template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws-blogs-artifacts-public.s3.us-east-1.amazonaws.com/artifacts/ML-17015/email-plugin.yaml" target="_blank" rel="noopener noreferrer"&gt;Email plugin schema&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws-blogs-artifacts-public.s3.us-east-1.amazonaws.com/artifacts/ML-17015/Training-Materials.docx" target="_blank" rel="noopener noreferrer"&gt;Mock training materials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Enable &lt;a href="https://aws.amazon.com/iam/identity-center" target="_blank" rel="noopener noreferrer"&gt;AWS IAM Identity Center&lt;/a&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the AWS Management Console and go to AWS IAM Identity Center.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Enable IAM Identity Center&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Wait a few minutes for the service to be enabled.&lt;br&gt; &lt;img loading="lazy" class="alignnone wp-image-114063 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/11/Screenshot-2025-08-11-at-2.47.01 PM.png" alt="" width="1506" height="436"&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 1: Configure the customer service email address on Amazon SES&lt;/h3&gt; 
&lt;p&gt;The following steps add the email IDs that will be used to send and receive emails through the custom plugin and Amazon SES.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the &lt;a href="https://us-east-1.console.aws.amazon.com/ses/home?region=us-east-1#/account" target="_blank" rel="noopener noreferrer"&gt;Amazon SES console&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Configuration&lt;/strong&gt; and then &lt;strong&gt;Identities&lt;/strong&gt; on the left navigation pane.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Create identity &lt;/strong&gt;to add an identity.&lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Email address&lt;/strong&gt; as the identity type.&lt;/li&gt; 
 &lt;li&gt;Enter the email address you want to use.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Create identity&lt;/strong&gt; to submit the request.&lt;br&gt; &lt;img loading="lazy" class="alignnone wp-image-114061 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/11/Screenshot-2025-08-11-at-2.47.49 PM.png" alt="" width="1500" height="210"&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Confirm the email address by following the link on the email Amazon SES sends you and then your identity will be confirmed (you should receive the email in about 2 minutes).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 2: Create an S3 bucket with your training materials in it&lt;/h3&gt; 
&lt;p&gt;The following steps create the S3 bucket that will act as a data source for the Amazon Q Business application.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the &lt;a href="https://us-east-1.console.aws.amazon.com/s3/home?region=us-east-1" target="_blank" rel="noopener noreferrer"&gt;Amazon S3 console&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Create bucket&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Enter a unique bucket name (for example, &lt;code&gt;company-training-materials-2025&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Upload your training materials into this bucket. 
  &lt;ul&gt; 
   &lt;li&gt;Mock training data was part of the material downloaded in the prerequisites.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 3: Deploy the first AWS CloudFormation stack – Qbusiness-application.yaml&lt;/h3&gt; 
&lt;p&gt;The CloudFormation template will create the necessary resources for deploying the application with the custom plugin.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;In your AWS account, open the &lt;a href="https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1" target="_blank" rel="noopener noreferrer"&gt;CloudFormation console&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Create stack&lt;/strong&gt; and &lt;strong&gt;With new resources (standard) &lt;/strong&gt;to start.&lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Choose an existing template&lt;/strong&gt; and &lt;strong&gt;Upload a template file&lt;/strong&gt; and upload &lt;code&gt;Qbusiness-application.yaml&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Fill in the required parameters (for example: Amazon Cognito details, &lt;code&gt;S3BucketName&lt;/code&gt;, &lt;code&gt;SESSourceEmail&lt;/code&gt;, &lt;code&gt;IdcInstanceArn&lt;/code&gt;). 
  &lt;ol type="a"&gt; 
   &lt;li&gt;You can keep the default names for the roles.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;CognitoUserEmail&lt;/code&gt; should be the email address associated with a user’s account within an Amazon user pool.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;CognitoUserPassword&lt;/code&gt; is a temporary password associated with the preceding &lt;code&gt;CognitoUserEmail&lt;/code&gt;. Add &lt;code&gt;temporary password&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;S3BucketName&lt;/code&gt; should be the bucket that has the training and data source materials in it that you created in Step 2 (for example &lt;code&gt;company-training-materials-2025&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;SESSourceEmail&lt;/code&gt; should be the email that serves as the customer service email address that users can reach out to for further assistance (the same address that you verified in Step 1).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;IdcInstanceArn&lt;/code&gt; is the Amazon Resource Name (ARN) of your IAM Identity Center instance. To find your &lt;code&gt;IdcInstanceArn&lt;/code&gt;: 
    &lt;ol&gt; 
     &lt;li&gt;Navigate to IAM Identity Center console.&lt;/li&gt; 
     &lt;li&gt;Choose &lt;strong&gt;Go to Settings&lt;/strong&gt; on the left-hand side.&lt;/li&gt; 
     &lt;li&gt;Example: &lt;code&gt;arn:aws:sso:::instance/ssoins-722339a1b72acd7b&lt;/code&gt;.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Next&lt;/strong&gt;, leave the settings on the next page at the default values.&lt;/li&gt; 
 &lt;li&gt;Select the &lt;strong&gt;I acknowledge that AWS CloudFormation might create IAM resources with custom names&lt;/strong&gt; check box, choose &lt;strong&gt;Next&lt;/strong&gt; and then choose &lt;strong&gt;Submit&lt;/strong&gt; to start the creation of the stack.&lt;/li&gt; 
 &lt;li&gt;Wait until the stack status is &lt;strong&gt;CREATE_COMPLETE&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Navigate to the &lt;strong&gt;Outputs&lt;/strong&gt; tab on the stack and copy the &lt;strong&gt;ApiEndpoint&lt;/strong&gt;, &lt;strong&gt;CognitoAuthorizationUrl&lt;/strong&gt; and &lt;strong&gt;CognitoTokenUrl&lt;/strong&gt; to your clipboard.&lt;br&gt; &lt;img loading="lazy" class="alignnone size-full wp-image-114628" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/18/Screenshot-2025-08-18-at-4.54.31 PM.png" alt="" width="1028" height="186"&gt;&lt;br&gt; &lt;img loading="lazy" class="alignnone size-full wp-image-114629" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/18/Screenshot-2025-08-18-at-4.54.52 PM.png" alt="" width="1026" height="310"&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 4: Prepare the custom plugin schema&lt;/h3&gt; 
&lt;p&gt;The following steps help edit the API schema, which has the necessary paths and responses, to call the custom plugin.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the &lt;code&gt;email-plugin.yaml&lt;/code&gt; file and open it in an editor.&lt;/li&gt; 
 &lt;li&gt;In the beginning of the YAML file, paste the API endpoint URL you copied in the previous step prior where it says &lt;strong&gt;Enter ApiEndpoint&lt;/strong&gt;. Make sure to remove the backslash at the end of the URL.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-6-3.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113389" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-6-3.png" alt="" width="1222" height="294"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Paste the &lt;code&gt;CognitoAuthorizationURL&lt;/code&gt; and &lt;code&gt;CognitoTokenUrl&lt;/code&gt; from the previous step where it says to enter the URLs, as shown in the previous image.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-7-2.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113390" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-7-2.png" alt="" width="1636" height="450"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Save this YAML file.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 5: Set up the custom plugin&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the Amazon Q Business console and choose &lt;strong&gt;Actions &lt;/strong&gt;and then &lt;strong&gt;Plugins&lt;/strong&gt; navigation pane.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Add Plugin&lt;/strong&gt; and then &lt;strong&gt;+Create custom plugin&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Enter a name and description for your plugin.&lt;/li&gt; 
 &lt;li&gt;Under API Schema, select &lt;strong&gt;Define with in-line OpenAPI schema editor &lt;/strong&gt;and paste the edited email plugin YAML file with the new URLs in the text box. 
  &lt;ol type="a"&gt; 
   &lt;li&gt;Make sure the YAML | JSON toggle is set to &lt;strong&gt;YAML&lt;/strong&gt;.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Under &lt;strong&gt;Authentication&lt;/strong&gt;, select &lt;strong&gt;Authentication required&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Under &lt;strong&gt;AWS Secrets Manager secret&lt;/strong&gt; select&lt;strong&gt; Create and add new secret&lt;/strong&gt;. 
  &lt;ol type="a"&gt; 
   &lt;li&gt;Enter a name for your secret.&lt;/li&gt; 
   &lt;li&gt;Enter a short description (for example : Custom email plugin for Amazon Q Business application)&lt;/li&gt; 
   &lt;li&gt;To populate the other details, navigate to the Amazon Cognito console and select your created user pool. 
    &lt;ol type="i"&gt; 
     &lt;li&gt;Under &lt;strong&gt;Recommendations / Set up your app&lt;/strong&gt;, choose &lt;strong&gt;EmailSenderPoolClient&lt;/strong&gt;&lt;/li&gt; 
     &lt;li&gt;Copy &lt;strong&gt;Client ID&lt;/strong&gt; and &lt;strong&gt;Client secret &lt;/strong&gt;into the QBusiness custom plugin screen.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-8-2.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113376" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-8-2.png" alt="" width="1430" height="450"&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;For the OAuth callback URL, copy the Amazon Q Business web application deployed URL and add &lt;code&gt;/oauth/callback.&lt;/code&gt; For example: &lt;code&gt;https://xxxxxx.chat.qbusiness.us-east-1.on.aws/oauth/callback&lt;/code&gt;&lt;br&gt; &lt;img loading="lazy" class="alignnone wp-image-114667 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/19/Screenshot-2025-08-19-at-9.31.24 AM-1.png" alt="" width="1678" height="232"&gt;&lt;/li&gt; 
     &lt;li&gt;Save this URL for a later step.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Create and use a new service role &lt;/strong&gt;for authorization.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Add plugin&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 6: Add a callback URL to Amazon Cognito&lt;/h3&gt; 
&lt;p&gt;The following steps help ensure that the callback URL is configured correctly. The callback URL is a user-configured URL where your application receives the authorization code after a user successfully signs in or signs out through the Amazon Cognito hosted UI.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the Amazon Cognito console.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;App clients &lt;/strong&gt;under &lt;strong&gt;Applications &lt;/strong&gt;in the navigation pane.&lt;/li&gt; 
 &lt;li&gt;Choose your app client.&lt;/li&gt; 
 &lt;li&gt;Choose the &lt;strong&gt;Login pages&lt;/strong&gt; tab.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-10-2.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113378" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-10-2.png" alt="" width="1430" height="387"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Edit &lt;/strong&gt;under the&lt;strong&gt; Managed login pages configuration&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Paste the OAuth callback URL you saved from the previous step under &lt;strong&gt;Allowed Callback URLs&lt;/strong&gt;. 
  &lt;ol type="a"&gt; 
   &lt;li&gt;Example: &lt;code&gt;https://xxxxxx.chat.qbusiness.us-east-1.on.aws/oauth/callback&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Save changes&lt;/strong&gt;.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-11-2.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113379" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-11-2.png" alt="" width="1684" height="1164"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 7: Sync data source&lt;/h3&gt; 
&lt;p&gt;The following steps are to make sure that the data source has the most recent updates&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the Amazon Q Business console.&lt;/li&gt; 
 &lt;li&gt;Find your application (should be named &lt;strong&gt;qbusiness-example-app&lt;/strong&gt;).&lt;/li&gt; 
 &lt;li&gt;Select your application and go to the &lt;strong&gt;Data sources&lt;/strong&gt; section in the navigation pane.&lt;/li&gt; 
 &lt;li&gt;Select your data source and initiate a sync by choosing &lt;strong&gt;Sync now&lt;/strong&gt; to index the uploaded documents.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-12-2.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113381" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-12-2.png" alt="" width="1430" height="239"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;&lt;strong&gt;Sync history &lt;/strong&gt;should show a status of completed.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-13.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113380" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-13.png" alt="" width="1431" height="280"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 8: Set up user access for the Amazon Q Business chatbot&lt;/h3&gt; 
&lt;p&gt;The following steps allow users to be added to access the chatbot&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate back to the application in the Amazon Q Business console.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Manage User Access&lt;/strong&gt;.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-14-1.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113385" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-14-1.png" alt="" width="1428" height="222"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Add Groups or Users&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;If you already have an existing user you want to give access to, choose &lt;strong&gt;Assign existing users and groups&lt;/strong&gt;. 
  &lt;ol type="a"&gt; 
   &lt;li&gt;Start entering the user’s name and &lt;strong&gt;Assign&lt;/strong&gt; an existing user.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;To add a new user, choose &lt;strong&gt;Add and Assign New Users&lt;/strong&gt;. 
  &lt;ol type="a"&gt; 
   &lt;li&gt;Choose &lt;strong&gt;Add and then Assign&lt;/strong&gt; and then choose &lt;strong&gt;Confirm&lt;/strong&gt;. 
    &lt;ol type="i"&gt; 
     &lt;li&gt;Each user should get an email asking them to accept the invitation.&lt;/li&gt; 
     &lt;li&gt;After they choose &lt;strong&gt;Accept Invitation&lt;/strong&gt;, they will be taken to a page to set up their password. They will use this username and password to sign in to the chatbot.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.48.41 PM.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113395" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.48.41 PM.png" alt="" width="1148" height="112"&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 9: Query the chatbot&lt;/h3&gt; 
&lt;p&gt;The following steps walk you through how to best use the application.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the application on the Amazon Q Business console again.&lt;/li&gt; 
 &lt;li&gt;Select the &lt;strong&gt;Deployed URL&lt;/strong&gt;.&lt;br&gt; &lt;img loading="lazy" class="alignnone wp-image-114666 size-full" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/19/Screenshot-2025-08-19-at-9.31.24 AM.png" alt="" width="1678" height="232"&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Sign in using the username and password set in the previous step. Follow the steps in the console to register a built-in authenticator.&lt;/li&gt; 
 &lt;li&gt;You can now: 
  &lt;ol type="a"&gt; 
   &lt;li&gt;Query the chatbot about your training materials. For example, ask it: &lt;code&gt;Tell me about my dental insurance.&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Request to send emails through the chatbot. Make sure to choose the custom plugin button to use this functionality. 
    &lt;ol type="i"&gt; 
     &lt;li&gt;Example: &lt;code&gt;Can you send an email asking for more information about my dental insurance?&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;If asked for your email ID, enter the email ID that you verified in previous steps.&lt;/li&gt; 
     &lt;li&gt;The application will ask you to authorize your access. Choose &lt;strong&gt;Authorize&lt;/strong&gt;.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-17-1.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113383" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-17-1.png" alt="" width="1432" height="186"&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Enter your &lt;code&gt;CognitoUserEmail&lt;/code&gt; and password defined in Step 3 in the window and choose &lt;strong&gt;Sign in&lt;/strong&gt;.&lt;br&gt; &lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-18-1.png"&gt;&lt;img loading="lazy" class="wp-image-114000 size-full alignnone" style="margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/11/ML-17015-image-18-1.png" alt="" width="500" height="473"&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Emails will be sent to the email address verified in Step 1.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;The following issues might occur during deployment or usage of your chatbot solution. Use these solutions to resolve common problems.&lt;/p&gt; 
&lt;p&gt;Data sync failures typically result from incorrect S3 bucket permissions. Check your bucket policy and access settings to facilitate proper configuration.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;User access issues often occur when invitations aren’t accepted or passwords aren’t set up. Verify that users have completed both steps in the access setup process.&lt;/li&gt; 
 &lt;li&gt;When the bot provides incomplete answers, try refreshing your content by initiating a new data source sync in the Amazon Q Business console.&lt;/li&gt; 
 &lt;li&gt;Amazon Cognito authorization issues can occur in the Q Business console – to mitigate them:&lt;/li&gt; 
 &lt;li&gt;Make sure that the callback URL matches your Q Business deployed URL&lt;/li&gt; 
 &lt;li&gt;The callback URL in the managed sign in pages configuration matches your Q Business deployed URL as seen in Step 6.&lt;/li&gt; 
 &lt;li&gt;Your Amazon Cognito URLs are copied into the &lt;code&gt;email-plugin.yaml&lt;/code&gt; correctly from the CloudFormation outputs.&lt;/li&gt; 
 &lt;li&gt;Email delivery problems usually stem from email configuration. Verify that:&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;Custom Plugin&lt;/strong&gt; button shows an active (blue) status.&lt;/li&gt; 
 &lt;li&gt;Your Amazon SES email address is verified.&lt;/li&gt; 
 &lt;li&gt;You’re using the correct email address in your configuration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The BlueprintRole section is currently commented out because this is a proof-of-concept deployment. When deploying to production environments, especially those involving multiple AWS accounts or organizations, you should uncomment this section. The BlueprintRole provides necessary permissions for cross-account access and advanced management features of Amazon Q Business applications.&lt;/p&gt; 
&lt;h2&gt;Service versions&lt;/h2&gt; 
&lt;p&gt;AWS Lambda runtime: Python 3.11&lt;/p&gt; 
&lt;h2&gt;Regional availability&lt;/h2&gt; 
&lt;p&gt;Before deploying this solution, note that Amazon Q Business is not available in all AWS Regions. This solution can only be deployed in Regions where Amazon Q Business is supported. For the most up-to-date information on Regional availability, check the &lt;a href="https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/" target="_blank" rel="noopener noreferrer"&gt;AWS Regional Services&lt;/a&gt; list.&lt;/p&gt; 
&lt;h2&gt;Real-world use case&lt;/h2&gt; 
&lt;p&gt;Amazon Q Business is transforming how businesses handle internal knowledge management and support. By securely connecting to company data sources and systems, Amazon Q Business helps organizations make their institutional knowledge more accessible and actionable. Here are two real-world examples demonstrating how Amazon Q Business enhances workplace productivity and knowledge sharing using the custom plugin feature.&lt;/p&gt; 
&lt;p&gt;Scenario 1: New employee Sarah uses a chatbot to learn about the organization’s leave policy. The chatbot efficiently retrieves relevant information from indexed training materials to answer her initial question. When Sarah later asks a specific question beyond the scope of the chatbot’s knowledge base, it promptly offers to connect her with the training support team through email. Sarah takes advantage of this option, making sure her complex query receives proper attention without delay. This interaction demonstrates the chatbot’s effectiveness in providing immediate access to information while maintaining appropriate escalation channels for questions requiring human expertise.&lt;/p&gt; 
&lt;p&gt;Scenario 2: Alex, a field technician at a manufacturing company, needs to complete an urgent maintenance procedure on specialized equipment while at a client site. He accesses the company’s Amazon Q-powered knowledge assistant.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alex asks, “How do I recalibrate the XB-2000 sensor array after firmware update?” The chatbot immediately retrieves the relevant technical documentation from indexed maintenance manuals and presents a step-by-step procedure with details.&lt;/li&gt; 
 &lt;li&gt;During the calibration, Alex encounters an unexpected error code not covered in the standard documentation. He uses the custom plugin to request immediate assistance, typing “I need help with error code E-457 on the XB-2000.” The chatbot offers to email the technical support team, including his location details and equipment specifications automatically gathered from his user profile.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This scenario demonstrates how the Amazon Q Business solution delivers critical technical knowledge in field situations while providing seamless escalation paths for edge cases that require specialized expertise, ultimately reducing equipment downtime and improving customer satisfaction.&lt;/p&gt; 
&lt;p&gt;Scenario 3: A global manufacturing company with more than 5,000 employees implements Amazon Q Business to streamline their equipment maintenance support system across multiple facilities. Maintenance teams use Amazon Q Business to access equipment documentation and when encountering situations requiring vendor support or parts ordering, they use the custom plugin’s email feature.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Example interaction: A maintenance supervisor in Singapore enters “Need to escalate XB-2000 production line shutdown to vendor support team.”&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Amazon Q custom plugin automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generates a structured email containing facility location, equipment history, and maintenance logs.&lt;/li&gt; 
 &lt;li&gt;Routes communications to vendor support, maintenance management, and procurement teams.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This implementation demonstrates how the custom plugin feature standardizes emergency communications across global facilities while making sure critical information is automatically included in escalations.&lt;/p&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;To remove the solution, delete the CloudFormation stack you created to test this solution. This action will automatically deprovision associated AWS resources, including Lambda functions, S3 buckets, and Amazon OpenSearch Service domains set up by Amazon Q Business. This solution uses multiple AWS services with costs varying based on usage patterns. Amazon Q Business pricing is determined by the number of users and queries processed, with additional charges applying for custom plugin usage. Lambda costs are calculated based on the number of requests and compute time, though a free tier allowance of 1 million requests per month is available. Storage and data transfer costs will apply for Amazon S3, which hosts your training materials. Email communications through Amazon SES incur standard sending charges, though you can benefit from a free tier that includes 62,000 outbound messages per month. For detailed pricing information, we recommend consulting the official pricing pages for each service.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;This intelligent chatbot solution harnesses the capabilities of Amazon Q to revolutionize employee training by providing instant access to organizational knowledge while maintaining human escalation paths for complex inquiries. Queries the system is designed to handle include multi-turn conversations requiring context from previous interactions, questions that need information synthesis across multiple documents, and technical troubleshooting scenarios requiring step-by-step guidance. By implementing this CloudFormation-automated deployment, organizations can significantly reduce support costs up to 85%, improve knowledge accessibility, and create a training environment that is designed to scale with their needs. It supports enterprise-wide deployments by integrating with your existing identity and access management systems, so you can quickly add or remove users and manage permissions at scale. As your organization expands, you can connect additional data sources such as Dropbox and Google Drive, making sure the system grows alongside your business needs.&lt;/p&gt; 
&lt;p&gt;This Amazon Q Business training solution is worth building because it dramatically reduces training support costs while providing employees with continuous access to accurate information. The automated deployment and seamless human escalation path make it an ideal solution for organizations looking to scale knowledge delivery without expanding support staff.&lt;/p&gt; 
&lt;p&gt;Empower your organization with this cutting-edge chatbot solution today and share your experiences and insights in the comments section below.&lt;/p&gt; 
&lt;p&gt;Explore more about Amazon Q Business capabilities in our &lt;a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/what-is.html" target="_blank" rel="noopener noreferrer"&gt;comprehensive documentation&lt;/a&gt; or join our AWS Community forum to connect with others implementing similar solutions. Don’t forget to follow #AmazonQBusiness on social media to share your implementation journey!&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.55.09 PM.png"&gt;&lt;img loading="lazy" class="wp-image-113398 size-thumbnail alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.55.09 PM-e1754427435607-100x126.png" alt="" width="100" height="126"&gt;&lt;/a&gt;Neha Bhupatiraju&lt;/strong&gt; is a Data and ML Engineer at AWS Professional Services. With expertise in data engineering and machine learning, she helps enterprise customers leverage both traditional data analytics and machine learning. She specializes in implementing intelligent chatbots, developing predictive analytics models and building generative AI applications.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;b&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.55.26 PM.png"&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-113399 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.55.26 PM-100x119.png" alt="" width="100" height="119"&gt;&lt;/a&gt;Charishma Ravoori&lt;/b&gt; is a Data and ML Engineer at AWS Professional Services. Charishma works with AWS customers and partners to help them build solutions in predictive/data analytics, data engineering and generative AI using AWS services.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;b&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.56.05 PM.png"&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-113401 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.56.05 PM-100x132.png" alt="" width="100" height="132"&gt;&lt;/a&gt;Ujwala Bitla&lt;/b&gt; is a Deep Learning Architect at AWS Generative AI Innovation Center, where she designs and delivers cutting-edge GenAI solutions for&amp;nbsp; customers across industries. With extensive experience in Data Science and Analysis, she specializes in Large Language Models, Retrieval-Augmented Generation (RAG), Agents and responsible AI implementation.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;b&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.55.48 PM.png"&gt;&lt;img loading="lazy" class="size-thumbnail wp-image-113400 alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/Screenshot-2025-08-05-at-4.55.48 PM-100x131.png" alt="" width="100" height="131"&gt;&lt;/a&gt;Raju Patil&lt;/b&gt; is a Senior Data Scientist in AWS Professional Services, where he builds and deploys AI/ML solutions to help AWS customers overcome business challenges. His work spans across various use cases, including Generative AI, Computer Vision, Time-Series Forecasting, and Predictive Analytics.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Create a travel planning agentic workflow with Amazon Nova</title>
		<link>https://aws.amazon.com/blogs/machine-learning/create-a-travel-planning-agentic-workflow-with-amazon-nova/</link>
					
		
		<dc:creator><![CDATA[Isaac Privitera]]></dc:creator>
		<pubDate>Mon, 18 Aug 2025 20:30:15 +0000</pubDate>
				<category><![CDATA[Advanced (300)]]></category>
		<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Nova]]></category>
		<category><![CDATA[Generative AI]]></category>
		<guid isPermaLink="false">76148e40b63152f8f90e52460fc904c981ac9008</guid>

					<description>In this post, we explore how to build a travel planning solution using AI agents. The agent uses Amazon Nova, which offers an optimal balance of performance and cost compared to other commercial LLMs. By combining accurate but cost-efficient Amazon Nova models with LangGraph orchestration capabilities, we create a practical travel assistant that can handle complex planning tasks while keeping operational costs manageable for production deployments.</description>
										<content:encoded>&lt;p&gt;Traveling is enjoyable, but travel planning can be complex to navigate and a hassle. Travelers must book accommodations, plan activities, and arrange local transportation. All these decisions can feel overwhelming. Although travel professionals have long helped manage these complexities, recent breakthroughs in &lt;a href="https://aws.amazon.com/what-is/generative-ai/" target="_blank" rel="noopener noreferrer"&gt;generative AI&lt;/a&gt; have made something entirely new possible—intelligent assistants that can understand natural conversation, access real-time data, and directly interface with booking systems and travel tools. &lt;a href="https://aws.amazon.com/what-is/ai-agents/" target="_blank" rel="noopener noreferrer"&gt;Agentic workflows&lt;/a&gt;, which use large language models (LLMs) with access to external tools, are particularly promising for simplifying dynamic, multi-step processes like travel planning.&lt;/p&gt; 
&lt;p&gt;In this post, we explore how to build a travel planning solution using AI agents. The agent uses &lt;a href="https://aws.amazon.com/ai/generative-ai/nova/" target="_blank" rel="noopener noreferrer"&gt;Amazon Nova&lt;/a&gt;, which offers an optimal balance of performance and cost compared to other commercial LLMs. By combining accurate but cost-efficient Amazon Nova models with &lt;a href="https://www.langchain.com/langgraph" target="_blank" rel="noopener noreferrer"&gt;LangGraph&lt;/a&gt; orchestration capabilities, we create a practical travel assistant that can handle complex planning tasks while keeping operational costs manageable for production deployments.&lt;/p&gt; 
&lt;h2&gt;Solution overview&lt;/h2&gt; 
&lt;p&gt;Our solution is built on a serverless &lt;a href="http://aws.amazon.com/lambda" target="_blank" rel="noopener noreferrer"&gt;AWS Lambda&lt;/a&gt; architecture using &lt;a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer"&gt;Docker&lt;/a&gt; containers and implements a comprehensive three-layer approach: frontend interaction, core processing, and integration services. In the core processing layer, we use LangGraph, a stateful orchestration framework, to create a sophisticated yet flexible agent-based system that manages the complex interactions required for travel planning.&lt;/p&gt; 
&lt;p&gt;The core of our system is a graph architecture where components (nodes) handle distinct aspects of travel planning, with the router node orchestrating the flow of information between them. We use Amazon Nova, a new generation of state-of-the-art foundation models (FMs) available exclusively on &lt;a href="https://aws.amazon.com/bedrock/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt; that delivers frontier intelligence with industry-leading price-performance. The router node uses an LLM to analyze each user query and, with access to the description of our 14 action nodes, decides which ones need to be executed. The action nodes, each with their own LLM chain, powered by either Amazon Nova Pro or Amazon Nova Lite models, manage various functions, including web research, personalized recommendations, weather lookups, product searches, and shopping cart management.&lt;/p&gt; 
&lt;p&gt;We use Amazon Nova Lite for the router and simpler action nodes. It can handle query analysis and basic content generation with its lightning-fast processing while maintaining strong accuracy at a low cost. Five complex nodes use Amazon Nova Pro for tasks requiring advanced instruction following and multi-step operations, such as detailed travel planning and recommendations. Both models support a 300,000-token context window and can process text, image, and video inputs. The models support text processing across more than 200 languages, helping our travel assistant serve a global audience.The integration layer unifies multiple data sources and services through an interface:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://webservices.amazon.com/paapi5/documentation/" target="_blank" rel="noopener noreferrer"&gt;Amazon Product Advertising API&lt;/a&gt; for travel-related product recommendations&lt;/li&gt; 
 &lt;li&gt;Google Custom Search API for real-time travel information&lt;/li&gt; 
 &lt;li&gt;OpenWeather API for accurate weather forecasts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/bedrock/knowledge-bases/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Knowledge Bases&lt;/a&gt; for travel destination insights&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/dynamodb/" target="_blank" rel="noopener noreferrer"&gt;Amazon DynamoDB&lt;/a&gt; for persistent storage of user profiles and chat history&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These integrations serve as examples, and the architecture is designed to be extensible, so organizations can quickly incorporate their own APIs and data sources based on specific requirements.&lt;/p&gt; 
&lt;p&gt;The agent keeps track of the conversation state using AgentState (&lt;a href="https://mypy.readthedocs.io/en/stable/typed_dict.html" target="_blank" rel="noopener noreferrer"&gt;TypedDict&lt;/a&gt;), a special Python dictionary that helps prevent data errors by enforcing specific data types. It stores the information we need to know about each user’s session: their conversation history, profile information, processing status, and final outputs. This makes sure the different action nodes can access and update information reliably.&lt;/p&gt; 
&lt;p&gt;The following diagram illustrates the solution architecture.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-112812 size-large" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-image-4-1024x557.png" alt="" width="1024" height="557"&gt;&lt;/p&gt; 
&lt;p&gt;The travel assistant processes user interactions from end to end:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Users interact with a React.js web application through a chat interface.&lt;/li&gt; 
 &lt;li&gt;Their requests are authenticated using &lt;a href="https://aws.amazon.com/cognito/" target="_blank" rel="noopener noreferrer"&gt;Amazon Cognito&lt;/a&gt; and routed through &lt;a href="https://aws.amazon.com/api-gateway/" target="_blank" rel="noopener noreferrer"&gt;Amazon API Gateway&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Authenticated requests are sent to our backend &lt;a href="https://aws.amazon.com/lambda/" target="_blank" rel="noopener noreferrer"&gt;Lambda functions&lt;/a&gt;, which host the core agent workflow.&lt;/li&gt; 
 &lt;li&gt;API credentials are securely stored using &lt;a href="https://aws.amazon.com/secrets-manager/" target="_blank" rel="noopener noreferrer"&gt;AWS Secrets Manager&lt;/a&gt;, following best practices to make sure these sensitive keys are never exposed in code or configuration files, with appropriate access controls and rotation policies implemented.&lt;/li&gt; 
 &lt;li&gt;The Travel Assistant Agent itself consists of several interconnected components. At the center, the agent router analyzes incoming queries and orchestrates the workflow.&lt;/li&gt; 
 &lt;li&gt;The agent maintains state through three DynamoDB tables that store conversation history, shopping wishlists, and user profiles, making sure context is preserved across interactions.&lt;/li&gt; 
 &lt;li&gt;For travel-specific knowledge, the system uses a combination of Amazon Bedrock Knowledge Bases, &lt;a href="https://aws.amazon.com/opensearch-service/features/serverless/" target="_blank" rel="noopener noreferrer"&gt;Amazon OpenSearch Serverless&lt;/a&gt;, and a document store in &lt;a href="http://aws.amazon.com/s3" target="_blank" rel="noopener noreferrer"&gt;Amazon Simple Storage Service&lt;/a&gt; (Amazon S3). These components work together to provide accurate, relevant travel information when needed.&lt;/li&gt; 
 &lt;li&gt;The agent’s action nodes handle specialized tasks by combining LLM chains with external APIs. When users need product recommendations, the system connects to the Amazon Product Advertising API. For general travel information, it uses the Google Custom Search API, and for weather-related queries, it consults the OpenWeather API. API credentials are securely managed through Secrets Manager.&lt;/li&gt; 
 &lt;li&gt;The system formulates comprehensive responses based on collected information, and the final responses are returned to the user through the chat interface.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This architecture supports both simple queries that can be handled by a single node and complex multi-step interactions that require coordination across multiple components. The system can scale horizontally, and new capabilities can be added by introducing additional action nodes and API integrations.&lt;/p&gt; 
&lt;p&gt;You can deploy this solution using the &lt;a href="https://aws.amazon.com/cdk/" target="_blank" rel="noopener noreferrer"&gt;AWS Cloud Development Kit&lt;/a&gt; (AWS CDK), which generates an &lt;a href="http://aws.amazon.com/cloudformation" target="_blank" rel="noopener noreferrer"&gt;AWS CloudFormation&lt;/a&gt; template that handles the necessary resources, including Lambda functions, DynamoDB tables, and API configurations. The deployment creates the required AWS resources and outputs the API endpoint URL for your frontend application.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;For this walkthrough, you must have the following prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An active &lt;a href="https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fportal.aws.amazon.com%2Fbilling%2Fsignup%2Fresume&amp;amp;client_id=signup" target="_blank" rel="noopener noreferrer"&gt;AWS account&lt;/a&gt; and familiarity with FMs, Amazon Bedrock, and &lt;a href="https://aws.amazon.com/opensearch-service/" target="_blank" rel="noopener noreferrer"&gt;Amazon OpenSearch Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/model-access-modify.html" target="_blank" rel="noopener noreferrer"&gt;Access&lt;/a&gt; to the Amazon Nova FMs on Amazon Bedrock&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en" target="_blank" rel="noopener noreferrer"&gt;Node.js&lt;/a&gt; v16.x or later&lt;/li&gt; 
 &lt;li&gt;Python 3.9 or later&lt;/li&gt; 
 &lt;li&gt;Access to the Product Advertising API (PAAPI)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Clone the repository&lt;/h2&gt; 
&lt;p&gt;Start by cloning the GitHub repository containing the solution files:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;git clone https://github.com/aws-samples/sample-travel-assistant-agent.git&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Obtain API keys&lt;/h2&gt; 
&lt;p&gt;The solution requires API keys from three services to enable its core functionalities:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OpenWeather API&lt;/strong&gt; – Create a Free Access account at &lt;a href="https://openweathermap.org/" target="_blank" rel="noopener noreferrer"&gt;OpenWeather&lt;/a&gt; to obtain your API key. The free tier (60 calls per minute) is sufficient for testing and development.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Google Custom Search API&lt;/strong&gt; – Set up the search functionality through &lt;a href="https://console.cloud.google.com/" target="_blank" rel="noopener noreferrer"&gt;Google Cloud Console&lt;/a&gt;. Create or select a project and enable the Custom Search API. Then, generate an API key from the credentials section. Create a search engine at &lt;a href="https://programmablesearch.google.com/controlpanel/all" target="_blank" rel="noopener noreferrer"&gt;Programmable Search&lt;/a&gt; and note your Search Engine ID. The free tier includes 100 queries per day.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;(Optional) Amazon Product Advertising API (PAAPI) &lt;/strong&gt;– If you want to enable product recommendations, access the &lt;a href="https://webservices.amazon.com/paapi5/documentation/" target="_blank" rel="noopener noreferrer"&gt;PAAPI Documentation Portal&lt;/a&gt; to generate your API keys. You will receive both a public key and a secret key. You must have an Amazon Associates account to access these credentials. If you’re new to the Amazon Associates Program, complete the application process first. Skip this step if you don’t want to use PAAPI features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Add API keys to Secrets Manager&lt;/h2&gt; 
&lt;p&gt;Before deploying the solution, you must securely store your API keys in Secrets Manager. The following table lists the secrets to create and their JSON structure. For instructions to create a secret, refer to &lt;a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_secret.html" target="_blank" rel="noopener noreferrer"&gt;Create an AWS Secrets Manager secret&lt;/a&gt;.&lt;/p&gt; 
&lt;table class="styled-table" border="1px" cellpadding="10px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;strong&gt;Secret Name&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;strong&gt;JSON Structure&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;code&gt;openweather_maps_keys&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;code&gt;{" openweather_key": "YOUR_API_KEY"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;code&gt;google_search_keys&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;code&gt;{"cse_id": "YOUR_SEARCH_ENGINE_ID", "google_api_key": "YOUR_API_KEY"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;code&gt;paapi_keys&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="padding: 10px;border: 1px solid #dddddd"&gt;&lt;code&gt;{"paapi_public": "YOUR_PUBLIC_KEY", "paapi_secret": "YOUR_SECRET_KEY"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Configure environment variables&lt;/h2&gt; 
&lt;p&gt;Create a .env file in the project root with your configuration:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;STACK_NAME=TravelAssistantAgent

# Optional: Create Bedrock Knowledge Base with documents
KB_DOCS_PATH = Path/to/your/documents/folder
# Optional: Enable/disable Product Search features with PAAPI
USE_PAAPI=false&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Deploy the stack&lt;/h2&gt; 
&lt;p&gt;If this is your first time using the AWS CDK in your AWS account and AWS Region, bootstrap your environment:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;cdk bootstrap&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Deploy the solution using the provided script, which creates the required AWS resources, including Lambda functions, DynamoDB tables, and API configurations:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;sh deploy.sh&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;Access your application&lt;/h2&gt; 
&lt;p&gt;When the deployment is complete, open the AWS CloudFormation console and open your stack. On the &lt;strong&gt;Outputs&lt;/strong&gt; tab, note the following values:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;WebAppDomain&lt;/strong&gt; – Your application’s URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UserPoolId&lt;/strong&gt; – Required for user management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UserPoolClientId&lt;/strong&gt; – Used for authentication&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img loading="lazy" width="1024" height="708" class="alignnone wp-image-112809 size-large" style="width: 1024;height: auto;max-width: 80%" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-IMAGE-1-1024x708.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;Create an Amazon Cognito user&lt;/h2&gt; 
&lt;p&gt;Complete the following steps to create an Amazon Cognito user:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;On the Amazon Cognito console, choose &lt;strong&gt;User pools&lt;/strong&gt; in the navigation pane.&lt;/li&gt; 
 &lt;li&gt;Choose your user pool.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Users &lt;/strong&gt;in the navigation pane, then choose &lt;strong&gt;Create user&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" width="1024" height="567" class="alignnone wp-image-112810 size-large" style="width: 1024;height: auto;max-width: 80%" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-IMAGE-2-1024x567.png" alt=""&gt;&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;For &lt;strong&gt;Email address&lt;/strong&gt;, enter an email address, and select &lt;strong&gt;Mark email address as verified&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;For &lt;strong&gt;Password&lt;/strong&gt;, enter a temporary password.&lt;/li&gt; 
 &lt;li&gt;Choose &lt;strong&gt;Create user&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img loading="lazy" width="1024" height="728" class="alignnone wp-image-112811 size-large" style="width: 1024;height: auto;max-width: 80%" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-IMAGE-3-1024x728.png" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;You can use these credentials to access your application at the WebAppDomain URL.&lt;/p&gt; 
&lt;h2&gt;Test the solution&lt;/h2&gt; 
&lt;p&gt;To test the agent’s capabilities, we created a business traveler persona and simulated a typical travel planning conversation flow. We focused on routing, function calling accuracy, response quality, and latency metrics. The agent’s routing system directs the user questions to the appropriate specialized node (for example, searching for accommodations, checking weather conditions, or suggesting travel products). Throughout the conversation, the agent maintains the context of previously discussed details, so it can build upon earlier responses while providing relevant new information. For example, after discussing travel destination, the agent can naturally incorporate this into subsequent weather and packing list recommendations.&lt;/p&gt; 
&lt;p&gt;The following screenshots demonstrate the end-user experience, while the underlying API interactions are handled seamlessly on the backend. The complete implementation details, including Lambda function code and API integration patterns, are available in our &lt;a href="https://github.com/aws-samples/sample-travel-assistant-agent/tree/main" target="_blank" rel="noopener"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; 
&lt;div style="justify-content: center;margin: 20px 0"&gt;
 &lt;img loading="lazy" width="1024" height="385" class="alignnone wp-image-112813 size-large" style="width: 80%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-image-5-1024x385.png" alt=""&gt;
&lt;/div&gt; 
&lt;p&gt;The solution demonstrates personalization capabilities using sample user profiles stored in DynamoDB, containing upcoming trips and travel preferences. In production deployments, these profiles can be integrated with existing customer databases and reservation systems to provide a personalized assistance.&lt;/p&gt; 
&lt;div style="justify-content: center;margin: 20px 0"&gt;
 &lt;img loading="lazy" width="1024" height="992" class="alignnone wp-image-112814 size-large" style="width: 80%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-image-6-1024x992.png" alt=""&gt;
&lt;/div&gt; 
&lt;div style="justify-content: center;margin: 20px 0"&gt;
 &lt;img loading="lazy" width="1024" height="571" class="alignnone wp-image-112815 size-large" style="width: 80%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-image-7-1024x571.png" alt=""&gt;
&lt;/div&gt; 
&lt;div style="justify-content: center;margin: 20px 0"&gt;
 &lt;img loading="lazy" width="1024" height="623" class="alignnone wp-image-112816 size-large" style="width: 80%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-image-8-1024x623.png" alt=""&gt;
&lt;/div&gt; 
&lt;p&gt;The product recommendations shown are live links to actual items available on Amazon.com, so the user can explore or purchase these products directly. The user can choose a link to check out the product, or choose &lt;strong&gt;Add to Amazon Cart&lt;/strong&gt; to see the items in their shopping cart.&lt;/p&gt; 
&lt;div style="justify-content: center;margin: 20px 0"&gt;
 &lt;img class="alignnone wp-image-112816 size-large" style="width: 80%;height: auto;border: 1px solid #ddd;border-radius: 4px" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/06/ML-18031-Image-9-V3.jpeg" alt=""&gt;
&lt;/div&gt; 
&lt;h3&gt;Clean up&lt;/h3&gt; 
&lt;p&gt;After you are done experimenting with the travel assistant, you can locate the CloudFormation stack on the AWS CloudFormation console and delete it. This will delete the resources you created.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;Our travel planning assistant agent demonstrates a practical application built by Amazon Nova and LangGraph for solving real-world business challenges. The system streamlines complex travel planning while naturally integrating product recommendations through specialized processing nodes and real-time data integration. Amazon Nova Lite models showed reasonable performance at task orchestration, and Amazon Nova Pro performed well for more complex function calling operations. Looking ahead, this framework could be implemented with more dynamic orchestration systems such as ReAct. To build your own implementation, explore our code samples in the &lt;a href="https://github.com/aws-samples/sample-travel-assistant-agent/tree/main" target="_blank" rel="noopener"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For those looking to deepen their understanding of LLM-powered agents, AWS provides extensive resources on building intelligent systems. The &lt;a href="https://aws.amazon.com/bedrock/agents/?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock Agents documentation&lt;/a&gt; offers insights into automating multistep tasks with FMs, and the &lt;a href="https://github.com/aws-samples/amazon-bedrock-samples/tree/main/agents-and-function-calling" target="_blank" rel="noopener noreferrer"&gt;AWS Bedrock Agent Samples GitHub repo&lt;/a&gt; provides guidance for implementing multiple agent applications using Amazon Bedrock.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;img class="size-medium alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/01/ML-18031-image-10.jpeg" alt="" width="100"&gt;&lt;strong&gt;Isaac Privitera&lt;/strong&gt; is a Principal Data Scientist with the AWS Generative AI Innovation Center, where he develops bespoke generative AI-based solutions to address customers’ business problems. His primary focus lies in building responsible AI systems, using techniques such as RAG, multi-agent systems, and model fine-tuning. When not immersed in the world of AI, Isaac can be found on the golf course, enjoying a football game, or hiking trails with his loyal canine companion, Barry.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img class="size-medium alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/ML-18031-image-11.jpeg" alt="" width="120"&gt;&lt;strong&gt;Ryan Razkenari&lt;/strong&gt; is a Deep Learning Architect at the AWS Generative AI Innovation Center, where he uses his expertise to create cutting-edge AI solutions. With a strong background in AI and analytics, he is passionate about building innovative technologies that address real-world challenges for AWS customers.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img class="size-medium alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/01/ML-18031-image-12.jpeg" alt="" width="100"&gt;&lt;strong&gt;Sungmin Hong&lt;/strong&gt; is a Senior Applied Scientist at the AWS Generative AI Innovation Center, where he helps expedite a variety of use cases for AWS customers. Before joining Amazon, Sungmin was a postdoctoral research fellow at Harvard Medical School. He holds a PhD in Computer Science from New York University. Outside of work, Sungmin enjoys hiking, reading, and cooking.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Introducing Amazon Bedrock AgentCore Gateway: Transforming enterprise AI agent tool development</title>
		<link>https://aws.amazon.com/blogs/machine-learning/introducing-amazon-bedrock-agentcore-gateway-transforming-enterprise-ai-agent-tool-development/</link>
					
		
		<dc:creator><![CDATA[Dhawalkumar Patel]]></dc:creator>
		<pubDate>Fri, 15 Aug 2025 18:04:57 +0000</pubDate>
				<category><![CDATA[Amazon Bedrock]]></category>
		<category><![CDATA[Amazon Machine Learning]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Generative AI]]></category>
		<category><![CDATA[Intermediate (200)]]></category>
		<guid isPermaLink="false">083fb26f5829b5108551a3ffd20466da52a176c1</guid>

					<description>In this post, we discuss Amazon Bedrock AgentCore Gateway, a fully managed service that revolutionizes how enterprises connect AI agents with tools and services by providing a centralized tool server with unified interface for agent-tool communication. The service offers key capabilities including Security Guard, Translation, Composition, Target extensibility, Infrastructure Manager, and Semantic Tool Selection, while implementing sophisticated dual-sided security architecture for both inbound and outbound connections.</description>
										<content:encoded>&lt;p&gt;To fulfill their tasks, AI Agents need access to various capabilities including tools, data stores, prompt templates, and other agents. As organizations scale their AI initiatives, they face an exponentially growing challenge of connecting each agent to multiple tools, creating an M×N integration problem that significantly slows development and increases complexity.&lt;/p&gt; 
&lt;p&gt;Although protocols such as &lt;a href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener noreferrer"&gt;Model Context Protocol&lt;/a&gt; (MCP) and Agent2Agent (A2A) have emerged to address interoperability, implementing these solutions requires substantial engineering effort. Organizations must build MCP servers, convert existing APIs, manage infrastructure, build intelligent tools discovery, and implement security controls, all that while maintaining these integrations over time as protocols rapidly evolve and new major versions are released. As deployments grow to hundreds of agents and thousands of tools, enterprises need a more scalable and manageable solution.&lt;/p&gt; 
&lt;h2&gt;Introducing Amazon Bedrock AgentCore Gateway&lt;/h2&gt; 
&lt;p&gt;We’re excited to announce &lt;a href="https://aws.amazon.com/bedrock/agentcore/" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock AgentCore&lt;/a&gt; Gateway, a fully managed service that revolutionizes how enterprises connect AI agents with tools and services. &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway.html" target="_blank" rel="noopener noreferrer"&gt;AgentCore Gateway&lt;/a&gt; serves as a centralized tool server, providing a unified interface where agents can discover, access, and invoke tools.&lt;/p&gt; 
&lt;p&gt;Built with native support for the MCP, Gateway enables seamless agent-to-tool communication while abstracting away security, infrastructure, and protocol-level complexities. This service provides zero-code MCP tool creation from APIs and &lt;a href="https://aws.amazon.com/lambda/" target="_blank" rel="noopener noreferrer"&gt;AWS Lambda&lt;/a&gt; functions, intelligent tool discovery, built-in inbound and outbound authorization, and serverless infrastructure for MCP servers. You can focus on building intelligent agent experiences rather than managing connectivity with tools and services. The following diagram illustrates the AgentCore Gateway workflow.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114365" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-19425-image-1.png" alt="" width="2584" height="1446"&gt;&lt;/p&gt; 
&lt;h3&gt;Key capabilities of Amazon Bedrock AgentCore Gateway&lt;/h3&gt; 
&lt;p&gt;The Amazon Bedrock AgentCore Gateway introduces a comprehensive set of capabilities designed to revolutionize tool integration for AI agents. At its core, Gateway offers powerful and secure API integration functionality that transforms existing REST APIs into MCP servers. This integration supports both OpenAPI specifications and Smithy models, so organizations can seamlessly convert their enterprise APIs into MCP-compatible tools. Beyond API integration, Gateway provides built-in support for Lambda functions so developers can connect their serverless computing resources as tools with defined schemas. Gateway provides the following key capabilities:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Security Guard&lt;/strong&gt; – Manages OAuth authorization so only valid users and agents can access tools and resources. We will dive deeper into security in the following section.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Translation&lt;/strong&gt; – Converts agent requests using protocols such as MCP into API requests and Lambda invocations, alleviating the need to manage protocol integration or version support.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Composition&lt;/strong&gt; – Combines multiple APIs, functions, and tools into a single MCP endpoint for streamlined agent access.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target extensibility&lt;/strong&gt; – An AgentCore gateway is a central access point that serves as a unified interface for AI agents to discover and interact with tools. It handles authentication, request routing, and protocol translation between MCP and your APIs. Each gateway can manage multiple targets. A target represents a backend service or group of APIs that you want to expose as tools to AI agents. Targets can be AWS Lambda functions, OpenAPI specifications, or Smithy models. Each target can expose multiple tools, and Gateway automatically handles the conversion between MCP and the target’s built-in protocol. Gateway supports streamable http transport.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Infrastructure Manager&lt;/strong&gt; – As a fully managed service, Gateway removes the burden of infrastructure management from organizations. It provides comprehensive infrastructure with built-in security features and robust observability capabilities. Teams no longer need to worry about hosting concerns, scaling issues, or maintaining the underlying infrastructure. The service automatically handles these aspects, providing reliable performance and seamless scaling as demand grows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Semantic Tool Selection&lt;/strong&gt; – Intelligent tool discovery represents another core capability of Gateway. As organizations scale to hundreds or thousands of tools, discovering the right tool becomes increasingly challenging for AI agents. Moreover, when agents are presented with too many tools simultaneously, they can experience something called “tool overload,” leading to hallucinations, incorrect tool selections, or inefficient execution paths that significantly impact performance. Gateway addresses these challenges by providing a special built-in tool named &lt;code&gt;'x_amz_bedrock_agentcore_search'&lt;/code&gt; that can be accessed using the standard MCP tools and call operation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114366" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-19425-image-2.jpeg" alt="" width="1287" height="666"&gt;&lt;/p&gt; 
&lt;h2&gt;Security and authentication&lt;/h2&gt; 
&lt;p&gt;Gateway implements a sophisticated dual-sided security architecture that handles both inbound access to Gateway itself and outbound connections to target services.&lt;/p&gt; 
&lt;p&gt;For inbound requests, Gateway follows the MCP &lt;a href="https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization" target="_blank" rel="noopener noreferrer"&gt;authorization specification&lt;/a&gt;, using OAuth-based authorization to validate and authorize incoming tool calls. Gateway functions as an OAuth resource server. This means it can work with the OAuth Identity Provider your organization might use–whether that’s &lt;a href="https://aws.amazon.com/cognito/" target="_blank" rel="noopener noreferrer"&gt;Amazon Cognito&lt;/a&gt;, Okta, Auth0, or your own OAuth provider. When you create a gateway, you can specify multiple approved client IDs and audiences, giving you granular control over which applications and agents can access your tools. The Gateway validates incoming requests against your OAuth provider, supporting both authorization code flow (3LO) and client credentials flow (2LO, commonly used for service-to-service communication).&lt;/p&gt; 
&lt;p&gt;The outbound security model is equally flexible but varies by target type:&lt;/p&gt; 
&lt;p&gt;For AWS Lambda and Smithy model targets, AgentCore Gateway uses &lt;a href="https://aws.amazon.com/iam/" target="_blank" rel="noopener noreferrer"&gt;AWS Identity and Access Management&lt;/a&gt; (IAM) based authorization. The gateway assumes an IAM role you configure, which can have precisely scoped permissions for each target service. This integrates smoothly with existing AWS security practices and IAM policies.&lt;/p&gt; 
&lt;p&gt;For OpenAPI targets (REST APIs), Gateway supports two authentication methods:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;API key&lt;/strong&gt; – You can configure the key to be sent in either headers or query parameters with customizable parameter names&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OAuth token for 2LO&lt;/strong&gt; – For outbound OAuth authentication to target APIs, Gateway supports two-legged OAuth (2LO) client credentials grant type, enabling secure machine-to-machine communications without user interaction&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Credentials are securely managed through AgentCore Identity’s resource credentials provider. Each target is associated with exactly one authentication configuration, facilitating clear security boundaries and audit trails. AgentCore Identity handles the complex security machinery while presenting a clean, simple interface to developers. You configure security one time during setup, and Gateway handles the token validation, outbound token caching (through AgentCore Identity), and secure communication from there.&lt;/p&gt; 
&lt;h2&gt;Get started with Amazon Bedrock AgentCore Gateway&lt;/h2&gt; 
&lt;p&gt;You can create gateways and add targets through multiple interfaces:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/sdk-for-python/" target="_blank" rel="noopener noreferrer"&gt;AWS SDK for Python (Boto3)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/console/" target="_blank" rel="noopener noreferrer"&gt;AWS Management Console&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/cli/" target="_blank" rel="noopener noreferrer"&gt;AWS Command Line Interface&lt;/a&gt; (AWS CLI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws/bedrock-agentcore-starter-toolkit/tree/main/src/bedrock_agentcore_starter_toolkit/operations/gateway" target="_blank" rel="noopener noreferrer"&gt;AgentCore starter toolkit for fast and straightforward setup&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following practical examples and code snippets demonstrate the process of setting up and using Amazon Bedrock AgentCore Gateway.&lt;/p&gt; 
&lt;h3&gt;Create a gateway&lt;/h3&gt; 
&lt;p&gt;To create a gateway, use &lt;a href="https://aws.amazon.com/cognito/" target="_blank" rel="noopener noreferrer"&gt;Amazon Cognito&lt;/a&gt; for inbound auth using the AWS Boto3:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;gateway_client = boto3.client('bedrock-agentcore-control')
auth_config = {
&amp;nbsp;&amp;nbsp; &amp;nbsp;"customJWTAuthorizer": { 
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"allowedClients": '&amp;lt;cognito_client_id&amp;gt;‘, # Client MUST match with the ClientId configured in Cognito.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"discoveryUrl": '&amp;lt;cognito_oauth_discovery_url&amp;gt;'
&amp;nbsp;&amp;nbsp; &amp;nbsp;}
}
create_response = gateway_client.create_gateway(name='DemoGateway',
&amp;nbsp;&amp;nbsp; &amp;nbsp;roleArn = '&amp;lt;IAM Role&amp;gt;' # The IAM Role must have permissions to create/list/get/delete Gateway 
&amp;nbsp;&amp;nbsp; &amp;nbsp;protocolType='MCP',
&amp;nbsp;&amp;nbsp; &amp;nbsp;authorizerType='CUSTOM_JWT',
&amp;nbsp;&amp;nbsp; &amp;nbsp;authorizerConfiguration=auth_config, 
&amp;nbsp;&amp;nbsp; &amp;nbsp;description='Demo AgentCore Gateway'
)
# Values with &amp;lt; &amp;gt; needs to be replaced with real values&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Here is the reference to &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore-control/latest/APIReference/Welcome.html" target="_blank" rel="noopener noreferrer"&gt;control plane&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/Bedrock-AgentCore/latest/APIReference/Welcome.html" target="_blank" rel="noopener noreferrer"&gt;data plane&lt;/a&gt; APIs for Amazon Bedrock AgentCore.&lt;/p&gt; 
&lt;h3&gt;Create gateway targets&lt;/h3&gt; 
&lt;p&gt;Create a target for an existing API using OpenAPI specification with API key as an outbound auth:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-css"&gt;# Create outbound credentials provider in AgentCore Identity
acps&amp;nbsp;&amp;nbsp;boto3client(service_name"bedrock-agentcore-control")

responseacpscreate_api_key_credential_provider(
name"APIKey",
apiKey"&amp;lt;your secret API key"
)

credentialProviderARN&amp;nbsp;&amp;nbsp;response['credentialProviderArn']

# Specify OpenAPI spec file via S3 or inline
openapi_s3_target_config = {
&amp;nbsp;&amp;nbsp; &amp;nbsp;"mcp": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"openApiSchema": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"s3": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"uri": openapi_s3_uri
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;}
}

# API Key credentials provider configuration
api_key_credential_config = [
&amp;nbsp;&amp;nbsp; &amp;nbsp;{
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"credentialProviderType" : "API_KEY", 
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"credentialProvider": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"apiKeyCredentialProvider": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"credentialParameterName": "api_key", # Replace this with the name of the api key name expected by the respective API provider. For passing token in the header, use "Authorization"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"providerArn": credentialProviderARN,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"credentialLocation":"QUERY_PARAMETER", # Location of api key. Possible values are "HEADER" and "QUERY_PARAMETER".
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#"credentialPrefix": " " # Prefix for the token. Valid values are "Basic". Applies only for tokens.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp;]

# Add the OpenAPI target to the gateway
targetname='DemoOpenAPITarget'
response = gateway_client.create_gateway_target(
&amp;nbsp;&amp;nbsp; &amp;nbsp;gatewayIdentifier=gatewayID,
&amp;nbsp;&amp;nbsp; &amp;nbsp;name=targetname,
&amp;nbsp;&amp;nbsp; &amp;nbsp;description='OpenAPI Target with S3Uri using SDK',
&amp;nbsp;&amp;nbsp; &amp;nbsp;targetConfiguration=openapi_s3_target_config,
&amp;nbsp;&amp;nbsp; &amp;nbsp;credentialProviderConfigurations=api_key_credential_config)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Create a target for a Lambda function:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-javascript"&gt;# Define the lambda target with tool schema. Replace the AWS Lambda function ARN below
lambda_target_config = {
&amp;nbsp;&amp;nbsp;"mcp": {
&amp;nbsp;&amp;nbsp; &amp;nbsp;"lambda": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"lambdaArn": "&amp;lt;Your AWS Lambda function ARN&amp;gt;",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;"toolSchema": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"inlinePayload": [
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;{
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"name": "get_order_tool",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"description": "tool to get the order",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"inputSchema": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"type": "object",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"properties": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"orderId": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"type": "string"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;},
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"required": [
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"orderId"
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;]}}]}}}}

# Create outbound auth config. For AWS Lambda function, its always IAM.
credential_config = [ 
&amp;nbsp;&amp;nbsp; &amp;nbsp;{
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"credentialProviderType" : "GATEWAY_IAM_ROLE"
&amp;nbsp;&amp;nbsp; &amp;nbsp;}
]

# Add AWS Lambda target to the gateway
targetname='LambdaUsingSDK'
response = gateway_client.create_gateway_target(
&amp;nbsp;&amp;nbsp; &amp;nbsp;gatewayIdentifier=gatewayID,
&amp;nbsp;&amp;nbsp; &amp;nbsp;name=targetname,
&amp;nbsp;&amp;nbsp; &amp;nbsp;description='Lambda Target using SDK',
&amp;nbsp;&amp;nbsp; &amp;nbsp;targetConfiguration=lambda_target_config,
&amp;nbsp;&amp;nbsp; &amp;nbsp;credentialProviderConfigurations=credential_config)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Use Gateway with different agent frameworks&lt;/h3&gt; 
&lt;p&gt;Use Gateway with &lt;a href="https://strandsagents.com/latest/" target="_blank" rel="noopener noreferrer"&gt;Strands Agents&lt;/a&gt; integration:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;
from strands import Agent
import logging

def create_streamable_http_transport():
&amp;nbsp;&amp;nbsp; &amp;nbsp;return streamablehttp_client(gatewayURL,headers={"Authorization": f"Bearer {token}"})

client = MCPClient(create_streamable_http_transport)

with client:
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Call the listTools 
&amp;nbsp;&amp;nbsp; &amp;nbsp;tools = client.list_tools_sync()
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Create an Agent with the model and tools
&amp;nbsp;&amp;nbsp; &amp;nbsp;agent = Agent(model=yourmodel,tools=tools) ## you can replace with any model you like
&amp;nbsp; &amp;nbsp;&amp;nbsp;# Invoke the agent with the sample prompt. This will only invoke &amp;nbsp;MCP listTools and retrieve the list of tools the LLM has access to. The below does not actually call any tool.
&amp;nbsp;&amp;nbsp; &amp;nbsp;agent("Hi , can you list all tools available to you")
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Invoke the agent with sample prompt, invoke the tool and display the response
&amp;nbsp;&amp;nbsp; &amp;nbsp;agent("Check the order status for order id 123 and show me the exact response from the tool")&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;Use Gateway with LangChain integration:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;from langchain_mcp_adapters.client import MultiServerMCPClient
from langgraph.prebuilt import create_react_agent
from langchain.chat_models import init_chat_model

client = MultiServerMCPClient(
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;{
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"healthcare": {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"url": gateway_endpoint,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"transport": "streamable_http",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"headers":{"Authorization": f"Bearer {jwt_token}"}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp;)
&amp;nbsp;agent = create_react_agent(
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;LLM, 
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;tools, 
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;prompt=systemPrompt
&amp;nbsp;)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Implement semantic search&lt;/h3&gt; 
&lt;p&gt;You can opt in to semantic search when creating a gateway. It automatically provisions a powerful built-in tool called &lt;code&gt;x_amz_bedrock_agentcore_search&lt;/code&gt; that enables intelligent tool discovery through natural language queries. Use the output of the search tool in place of MCP’s list operation for scalable and performant tool discovery. The following diagram illustrates how you can use the MCP search tool.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114367" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/ML-19425-image-3.jpeg" alt="" width="1287" height="329"&gt;&lt;/p&gt; 
&lt;p&gt;To enable semantic search, use the following code:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-python"&gt;&amp;nbsp;# Enable semantic search of tools
&amp;nbsp;&amp;nbsp; &amp;nbsp;search_config = {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"mcp": {"searchType": "SEMANTIC", "supportedVersions": ["2025-03-26"]}
&amp;nbsp;&amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp;# Create the gateway
&amp;nbsp;&amp;nbsp; &amp;nbsp;response = agentcore_client.create_gateway(
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;name=gateway_name,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;roleArn=gateway_role_arn,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;authorizerType="CUSTOM_JWT",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;description=gateway_desc,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;protocolType="MCP",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;authorizerConfiguration=auth_config,
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;protocolConfiguration=search_config,
&amp;nbsp;&amp;nbsp; &amp;nbsp;)
def tool_search(gateway_endpoint, jwt_token, query):
&amp;nbsp;&amp;nbsp; &amp;nbsp;toolParams = {
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"name": "x_amz_bedrock_agentcore_search",
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"arguments": {"query": query},
&amp;nbsp;&amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp;toolResp = invoke_gateway_tool(
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;gateway_endpoint=gateway_endpoint, jwt_token=jwt_token, tool_params=toolParams
&amp;nbsp;&amp;nbsp; &amp;nbsp;)
&amp;nbsp;&amp;nbsp; &amp;nbsp;tools = toolResp["result"]["structuredContent"]["tools"]
&amp;nbsp;&amp;nbsp; &amp;nbsp;return tools&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;To find the entire code sample, visit the &lt;a href="https://github.com/awslabs/amazon-bedrock-agentcore-samples/blob/main/01-tutorials/02-AgentCore-gateway/03-search-tools/01-gateway-search.ipynb" target="_blank" rel="noopener noreferrer"&gt;Semantic search tutorial&lt;/a&gt; in the &lt;a href="https://github.com/awslabs/amazon-bedrock-agentcore-samples/" target="_blank" rel="noopener noreferrer"&gt;amazon-bedrock-agentcore-samples&lt;/a&gt; GitHub repository.&lt;/p&gt; 
&lt;h2&gt;Assess Gateway performance using monitoring and observability&lt;/h2&gt; 
&lt;p&gt;Amazon Bedrock AgentCore Gateway provides observability through integration with &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway-advanced-observability-metrics.html" target="_blank" rel="noopener noreferrer"&gt;Amazon CloudWatch&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway-cloudtrail.html" target="_blank" rel="noopener noreferrer"&gt;AWS CloudTrail&lt;/a&gt;, for detailed monitoring and troubleshooting of your tool integrations. The observability features include multiple dimensions of gateway operations through detailed metrics: &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway-advanced-observability-metrics.html#gateway-metrics-usage" target="_blank" rel="noopener noreferrer"&gt;usage metrics&lt;/a&gt; (&lt;code&gt;TargetType&lt;/code&gt;, &lt;code&gt;IngressAuthType&lt;/code&gt;, &lt;code&gt;EgressAuthType&lt;/code&gt;, &lt;code&gt;RequestsPerSession&lt;/code&gt;), &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway-advanced-observability-metrics.html#gateway-metrics-invocation" target="_blank" rel="noopener noreferrer"&gt;invocation metrics&lt;/a&gt; (&lt;code&gt;Invocations&lt;/code&gt;, &lt;code&gt;ConcurrentExecutions&lt;/code&gt;, &lt;code&gt;Sessions&lt;/code&gt;), &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway-advanced-observability-metrics.html#gateway-metrics-invocation" target="_blank" rel="noopener noreferrer"&gt;performance metrics&lt;/a&gt; (&lt;code&gt;Latency&lt;/code&gt;, &lt;code&gt;Duration&lt;/code&gt;, &lt;code&gt;TargetExecutionTime&lt;/code&gt;), and error rates (&lt;code&gt;Throttles&lt;/code&gt;, &lt;code&gt;SystemErrors&lt;/code&gt;, &lt;code&gt;UserErrors&lt;/code&gt;). The performance metrics can be analyzed using various statistical methods (Average, Minimum, Maximum, p50, p90, p99) and are tagged with relevant dimensions for granular analysis, including Operation, Resource, and Name . For operational logging, Gateway integrates with CloudTrail to capture both management and &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/understanding-gateway-cloudtrail-log-entries.html" target="_blank" rel="noopener noreferrer"&gt;data events&lt;/a&gt;, providing a complete audit trail of API interactions. The metrics are accessible through both the Amazon Bedrock AgentCore console and CloudWatch console, where you can create custom dashboards, set up automated &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway-advanced-observability-metrics.html#gateway-advanced-observability-alarms" target="_blank" rel="noopener noreferrer"&gt;alerts&lt;/a&gt;, and perform detailed performance analysis.&lt;/p&gt; 
&lt;h2&gt;Best practices&lt;/h2&gt; 
&lt;p&gt;Gateway offers an enhanced debugging option through the &lt;code&gt;exceptionLevel&lt;/code&gt; property, which can be enabled during Gateway creation or updated as shown in the following code example:&lt;/p&gt; 
&lt;div class="hide-language"&gt; 
 &lt;pre&gt;&lt;code class="lang-code"&gt;create_response = gateway_client.create_gateway(name='DemoGateway',
&amp;nbsp;&amp;nbsp; &amp;nbsp;roleArn = '&amp;lt;IAM Role&amp;gt;' # The IAM Role must have permissions to create/list/get/delete Gateway 
&amp;nbsp;&amp;nbsp; &amp;nbsp;protocolType='MCP',
&amp;nbsp;&amp;nbsp; &amp;nbsp;authorizerType='CUSTOM_JWT',
&amp;nbsp;&amp;nbsp; &amp;nbsp;authorizerConfiguration=auth_config, 
&amp;nbsp;&amp;nbsp; &amp;nbsp;description='Demo AgentCore Gateway',
    exceptionLevel="DEBUG"   # Debug mode for granular error messages
)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;When activated, this feature provides more granular error messages in the content text block (with &lt;code&gt;isError:true&lt;/code&gt;) during Gateway testing, facilitating quicker troubleshooting and integration. When documenting and extracting Open APIs for Gateway, focus on clear, natural language descriptions that explain real-world use cases. Include detailed field descriptions, validation rules, and examples for complex data structures while maintaining consistent terminology throughout. For optimal tool discovery, incorporate relevant business domain keywords naturally in descriptions and provide context about when to use each API. Finally, test semantic search effectiveness so tools are discoverable through natural language queries. Regular reviews and updates are essential to maintain documentation quality as APIs evolve.When extracting APIs from larger specifications, identify the core functionality needed for agent tasks, maintain semantic relationships between components, and preserve security definitions. Follow a systematic extraction process: review the full specification, map agent use cases to specific endpoints, extract relevant paths and schemas while maintaining dependencies, and validate the extracted specification.The following are the best practices on grouping your APIs into a Gateway target:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start with the use case and group your MCP tools based on the agentic application’s business domain similar to domain-driven design principles applicable to the microservices paradigm.&lt;/li&gt; 
 &lt;li&gt;You can attach only one resource credentials provider for outbound authorization for the Gateway target. Group the tools based on the outbound authorizer.&lt;/li&gt; 
 &lt;li&gt;Group your APIs based on the type of the APIs, that is, OpenAPI, Smithy, or AWS Lambda, serving as a bridge to other enterprise APIs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When onboarding tools to Gateway, organizations should follow a structured process that includes security and vulnerability checks. Implement a review pipeline that scans API specifications for potential security risks, maintains proper authentication mechanisms, and validates data handling practices. For runtime tool discovery, use the semantic search capabilities in Gateway, but also consider design-time agent-tool mapping for critical workflows to provide predictable behavior.&lt;/p&gt; 
&lt;p&gt;Enrich tool metadata with detailed descriptions, usage examples, and performance characteristics to improve discoverability and aid in appropriate tool selection by agents. To maintain consistency across your enterprise, integrate Gateway with a centralized tool registry that serves as a single source of truth. This can be achieved using open source solutions such as the &lt;a href="https://github.com/modelcontextprotocol/registry/tree/main/tools/publisher" target="_blank" rel="noopener noreferrer"&gt;MCP Registry Publisher Tool&lt;/a&gt;, which publishes MCP server details to an MCP registry. Regularly synchronize Gateway’s tool inventory with this central registry for up-to-date and consistent tool availability across your AI landscape. These practices can help maintain a secure, well-organized, and efficiently discoverable tool solution within Gateway, facilitating seamless agent-tool interactions while can align with enterprise governance standards.&lt;/p&gt; 
&lt;h2&gt;What customers are saying&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://innovaccer.com/" target="_blank" rel="noopener"&gt;Innovaccer&lt;/a&gt;, a leading healthcare technology company, shares their experience:&lt;/p&gt; 
&lt;blockquote&gt;
 &lt;p&gt;&lt;em&gt;“AI has massive potential in healthcare, but getting the foundation right is key. That’s why we’re building HMCP (Healthcare Model Context Protocol) on Amazon Bedrock AgentCore Gateway, which has been a game-changer, automatically converting our existing APIs into MCP-compatible tools and scaling seamlessly as we grow. It gives us the secure, flexible base we need to make sure AI agents can safely and responsibly interact with healthcare data, tools, and workflows. With this partnership, we’re accelerating AI innovation with trust, compliance, and real-world impact at the core.” &lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;—Abhinav Shashank, CEO &amp;amp; Co-founder, Innovaccer&lt;/p&gt;
&lt;/blockquote&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;Amazon Bedrock AgentCore Gateway represents a significant advancement in enterprise AI agent development. By providing a fully managed, secure, and scalable solution for tool integration, Gateway enables organizations to accelerate their AI initiatives while maintaining enterprise-grade security and governance. As part of the broader Amazon Bedrock AgentCore suite, Gateway works seamlessly with other capabilities including Runtime, Identity, Code Interpreter, Memory, Browser, and Observability to provide a comprehensive domain for building and scaling AI agent applications.&lt;/p&gt; 
&lt;p&gt;For more detailed information and advanced configurations, refer to the &lt;a href="https://github.com/awslabs/amazon-bedrock-agentcore-samples/tree/main/01-tutorials/02-AgentCore-gateway" target="_blank" rel="noopener noreferrer"&gt;code samples on GitHub&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock AgentCore Gateway Developer Guide&lt;/a&gt; and &lt;a href="https://aws.amazon.com/bedrock/agentcore/pricing/" target="_blank" rel="noopener noreferrer"&gt;Amazon AgentCore Gateway pricing&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the authors&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/dhawalkp.jpg"&gt;&lt;img loading="lazy" class="alignleft size-thumbnail wp-image-112777" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/31/dhawalkp-100x133.jpg" alt="" width="100" height="133"&gt;&lt;/a&gt;Dhawal Patel&lt;/strong&gt; is a Principal Machine Learning Architect at Amazon Web Services (AWS). He has worked with organizations ranging from large enterprises to mid-sized startups on problems related to distributed computing and AI. He focuses on deep learning, including natural language processing (NLP) and computer vision domains. He helps customers achieve high-performance model inference on Amazon SageMaker.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="wp-image-114371 size-thumbnail alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/14/sfmike-100x133.jpeg" alt="" width="100" height="133"&gt;&lt;strong&gt;Mike Liu&lt;/strong&gt; is a Principal Product Manager at Amazon, where he works at the intersection of agentic AI and foundational model development. He led the product roadmap for Amazon Bedrock Agents and is now helping customers achieve superior performance using model customization on Amazon Nova models. Prior to Amazon, he worked on AI/ML software in Google Cloud and ML accelerators at Intel.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;img loading="lazy" class="alignleft wp-image-9807 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2019/10/03/kartik-rustagi-100.jpg" alt="" width="100" height="131"&gt;&lt;strong&gt;Kartik Rustagi&lt;/strong&gt; works as a Software Development Manager in Amazon AI. He and his team focus on enhancing the conversation capability of chat bots powered by Amazon Lex. When not at work, he enjoys exploring the outdoors and savoring different cuisines.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Build a scalable containerized web application on AWS using the MERN stack with Amazon Q Developer – Part 1</title>
		<link>https://aws.amazon.com/blogs/machine-learning/build-a-scalable-containerized-web-application-on-aws-using-the-mern-stack-with-amazon-q-developer-part-1/</link>
					
		
		<dc:creator><![CDATA[Bill Chan]]></dc:creator>
		<pubDate>Fri, 15 Aug 2025 16:45:40 +0000</pubDate>
				<category><![CDATA[Amazon Cognito]]></category>
		<category><![CDATA[Amazon DocumentDB]]></category>
		<category><![CDATA[Amazon Elastic Container Service]]></category>
		<category><![CDATA[Amazon Q Developer]]></category>
		<category><![CDATA[Technical How-to]]></category>
		<guid isPermaLink="false">5bcec91ee32cdcc8cb5bedc7e9de1687a85a73c1</guid>

					<description>In a traditional SDLC, a lot of time is spent in the different phases researching approaches that can deliver on requirements: iterating over design changes, writing, testing and reviewing code, and configuring infrastructure. In this post, you learned about the experience and saw productivity gains you can realize by using Amazon Q Developer as a coding assistant to build a scalable MERN stack web application on AWS.</description>
										<content:encoded>&lt;p&gt;The MERN (MongoDB, Express, React, Node.js) stack is a popular JavaScript web development framework. The combination of technologies is well-suited for building scalable, modern web applications, especially those requiring real-time updates and dynamic user interfaces. &lt;a href="https://aws.amazon.com/q/developer" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Developer&lt;/a&gt; is a generative AI-powered assistant that improves developer efficiency across the different phases of the software development lifecycle (SDLC). In this two-part blog series, I capture the experience and demonstrate the productivity gains you can achieve by using Amazon Q Developer as a coding assistant to build a scalable MERN stack web application on AWS. The solution forms a solid foundation for you to build a feature rich web application. In my case, using the process outlined in this blog, I extended the MERN stack web application to include real-time video conferencing (using &lt;a href="https://aws.amazon.com/chime/chime-sdk/" target="_blank" rel="noopener noreferrer"&gt;Amazon Chime SDK&lt;/a&gt;) and an AI chatbot (invoking &lt;a href="https://aws.amazon.com/bedrock" target="_blank" rel="noopener noreferrer"&gt;Amazon Bedrock&lt;/a&gt; foundation models).&lt;/p&gt; 
&lt;p&gt;Typically, in the plan phase of the SDLC, time is spent researching approaches and identifying common solution patterns that can deliver on requirements. Using Amazon Q Developer, you can speed up this process by prompting for an approach to deploy a scalable MERN stack web application on AWS. Trained on over 17 years of AWS experience building in the cloud, Amazon Q Developer responses are based on AWS well-architected patterns and best practices. In the design phase, I use the responses from Amazon Q Developer to craft a detailed requirements prompt to generate the code for your MERN stack web application. Then in the build phase, I extend the code to implement a working solution, generate unit tests and conduct an automated code review.&lt;/p&gt; 
&lt;p&gt;In part 2 of this blog series, I will use Amazon Q Developer to extend the base MERN stack web application to include a chat user interface (which invokes an agentic workflow based on the &lt;a href="https://strandsagents.com/latest/" target="_blank" rel="noopener noreferrer"&gt;Strands Agent SDK&lt;/a&gt; and Amazon Bedrock), deploy the solution to AWS using infrastructure as code (IaC), troubleshoot issues and generate the documentation for our solution.&lt;/p&gt; 
&lt;h2&gt;Walkthrough&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;To complete the walkthrough in this post, you must have the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An &lt;a href="https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?refid=em_127222&amp;amp;p=free&amp;amp;c=hp&amp;amp;z=1" target="_blank" rel="noopener noreferrer"&gt;AWS account&lt;/a&gt; to deploy the solution components to AWS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/cli/" target="_blank" rel="noopener noreferrer"&gt;AWS Command Line Interface (AWS CLI)&lt;/a&gt; installed and configured.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/products/docker-desktop/" target="_blank" rel="noopener noreferrer"&gt;Docker Desktop&lt;/a&gt; installed.&lt;/li&gt; 
 &lt;li&gt;Set up access to Amazon Q Developer by using one of the following two options: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-free-tier.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Developer Free tier&lt;/a&gt; – Provides access to explore capabilities before opting for a paid tier and requires an &lt;a href="https://profile.aws.amazon.com/" target="_blank" rel="noopener noreferrer"&gt;AWS Builder ID profile&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-pro-tier.html" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Developer Pro tier&lt;/a&gt; – Paid subscription with access to additional features. Set up through &lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-pro-tier-setting-up-access.html" target="_blank" rel="noopener noreferrer"&gt;IAM Identity Center&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;A supported integrated development environment (IDE) including Visual Studio Code and JetBrains IDEs. For more information, follow the instructions for &lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/q-in-IDE-setup.html#setup-vscode" target="_blank" rel="noopener noreferrer"&gt;installing the Amazon Q Developer extension or plugin&lt;/a&gt; in your IDE.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sign in to Amazon Q Developer (in your IDE)&lt;/h3&gt; 
&lt;p&gt;After setting up Amazon Q Developer access tier and installing the Amazon Q extension for your IDE, you can sign in to Amazon Q Developer by using the IDE.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first sign-in flow shows the authentication process for the Free tier using an AWS Builder ID.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-1-4.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-113230 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-1-4.png" alt="Diagram showing Amazon Q Developer sign-in process for Visual Studio Code using Free tier" width="925" height="590"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;The second sign-in flow shows the authentication process for the Pro tier using a sign-in URL to the AWS access portal (provided by your AWS administrator).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-2-1.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-113229 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-2-1.png" alt="Diagram showing Amazon Q Developer sign-in process for Visual Studio Code using Pro tier" width="1312" height="501"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;After successful authentication, you’ll be presented with an initial chat window to start a conversation with Amazon Q Developer. In the chat input at the bottom, you have options to add additional context for Amazon Q Developer to provide responses such as using the active file or the entire workspace, defining rules for Amazon Q Developer to follow when it generates responses, toggling agentic coding on and off, and selecting your preferred foundation model (Claude Sonnet 4 in our case).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-1-q-chat.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-114108 size-large" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-1-q-chat-916x1024.png" alt="Diagram showing Amazon Q Developer chat window" width="916" height="1024"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;With Free Tier, you have access to limited agentic requests per month, access to the latest Claude models and use of Amazon Q Developer in the IDE or CLI. In this post, I use the Pro Tier, which in addition to Free Tier features, also provides increased limits of agentic requests and app transformation, Identity center support and IP indemnity.&lt;/p&gt; 
&lt;h3&gt;Plan&lt;/h3&gt; 
&lt;p&gt;In the planning phase, you can prompt for a solution approach to better understand the different components that will make up the MERN stack web application. You would toggle agentic coding off in this phase as you research and understand the best approach. Example planning phase prompt:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;“Provide a high-level summary of a solution approach to deploying a scalable MERN stack application on AWS.”&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The response from Amazon Q Developer (also shown in the following screenshot) breaks down the solution into the following components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Frontend React application&lt;/li&gt; 
 &lt;li&gt;Backend NodeJS and Express containerized app running on &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html" target="_blank" rel="noopener noreferrer"&gt;Amazon ECS Fargate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Database using MongoDB or &lt;a href="https://aws.amazon.com/documentdb" target="_blank" rel="noopener noreferrer"&gt;Amazon DocumentDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Core network infrastructure&lt;/li&gt; 
 &lt;li&gt;Security&lt;/li&gt; 
 &lt;li&gt;Monitoring and operations&lt;/li&gt; 
 &lt;li&gt;Continuous integration and delivery (CI/CD) pipeline&lt;/li&gt; 
 &lt;li&gt;Performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-4-3.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-113227 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-4-3.png" alt="Diagram showing the Amazon Q Developer response to the solution approach prompt" width="1188" height="606"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Design &amp;amp; Build&lt;/h3&gt; 
&lt;p&gt;After reviewing the solution approach, you can create a more detailed prompt about the web application requirements, which will be used in the feature development capability of Amazon Q Developer to generate the solution components. Turn agentic coding on before submitting the prompt. Example design phase prompt:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;“Build a scalable containerized web application using the MERN stack on AWS, with login and sign-up pages integrated with Amazon Cognito, a landing page that retrieves a list of shops from DocumentDB. I don’t intend to use AWS Amplify. It needs to be a modular design with components that can scale independently, running as containers using ECS and Fargate, highly available across two Availability Zones. I need to build, test and run the MERN stack locally before pushing the solution to AWS.” &lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;As shown in the following screenshots, Amazon Q Developer will provide an architecture overview of the solution before going through the build process step by step. I will provide a select number of screenshots for illustration but note that the steps generated by Amazon Q Developer will vary for your solution prompt.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-2-solution.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114107" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-2-solution.png" alt="Diagram showing the Amazon Q Developer response to the solution approach prompt" width="1688" height="1376"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For each file that it creates or updates, Amazon Q Developer gives you the option to review the difference and undo the changes. This is an important step to understand whether the generated code meets your requirements. For example, the snippet below shows an update the Navbar component.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-114082 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-2-solution-diff.png" alt="Diagram showing the update to the Navbar component." width="1684" height="272"&gt;&lt;/p&gt; 
&lt;p&gt;When viewing the diff, you can see that Amazon Q Developer has added a new button class to fix a display issue.&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-114083 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-2-solution-diff-1.png" alt="Diagram showing the diff of Amazon Q Developer adding a new button class to fix a display issue" width="1676" height="994"&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer can also execute shell commands. In this case, create the backend and frontend directory. You have the option to ‘Reject’ or ‘Run’ the command.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-3-prompt-command.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-114106 size-large" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-3-prompt-command-1024x215.png" alt="Diagram showing the option to ‘Reject’ or ‘Run’ the shell command to create the backend and frontend directories" width="1024" height="215"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here’s a snippet of Amazon Q Developer creating the authentication service, data model and Dockerfile for the solution.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-4-middleware.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-114105 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-4-middleware.png" alt="Diagram showing Amazon Q Developer creating the authentication service, data model and Dockerfile for the solution." width="1688" height="918"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Another snippet of Amazon Q Developer creating the React frontend.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-5-frontend.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-114104 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-5-frontend.png" alt="Diagram showing Amazon Q Developer creating the React frontend." width="1682" height="888"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A snippet of Amazon Q Developer creating the AWS infrastructure components.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-6-infra.png"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-114103" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-6-infra.png" alt="Diagram showing Amazon Q Developer creating the AWS infrastructure components" width="1686" height="1068"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer then prompts to execute the deployment.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-7-deploy.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114102" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-7-deploy-1024x201.png" alt="Diagram showing the option to ‘Reject’ or ‘Run’ the shell command to make the deploy script executable." width="1024" height="201"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;But I noticed that it hasn’t followed my initial prompt to “build, test and run the MERN stack locally before pushing the solution to AWS”, so I provide the following prompt:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;“In my initial prompt, I asked to build, test and run the MERN stack locally before pushing the solution to AWS.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer acknowledges my observation and makes the necessary changes for local deployment.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-8-revised.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114101" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-8-revised-1024x679.png" alt="Diagram showing Amazon Q Developer creating files to run locally." width="1024" height="679"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Next, Amazon Q Developer will build, test and run the MERN stack locally as shown below.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-9-local-deploy.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114100" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-9-local-deploy-1024x637.png" alt="Diagram showing Amazon Q Developer setting up and running the application locally." width="1024" height="637"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When reviewing the .env file changes, I noticed that the Amazon Cognito properties are not properly set, so provide the following prompt:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;“When reviewing your .env file changes, I noticed that setting to COGNITO_USER_POOL_ID and COGNITO_CLIENT_ID to local-development is incorrect, as I should be connecting to Amazon Cognito in AWS. And this hasn't been created yet. Additionally, the local deployment has been configured to connect to the local MongoDB container instead of DocumentDB.”&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer again acknowledges my observation and attempts to fix the issues. These two issues highlight that to effectively use Amazon Q Developer, it’s important to review and challenge the responses provided.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-10-local-cognito.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114099" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-10-local-cognito-1024x474.png" alt="Diagram showing Amazon Q Developer fixing Cognito and database issues." width="1024" height="474"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After fixing the issues, Amazon Q Developer updates the README.md to reflect the updated approach and asks if I want to do a quick deployment with mocked authentication or an actual deployment with Amazon Cognito resources.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-11-deploy-options.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114098" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-11-deploy-options-1024x834.png" alt="Diagram showing Amazon Q Developer summarizing fixes made and options for next step." width="1024" height="834"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;I choose option B, with real Amazon Cognito resources, so Amazon Q Developer deploys the resources as shown below.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-12-cognito-deploy-blurred.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114128" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-12-cognito-deploy-blurred-1024x709.png" alt="Diagram showing Amazon Q Developer executing the setup-aws-cognito.sh script" width="1024" height="709"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer now checks that the frontend, backend and MongoDB containers are running.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-13-docker-status.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114096" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-13-docker-status-1024x578.png" alt="Diagram showing the output of the container status" width="1024" height="578"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer also tests that the application is running by executing curl commands to the application endpoints.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-14-curl.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114095" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-14-curl-1024x689.png" alt="Diagram showing Amazon Q Developer testing application endpoints." width="1024" height="689"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After successfully running the commands, Amazon Q Developer provides a summary of the results, with details on how to access and test the application.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-15-summary-blurred.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114127" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-15-summary-blurred-1024x764.png" alt="Diagram showing application testing results." width="1024" height="764"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here’s a diagram showing the locally deployed solution.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-10.jpeg"&gt;&lt;img loading="lazy" class="alignnone size-full wp-image-113221" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/05/image-10.jpeg" alt="Diagram showing the MERN stack solution components deployed locally." width="370" height="311"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Now that the frontend, backend, and MongoDB containers are running, you can access the frontend application &lt;strong&gt;Sign In&lt;/strong&gt; page on http://localhost:3000.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-16-login.png"&gt;&lt;img loading="lazy" class="alignnone wp-image-114093 size-large" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-16-login-1024x770.png" alt="Diagram showing the Sign In page for the application." width="1024" height="770"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Before logging in, you need to create a user. Choose the &lt;strong&gt;Sign Up&lt;/strong&gt; link to enter an email and password.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-17-signup.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114092" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-17-signup-1024x752.png" alt="Diagram showing the Sign Up page for the application." width="1024" height="752"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After attempting to sign up, I noticed that Amazon Q Developer hasn’t generated the corresponding frontend screen to enter the confirmation code, so I prompt it to fix the issue. Again, the generated code isn’t always perfect, but it’s a good starting point.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-18-confirm.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114091" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-18-confirm-1024x733.png" alt="Diagram showing the Sign Up verification code page" width="1024" height="733"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After authentication, you’ll be routed to the shops page as shown.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-19-shops.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114090" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-19-shops-1024x409.png" alt="Diagram showing the authenticated landing page with available shops." width="1024" height="409"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test&lt;/h3&gt; 
&lt;p&gt;Now that you’ve built and can run the MERN stack web application locally, you can use Amazon Q Developer to generate unit tests to find defects and improve code quality. I provide the following prompt:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;“Can you generate unit tests for the project?”&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer will then create comprehensive unit tests for the application.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-20-unit-test.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114089" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-20-unit-test-1024x894.png" alt="Diagram showing Amazon Q Developer creating unit tests for the application" width="1024" height="894"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;At completion, Amazon Q Developer will provide a summary of the unit tests generated:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-21-unit-test-summary.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114088" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-21-unit-test-summary-1024x684.png" alt="Diagram showing a summary of the unit tests generated." width="1024" height="684"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer also provides instructions for executing the tests:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-23-unit-test-run.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114087" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-23-unit-test-run-1024x254.png" alt="Diagram showing Amazon Q Developer instructions to run the tests." width="1024" height="254"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After executing the unit tests, Amazon Q Developer provides a summary of the results.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-22-unit-test-results.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114086" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-22-unit-test-results-1024x720.png" alt="Diagram showing the Amazon Q Developer unit tests summary." width="1024" height="720"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Review&lt;/h3&gt; 
&lt;p&gt;We can now conduct a code review of the MERN stack application by prompting the following:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;“Can you do a code review of my project to identify and fix any code issues?”&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Amazon Q Developer will perform a code review and identify issues that require attention.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-24-code-review.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114085" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-24-code-review-1024x921.png" alt="Diagram showing Amazon Q Developer performing a comprehensive code review." width="1024" height="921"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After completing the review, Amazon Q Developer will provide a summary of the critical issues fixed, along with next steps.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-25-code-review-fixed.png"&gt;&lt;img loading="lazy" class="alignnone size-large wp-image-114084" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/12/ml-18115-25-code-review-fixed-1024x802.png" alt="Diagram showing a summary of the critical issues fixed as part of the code review by Amazon Q Developer." width="1024" height="802"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Clean up&lt;/h2&gt; 
&lt;p&gt;To avoid incurring future charges, remove the Amazon Cognito resources that you created.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In a traditional SDLC, a lot of time is spent in the different phases researching approaches that can deliver on requirements: iterating over design changes, writing, testing and reviewing code, and configuring infrastructure. &lt;a href="https://aws.amazon.com/q/developer" target="_blank" rel="noopener noreferrer"&gt;Amazon Q Developer&lt;/a&gt; is a generative AI-powered assistant that improves developer efficiency across the phases of the SDLC. In this post, you learned about the experience and saw productivity gains you can realize by using Amazon Q Developer as a coding assistant to build a scalable MERN stack web application on AWS.&lt;/p&gt; 
&lt;p&gt;In the plan phase, you used Amazon Q Developer to prompt for a solution approach to deploy a scalable MERN stack web application on AWS. Then in the design phase, you used the initial responses from Amazon Q Developer to craft a detailed requirements prompt and generated the code for your MERN stack web application. In the build phase, you customized the code and deployed a working solution locally. In the test phase, Amazon Q Developer generated the unit tests for you to identify bugs early to improve code quality. Finally, in the review phase, you conducted a code review and remediated issues identified.&lt;/p&gt; 
&lt;p&gt;In part 2 of this blog series, you will use Amazon Q Developer to extend the base MERN stack web application to include a chat user interface (which invokes an agentic workflow based on the &lt;a href="https://strandsagents.com/latest/" target="_blank" rel="noopener noreferrer"&gt;Strands Agent SDK&lt;/a&gt; and Amazon Bedrock), deploy the solution to AWS using infrastructure as code (IaC), troubleshoot issues and generate the documentation for our solution.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;About the Author&lt;/h3&gt; 
&lt;p&gt;&lt;img loading="lazy" class="wp-image-113967 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/10/bill-chan.png" alt="" width="100" height="102"&gt;&lt;strong&gt;Bill Chan&lt;/strong&gt; is an Enterprise Solutions Architect working with large enterprises to craft highly scalable, flexible, and resilient cloud architectures. He helps organizations understand best practices around advanced cloud-based solutions, and how to migrate existing workloads to the cloud. He enjoys relaxing with family and shooting hoops.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
		<item>
		<title>Optimizing Salesforce’s model endpoints with Amazon SageMaker AI inference components</title>
		<link>https://aws.amazon.com/blogs/machine-learning/optimizing-salesforces-model-endpoints-with-amazon-sagemaker-ai-inference-components/</link>
					
		
		<dc:creator><![CDATA[Rishu Aggarwal]]></dc:creator>
		<pubDate>Fri, 15 Aug 2025 16:41:28 +0000</pubDate>
				<category><![CDATA[Amazon SageMaker]]></category>
		<category><![CDATA[Amazon SageMaker AI]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Customer Solutions]]></category>
		<guid isPermaLink="false">9bfc81ec1ddd2269796ff3c19eac19f849599bf3</guid>

					<description>In this post, we share how the Salesforce AI Platform team optimized GPU utilization, improved resource efficiency and achieved cost savings using Amazon SageMaker AI, specifically inference components.</description>
										<content:encoded>&lt;p&gt;&lt;em&gt;This post is a joint collaboration between Salesforce and AWS and is being cross-published on both the &lt;a href="https://engineering.salesforce.com/how-aws-sagemaker-inference-components-save-ai-inference-costs-by-up-to-8x/" target="_blank" rel="noopener"&gt;Salesforce Engineering Blog&lt;/a&gt; and the AWS Machine Learning Blog.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://www.salesforce.com/artificial-intelligence/" target="_blank" rel="noopener"&gt;Salesforce AI&lt;/a&gt; Platform Model Serving team is dedicated to developing and managing services that power &lt;a href="https://aws.amazon.com/what-is/large-language-model/" target="_blank" rel="noopener"&gt;large language models&lt;/a&gt; (LLMs) and other AI workloads within Salesforce. Their main focus is on model onboarding, providing customers with a robust infrastructure to host a variety of ML models. Their mission is to streamline model deployment, enhance inference performance and optimize cost efficiency, ensuring seamless integration into Agentforce and other applications requiring inference. They’re committed to enhancing the model inferencing performance and overall efficiency by integrating state-of-the-art solutions and collaborating with leading technology providers, including open source communities and cloud services such as &lt;a href="https://aws.amazon.com/" target="_blank" rel="noopener"&gt;Amazon Web Services&lt;/a&gt; (AWS) and building it into a &lt;a href="https://engineering.salesforce.com/revealing-einsteins-blueprint-for-creating-the-new-unified-ai-platform-from-siloed-legacy-stacks/" target="_blank" rel="noopener"&gt;unified AI platform&lt;/a&gt;. This helps ensure Salesforce customers receive the most advanced AI technology available while optimizing the cost-performance of the serving infrastructure.&lt;/p&gt; 
&lt;p&gt;In this post, we share how the Salesforce AI Platform team optimized GPU utilization, improved resource efficiency and achieved cost savings using &lt;a href="https://aws.amazon.com/sagemaker-ai/" target="_blank" rel="noopener"&gt;Amazon SageMaker AI&lt;/a&gt;, specifically &lt;a href="https://aws.amazon.com/blogs/aws/amazon-sagemaker-adds-new-inference-capabilities-to-help-reduce-foundation-model-deployment-costs-and-latency/" target="_blank" rel="noopener"&gt;inference components&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;The challenge with hosting models for inference: Optimizing compute and cost-to-serve while maintaining performance&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Deploying models efficiently, reliably, and cost-effectively is a critical challenge for organizations of all sizes. The Salesforce AI Platform team is responsible for deploying their proprietary LLMs such as &lt;a href="https://github.com/salesforce/CodeGen" target="_blank" rel="noopener"&gt;CodeGen&lt;/a&gt; and &lt;a href="https://github.com/salesforce/xgen" target="_blank" rel="noopener"&gt;XGen&lt;/a&gt; on SageMaker AI and optimizing them for inference. Salesforce has multiple models distributed across single model endpoints (SMEs), supporting a diverse range of model sizes from a few gigabytes (GB) to 30 GB, each with unique performance requirements and infrastructure demands.&lt;/p&gt; 
&lt;p&gt;The team faced two distinct optimization challenges. Their larger models (20–30 GB) with lower traffic patterns were running on high-performance GPUs, resulting in underutilized multi-GPU instances and inefficient resource allocation. Meanwhile, their medium-sized models (approximately 15 GB) handling high-traffic workloads demanded low-latency, high-throughput processing capabilities. These models often incurred higher costs due to over-provisioning on similar multi-GPU setups. Here’s a sample illustration of Salesforce’s large and medium SageMaker endpoints and where resources are under-utilized:&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="alignnone wp-image-114564 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/08/15/ml-17729-replace1.jpg" alt="Salesforce SageMaker Endpoint GPU Utilization Before Inference Components" width="2560" height="1304"&gt;&lt;/p&gt; 
&lt;p&gt;Operating on &lt;a href="https://aws.amazon.com/ec2/instance-types/p4/" target="_blank" rel="noopener"&gt;Amazon EC2 P4d&lt;/a&gt; instances today, with plans to use the latest generation &lt;a href="https://aws.amazon.com/ec2/instance-types/p5/" target="_blank" rel="noopener"&gt;P5en instances&lt;/a&gt; equipped with NVIDIA H200 Tensor Core GPUs, the team sought an efficient resource optimization strategy that would maximize GPU utilization across their SageMaker AI endpoints while enabling scalable AI operations and extracting maximum value from their high-performance instances—all without compromising performance or over-provisioning hardware.&lt;/p&gt; 
&lt;p&gt;This challenge reflects a critical balance that enterprises must strike when scaling their AI operations: maximizing the performance of sophisticated AI workloads while optimizing infrastructure costs and resource efficiency. Salesforce needed a solution that would not only resolve their immediate deployment challenges but also create a flexible foundation capable of supporting their evolving AI initiatives.&lt;/p&gt; 
&lt;p&gt;To address these challenges, the Salesforce AI Platform team used SageMaker AI inference components that enabled deployment of multiple &lt;a href="https://aws.amazon.com/what-is/foundation-models/" target="_blank" rel="noopener"&gt;foundation models&lt;/a&gt; (FMs) on a single SageMaker AI endpoint with granular control over the number of accelerators and memory allocation per model. This helps improve resource utilization, reduces model deployment costs, and lets you scale endpoints together with your use cases.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Solution: Optimizing model deployment with Amazon SageMaker AI inference components&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;With Amazon SageMaker AI inference components, you can deploy one or more FMs on the same SageMaker AI endpoint and control how many accelerators and how much memory is reserved for each FM. This helps to improve resource utilization, reduces model deployment costs, and lets you scale endpoints together with your use cases. For each FM, you can define separate scaling policies to adapt to model usage patterns while further optimizing infrastructure costs. Here’s the illustration of Salesforce’s large and medium SageMaker endpoints after utilization has been improved with Inference Components:&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="size-full wp-image-112113 aligncenter" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/21/Fixed.png" alt="Salesforce SageMaker Endpoint After Inference Component Deployment" width="878" height="572"&gt;&lt;/p&gt; 
&lt;p&gt;An inference component abstracts ML models and enables assigning CPUs, GPU, and scaling policies per model. Inference components offer the following benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SageMaker AI will optimally place and pack models onto ML instances&lt;/strong&gt; to maximize utilization, leading to cost savings.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Each model scales independently&lt;/strong&gt; based on custom configurations, providing optimal resource allocation to meet specific application requirements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SageMaker AI will scale to add and remove instances dynamically&lt;/strong&gt; to maintain availability while keeping idle compute to a minimum.&lt;/li&gt; 
 &lt;li&gt;Organizations can scale down to zero copies of a model to free up resources for other models or specify to keep important models always loaded and ready to serve traffic for critical workloads.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;Configuring and managing inference component endpoints&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;You create the SageMaker AI endpoint with an endpoint configuration that defines the instance type and initial instance count for the endpoint. The model is configured in a new construct, an inference component. Here, you specify the number of accelerators and amount of memory you want to allocate to each copy of a model, together with the model artifacts, container image, and number of model copies to deploy.&lt;/p&gt; 
&lt;p&gt;As inference requests increase or decrease, the number of copies of your inference components can also scale up or down based on your auto scaling policies. SageMaker AI will handle the placement to optimize the packing of your models for availability and cost.&lt;/p&gt; 
&lt;p&gt;In addition, if you enable managed instance auto scaling, SageMaker AI will scale compute instances according to the number of inference components that need to be loaded at a given time to serve traffic. SageMaker AI will scale up the instances and pack your instances and inference components to optimize for cost while preserving model performance.&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href="https://aws.amazon.com/blogs/machine-learning/reduce-model-deployment-costs-by-50-on-average-using-sagemakers-latest-features/" target="_blank" rel="noopener"&gt;Reduce model deployment costs by 50% on average using the latest features of Amazon SageMaker&lt;/a&gt; for more details on how to use inference components.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;How Salesforce used Amazon SageMaker AI inference components&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Salesforce has several different proprietary models such as CodeGen originally spread across multiple SMEs. CodeGen is Salesforce’s in-house open source LLM for code understanding and code generation. Developers can use the CodeGen model to translate natural language, such as English, into programming languages, such as Python. Salesforce developed an ensemble of CodeGen models (Inline for automatic code completion, BlockGen for code block generation, and FlowGPT for process flow generation) specifically tuned for the Apex programming language. The models are being used in &lt;a href="https://developer.salesforce.com/blogs/2024/02/get-ai-powered-insights-for-your-apex-code-with-apexguru" target="_blank" rel="noopener"&gt;ApexGuru&lt;/a&gt;, a solution within the Salesforce platform that helps Salesforce developers tackle critical anti-patterns and hotspots in their Apex code.&lt;/p&gt; 
&lt;p&gt;Inference components enable multiple models to share GPU resources efficiently on the same endpoint. This consolidation not only delivers reduction in infrastructure costs through intelligent resource sharing and dynamic scaling, it also reduces operational overhead with lesser endpoints to manage. For their CodeGen ensemble models, the solution enabled model-specific resource allocation and independent scaling based on traffic patterns, providing optimal performance while maximizing infrastructure utilization.&lt;/p&gt; 
&lt;p&gt;To expand hosting options on SageMaker AI without affecting stability, performance, or usability, Salesforce introduced inference component endpoints alongside the existing SME.&lt;/p&gt; 
&lt;p&gt;This hybrid approach uses the strengths of each. SMEs provide dedicated hosting for each model and predictable performance for critical workloads with consistent traffic patterns, and inference components optimize resource utilization for variable workloads through dynamic scaling and efficient GPU sharing.&lt;/p&gt; 
&lt;p&gt;The Salesforce AI Platform team created a SageMaker AI endpoint with the desired instance type and initial instance count for the endpoint to handle their baseline inference requirements. Model packages are then attached dynamically, spinning up individual containers as needed. They configured each model, for example, BlockGen and TextEval models as individual inference components specifying precise resource allocations, including accelerator count, memory requirements, model artifacts, container image, and number of model copies to deploy. With this approach, Salesforce could efficiently host multiple model variants on the same endpoint while maintaining granular control over resource allocation and scaling behaviors.&lt;/p&gt; 
&lt;p&gt;By using the auto scaling capabilities, inference components can set up endpoints with multiple copies of models and automatically adjust GPU resources as traffic fluctuates. This allows each model to dynamically scale up or down within an endpoint based on configured GPU limits. By hosting multiple models on the same endpoint and automatically adjusting capacity in response to traffic fluctuations, Salesforce was able to significantly reduce the costs associated with traffic spikes. This means that Salesforce AI models can handle varying workloads efficiently without compromising performance. The graphic below shows Salesforce’s endpoints before and after the models were deployed with inference components:&lt;/p&gt; 
&lt;p&gt;&lt;img loading="lazy" class="aligncenter wp-image-111474 size-full" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/11/ML-17729-SFDC-Endpoint-Illustration-Fig3.jpg" alt="Salesforce Endpoints Before and After Inference Component Implementation" width="1288" height="714"&gt;&lt;/p&gt; 
&lt;p&gt;This solution has brought several key benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Optimized resource allocation&lt;/strong&gt; – Multiple models now efficiently share GPU resources, eliminating unnecessary provisioning while maintaining optimal performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost savings&lt;/strong&gt; – Through intelligent GPU resource management and dynamic scaling, Salesforce achieved significant reduction in infrastructure costs while eliminating idle compute resources.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced performance for smaller models&lt;/strong&gt; – Smaller models now use high-performance GPUs to meet their latency and throughput needs without incurring excessive costs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By refining GPU allocation at the model level through inference components, Salesforce improved resource efficiency and achieved a substantial reduction in operational cost while maintaining the high-performance standards their customers expect across a wide range of AI workloads. The cost savings are substantial and open up new opportunities for using high-end, expensive GPUs in a cost-effective manner.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Through their implementation of Amazon SageMaker AI inference components, Salesforce has transformed their AI infrastructure management, achieving up to an eight-fold reduction in deployment and infrastructure costs while maintaining high performance standards. The team learned that intelligent model packing and dynamic resource allocation were keys to solving their GPU utilization challenges across their diverse model portfolio. This implementation has transformed performance economics, allowing smaller models to use high performance GPUs, providing high throughput and low latency without the traditional cost overhead.&lt;/p&gt; 
&lt;p&gt;Today, their AI platform efficiently serves both large proprietary models such as CodeGen and smaller workloads on the same infrastructure, with optimized resource allocation ensuring high-performance delivery. With this approach, Salesforce can maximize the utilization of compute instances, scale to hundreds of models, and optimize costs while providing predictable performance. This solution has not only solved their immediate challenges of optimizing GPU utilization and cost management but has also positioned them for future growth. By establishing a more efficient and scalable infrastructure foundation, Salesforce can now confidently expand their AI offerings and explore more advanced use cases with expensive, high-performance GPUs such as P4d, P5, and P5en, knowing they can maximize the value of every computing resource. This transformation represents a significant step forward in their mission to deliver enterprise-grade AI solutions while maintaining operational efficiency and cost-effectiveness.&lt;/p&gt; 
&lt;p&gt;Looking ahead, Salesforce is poised to use the new Amazon SageMaker AI &lt;a href="https://aws.amazon.com/about-aws/whats-new/2025/03/amazon-sagemaker-inference-rolling-update-component-endpoints/" target="_blank" rel="noopener"&gt;rolling updates&lt;/a&gt; capability for inference component endpoints, a feature designed to streamline updates for models of different sizes while minimizing operational overhead. This advancement will enable them to update their models batch by batch, rather than using the traditional blue/green deployment method, providing greater flexibility and control over model updates while using minimal extra instances, rather than requiring doubled instances as in the past. By implementing these rolling updates alongside their existing dynamic scaling infrastructure and incorporating real-time safety checks, Salesforce is building a more resilient and adaptable AI platform. This strategic approach not only provides cost-effective and reliable deployments for their GPU-intensive workloads but also sets the stage for seamless integration of future AI innovations and model improvements.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href="https://aws.amazon.com/blogs/machine-learning/how-salesforce-achieves-high-performance-model-deployment-with-amazon-sagemaker-ai/" target="_blank" rel="noopener"&gt;How Salesforce achieves high-performance model deployment with Amazon SageMaker AI&lt;/a&gt; to learn more. For more information on how to get started with SageMaker AI, refer to &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/gs.html?icmpid=docs_sagemaker_lp/index.html" target="_blank" rel="noopener"&gt;Guide to getting set up with Amazon SageMaker AI&lt;/a&gt;. To learn more about Inference Components, refer to &lt;a href="https://aws.amazon.com/blogs/aws/amazon-sagemaker-adds-new-inference-capabilities-to-help-reduce-foundation-model-deployment-costs-and-latency/" target="_blank" rel="noopener"&gt;Amazon SageMaker adds new inference capabilities to help reduce foundation model deployment costs and latency&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;About the Authors&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="wp-image-112005 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/17/rishu.jpg" alt="" width="100" height="125"&gt;Rishu Aggarwal&lt;/strong&gt; is a Director of Engineering at Salesforce based in Bangalore, India. Rishu leads the Salesforce AI Platform Model Serving Engineering team in solving the complex problems of inference optimizations and deployment of LLMs at scale within the Salesforce ecosystem. Rishu is a staunch Tech Evangelist for AI and has deep interests in Artificial Intelligence, Generative AI, Neural Networks and Big Data.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="wp-image-80859 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2024/07/19/RielahDeJesusPhotoBio-1.jpg" alt="" width="100" height="133"&gt;Rielah De Jesus&lt;/strong&gt; is a Principal Solutions Architect at AWS who has successfully helped various enterprise customers in the DC, Maryland, and Virginia area move to the cloud. In her current role, she acts as a customer advocate and technical advisor focused on helping organizations like Salesforce achieve success on the AWS platform. She is also a staunch supporter of women in IT and is very passionate about finding ways to creatively use technology and data to solve everyday challenges.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="wp-image-112006 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/17/ML-17729-Pavithra-Hariharasudhan-Author3-279x300-1.jpg" alt="" width="100" height="107"&gt;&lt;/strong&gt;&lt;strong&gt;Pavithra Hariharasudhan&lt;/strong&gt; is a Senior Technical Account Manager and Enterprise Support Lead at AWS, supporting leading AWS Strategic customers with their global cloud operations. She assists organizations in resolving operational challenges and maintaining efficient AWS environments, empowering them to achieve operational excellence while accelerating business outcomes.&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="wp-image-112007 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/07/17/ML-17729-Ruchita-Jadav-Author4-225x300-1.jpg" alt="" width="100" height="133"&gt;Ruchita Jadav&lt;/strong&gt; is a Senior Member of Technical Staff at Salesforce, with over 10 years of experience in software and machine learning engineering. Her expertise lies in building scalable platform solutions across the retail and CRM domains. At Salesforce, she leads initiatives focused on model hosting, inference optimization, and LLMOps, enabling efficient and scalable deployment of AI and large language models. She holds a Bachelor of Technology in Electronics &amp;amp; Communication from Gujarat Technological University (GTU).&lt;/p&gt; 
&lt;p style="clear: both"&gt;&lt;strong&gt;&lt;img loading="lazy" class="wp-image-53673 size-full alignleft" src="https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2023/04/06/karpmar.jpg" alt="" width="100" height="114"&gt;Marc Karp&lt;/strong&gt; is an ML Architect with the Amazon SageMaker Service team. He focuses on helping customers design, deploy, and manage ML workloads at scale. In his spare time, he enjoys traveling and exploring new places.&lt;/p&gt;</content:encoded>
					
					
			
		
		
			</item>
	</channel>
</rss>